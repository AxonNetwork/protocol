// Code generated by protoc-gen-go. DO NOT EDIT.
// source: noderpc.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SetUsernameRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetUsernameRequest) Reset()         { *m = SetUsernameRequest{} }
func (m *SetUsernameRequest) String() string { return proto.CompactTextString(m) }
func (*SetUsernameRequest) ProtoMessage()    {}
func (*SetUsernameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{0}
}
func (m *SetUsernameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetUsernameRequest.Unmarshal(m, b)
}
func (m *SetUsernameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetUsernameRequest.Marshal(b, m, deterministic)
}
func (dst *SetUsernameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetUsernameRequest.Merge(dst, src)
}
func (m *SetUsernameRequest) XXX_Size() int {
	return xxx_messageInfo_SetUsernameRequest.Size(m)
}
func (m *SetUsernameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetUsernameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetUsernameRequest proto.InternalMessageInfo

func (m *SetUsernameRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type SetUsernameResponse struct {
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetUsernameResponse) Reset()         { *m = SetUsernameResponse{} }
func (m *SetUsernameResponse) String() string { return proto.CompactTextString(m) }
func (*SetUsernameResponse) ProtoMessage()    {}
func (*SetUsernameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{1}
}
func (m *SetUsernameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetUsernameResponse.Unmarshal(m, b)
}
func (m *SetUsernameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetUsernameResponse.Marshal(b, m, deterministic)
}
func (dst *SetUsernameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetUsernameResponse.Merge(dst, src)
}
func (m *SetUsernameResponse) XXX_Size() int {
	return xxx_messageInfo_SetUsernameResponse.Size(m)
}
func (m *SetUsernameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetUsernameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetUsernameResponse proto.InternalMessageInfo

func (m *SetUsernameResponse) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type GetUsernameRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUsernameRequest) Reset()         { *m = GetUsernameRequest{} }
func (m *GetUsernameRequest) String() string { return proto.CompactTextString(m) }
func (*GetUsernameRequest) ProtoMessage()    {}
func (*GetUsernameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{2}
}
func (m *GetUsernameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUsernameRequest.Unmarshal(m, b)
}
func (m *GetUsernameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUsernameRequest.Marshal(b, m, deterministic)
}
func (dst *GetUsernameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUsernameRequest.Merge(dst, src)
}
func (m *GetUsernameRequest) XXX_Size() int {
	return xxx_messageInfo_GetUsernameRequest.Size(m)
}
func (m *GetUsernameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUsernameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUsernameRequest proto.InternalMessageInfo

type GetUsernameResponse struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUsernameResponse) Reset()         { *m = GetUsernameResponse{} }
func (m *GetUsernameResponse) String() string { return proto.CompactTextString(m) }
func (*GetUsernameResponse) ProtoMessage()    {}
func (*GetUsernameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{3}
}
func (m *GetUsernameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUsernameResponse.Unmarshal(m, b)
}
func (m *GetUsernameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUsernameResponse.Marshal(b, m, deterministic)
}
func (dst *GetUsernameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUsernameResponse.Merge(dst, src)
}
func (m *GetUsernameResponse) XXX_Size() int {
	return xxx_messageInfo_GetUsernameResponse.Size(m)
}
func (m *GetUsernameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUsernameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUsernameResponse proto.InternalMessageInfo

func (m *GetUsernameResponse) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GetUsernameResponse) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type InitRepoRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitRepoRequest) Reset()         { *m = InitRepoRequest{} }
func (m *InitRepoRequest) String() string { return proto.CompactTextString(m) }
func (*InitRepoRequest) ProtoMessage()    {}
func (*InitRepoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{4}
}
func (m *InitRepoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitRepoRequest.Unmarshal(m, b)
}
func (m *InitRepoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitRepoRequest.Marshal(b, m, deterministic)
}
func (dst *InitRepoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitRepoRequest.Merge(dst, src)
}
func (m *InitRepoRequest) XXX_Size() int {
	return xxx_messageInfo_InitRepoRequest.Size(m)
}
func (m *InitRepoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InitRepoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InitRepoRequest proto.InternalMessageInfo

func (m *InitRepoRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *InitRepoRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *InitRepoRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InitRepoRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type InitRepoResponse struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitRepoResponse) Reset()         { *m = InitRepoResponse{} }
func (m *InitRepoResponse) String() string { return proto.CompactTextString(m) }
func (*InitRepoResponse) ProtoMessage()    {}
func (*InitRepoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{5}
}
func (m *InitRepoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitRepoResponse.Unmarshal(m, b)
}
func (m *InitRepoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitRepoResponse.Marshal(b, m, deterministic)
}
func (dst *InitRepoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitRepoResponse.Merge(dst, src)
}
func (m *InitRepoResponse) XXX_Size() int {
	return xxx_messageInfo_InitRepoResponse.Size(m)
}
func (m *InitRepoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InitRepoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InitRepoResponse proto.InternalMessageInfo

func (m *InitRepoResponse) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type CheckpointRepoRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckpointRepoRequest) Reset()         { *m = CheckpointRepoRequest{} }
func (m *CheckpointRepoRequest) String() string { return proto.CompactTextString(m) }
func (*CheckpointRepoRequest) ProtoMessage()    {}
func (*CheckpointRepoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{6}
}
func (m *CheckpointRepoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckpointRepoRequest.Unmarshal(m, b)
}
func (m *CheckpointRepoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckpointRepoRequest.Marshal(b, m, deterministic)
}
func (dst *CheckpointRepoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckpointRepoRequest.Merge(dst, src)
}
func (m *CheckpointRepoRequest) XXX_Size() int {
	return xxx_messageInfo_CheckpointRepoRequest.Size(m)
}
func (m *CheckpointRepoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckpointRepoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckpointRepoRequest proto.InternalMessageInfo

func (m *CheckpointRepoRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CheckpointRepoRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CheckpointRepoResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckpointRepoResponse) Reset()         { *m = CheckpointRepoResponse{} }
func (m *CheckpointRepoResponse) String() string { return proto.CompactTextString(m) }
func (*CheckpointRepoResponse) ProtoMessage()    {}
func (*CheckpointRepoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{7}
}
func (m *CheckpointRepoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckpointRepoResponse.Unmarshal(m, b)
}
func (m *CheckpointRepoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckpointRepoResponse.Marshal(b, m, deterministic)
}
func (dst *CheckpointRepoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckpointRepoResponse.Merge(dst, src)
}
func (m *CheckpointRepoResponse) XXX_Size() int {
	return xxx_messageInfo_CheckpointRepoResponse.Size(m)
}
func (m *CheckpointRepoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckpointRepoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckpointRepoResponse proto.InternalMessageInfo

func (m *CheckpointRepoResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type PullRepoRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullRepoRequest) Reset()         { *m = PullRepoRequest{} }
func (m *PullRepoRequest) String() string { return proto.CompactTextString(m) }
func (*PullRepoRequest) ProtoMessage()    {}
func (*PullRepoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{8}
}
func (m *PullRepoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullRepoRequest.Unmarshal(m, b)
}
func (m *PullRepoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullRepoRequest.Marshal(b, m, deterministic)
}
func (dst *PullRepoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullRepoRequest.Merge(dst, src)
}
func (m *PullRepoRequest) XXX_Size() int {
	return xxx_messageInfo_PullRepoRequest.Size(m)
}
func (m *PullRepoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PullRepoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PullRepoRequest proto.InternalMessageInfo

func (m *PullRepoRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type PullRepoResponsePacket struct {
	ToFetch              int64    `protobuf:"varint,1,opt,name=toFetch,proto3" json:"toFetch,omitempty"`
	Fetched              int64    `protobuf:"varint,2,opt,name=fetched,proto3" json:"fetched,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullRepoResponsePacket) Reset()         { *m = PullRepoResponsePacket{} }
func (m *PullRepoResponsePacket) String() string { return proto.CompactTextString(m) }
func (*PullRepoResponsePacket) ProtoMessage()    {}
func (*PullRepoResponsePacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{9}
}
func (m *PullRepoResponsePacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullRepoResponsePacket.Unmarshal(m, b)
}
func (m *PullRepoResponsePacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullRepoResponsePacket.Marshal(b, m, deterministic)
}
func (dst *PullRepoResponsePacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullRepoResponsePacket.Merge(dst, src)
}
func (m *PullRepoResponsePacket) XXX_Size() int {
	return xxx_messageInfo_PullRepoResponsePacket.Size(m)
}
func (m *PullRepoResponsePacket) XXX_DiscardUnknown() {
	xxx_messageInfo_PullRepoResponsePacket.DiscardUnknown(m)
}

var xxx_messageInfo_PullRepoResponsePacket proto.InternalMessageInfo

func (m *PullRepoResponsePacket) GetToFetch() int64 {
	if m != nil {
		return m.ToFetch
	}
	return 0
}

func (m *PullRepoResponsePacket) GetFetched() int64 {
	if m != nil {
		return m.Fetched
	}
	return 0
}

type CloneRepoRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloneRepoRequest) Reset()         { *m = CloneRepoRequest{} }
func (m *CloneRepoRequest) String() string { return proto.CompactTextString(m) }
func (*CloneRepoRequest) ProtoMessage()    {}
func (*CloneRepoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{10}
}
func (m *CloneRepoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloneRepoRequest.Unmarshal(m, b)
}
func (m *CloneRepoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloneRepoRequest.Marshal(b, m, deterministic)
}
func (dst *CloneRepoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloneRepoRequest.Merge(dst, src)
}
func (m *CloneRepoRequest) XXX_Size() int {
	return xxx_messageInfo_CloneRepoRequest.Size(m)
}
func (m *CloneRepoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloneRepoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloneRepoRequest proto.InternalMessageInfo

func (m *CloneRepoRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *CloneRepoRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CloneRepoRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CloneRepoRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type CloneRepoResponsePacket struct {
	// Types that are valid to be assigned to Payload:
	//	*CloneRepoResponsePacket_Progress_
	//	*CloneRepoResponsePacket_Success_
	Payload              isCloneRepoResponsePacket_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *CloneRepoResponsePacket) Reset()         { *m = CloneRepoResponsePacket{} }
func (m *CloneRepoResponsePacket) String() string { return proto.CompactTextString(m) }
func (*CloneRepoResponsePacket) ProtoMessage()    {}
func (*CloneRepoResponsePacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{11}
}
func (m *CloneRepoResponsePacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloneRepoResponsePacket.Unmarshal(m, b)
}
func (m *CloneRepoResponsePacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloneRepoResponsePacket.Marshal(b, m, deterministic)
}
func (dst *CloneRepoResponsePacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloneRepoResponsePacket.Merge(dst, src)
}
func (m *CloneRepoResponsePacket) XXX_Size() int {
	return xxx_messageInfo_CloneRepoResponsePacket.Size(m)
}
func (m *CloneRepoResponsePacket) XXX_DiscardUnknown() {
	xxx_messageInfo_CloneRepoResponsePacket.DiscardUnknown(m)
}

var xxx_messageInfo_CloneRepoResponsePacket proto.InternalMessageInfo

type isCloneRepoResponsePacket_Payload interface {
	isCloneRepoResponsePacket_Payload()
}

type CloneRepoResponsePacket_Progress_ struct {
	Progress *CloneRepoResponsePacket_Progress `protobuf:"bytes,1,opt,name=progress,proto3,oneof"`
}

type CloneRepoResponsePacket_Success_ struct {
	Success *CloneRepoResponsePacket_Success `protobuf:"bytes,2,opt,name=success,proto3,oneof"`
}

func (*CloneRepoResponsePacket_Progress_) isCloneRepoResponsePacket_Payload() {}

func (*CloneRepoResponsePacket_Success_) isCloneRepoResponsePacket_Payload() {}

func (m *CloneRepoResponsePacket) GetPayload() isCloneRepoResponsePacket_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *CloneRepoResponsePacket) GetProgress() *CloneRepoResponsePacket_Progress {
	if x, ok := m.GetPayload().(*CloneRepoResponsePacket_Progress_); ok {
		return x.Progress
	}
	return nil
}

func (m *CloneRepoResponsePacket) GetSuccess() *CloneRepoResponsePacket_Success {
	if x, ok := m.GetPayload().(*CloneRepoResponsePacket_Success_); ok {
		return x.Success
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CloneRepoResponsePacket) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CloneRepoResponsePacket_OneofMarshaler, _CloneRepoResponsePacket_OneofUnmarshaler, _CloneRepoResponsePacket_OneofSizer, []interface{}{
		(*CloneRepoResponsePacket_Progress_)(nil),
		(*CloneRepoResponsePacket_Success_)(nil),
	}
}

func _CloneRepoResponsePacket_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CloneRepoResponsePacket)
	// payload
	switch x := m.Payload.(type) {
	case *CloneRepoResponsePacket_Progress_:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Progress); err != nil {
			return err
		}
	case *CloneRepoResponsePacket_Success_:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Success); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CloneRepoResponsePacket.Payload has unexpected type %T", x)
	}
	return nil
}

func _CloneRepoResponsePacket_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CloneRepoResponsePacket)
	switch tag {
	case 1: // payload.progress
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CloneRepoResponsePacket_Progress)
		err := b.DecodeMessage(msg)
		m.Payload = &CloneRepoResponsePacket_Progress_{msg}
		return true, err
	case 2: // payload.success
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CloneRepoResponsePacket_Success)
		err := b.DecodeMessage(msg)
		m.Payload = &CloneRepoResponsePacket_Success_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CloneRepoResponsePacket_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CloneRepoResponsePacket)
	// payload
	switch x := m.Payload.(type) {
	case *CloneRepoResponsePacket_Progress_:
		s := proto.Size(x.Progress)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CloneRepoResponsePacket_Success_:
		s := proto.Size(x.Success)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CloneRepoResponsePacket_Progress struct {
	ToFetch              int64    `protobuf:"varint,1,opt,name=toFetch,proto3" json:"toFetch,omitempty"`
	Fetched              int64    `protobuf:"varint,2,opt,name=fetched,proto3" json:"fetched,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloneRepoResponsePacket_Progress) Reset()         { *m = CloneRepoResponsePacket_Progress{} }
func (m *CloneRepoResponsePacket_Progress) String() string { return proto.CompactTextString(m) }
func (*CloneRepoResponsePacket_Progress) ProtoMessage()    {}
func (*CloneRepoResponsePacket_Progress) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{11, 0}
}
func (m *CloneRepoResponsePacket_Progress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloneRepoResponsePacket_Progress.Unmarshal(m, b)
}
func (m *CloneRepoResponsePacket_Progress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloneRepoResponsePacket_Progress.Marshal(b, m, deterministic)
}
func (dst *CloneRepoResponsePacket_Progress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloneRepoResponsePacket_Progress.Merge(dst, src)
}
func (m *CloneRepoResponsePacket_Progress) XXX_Size() int {
	return xxx_messageInfo_CloneRepoResponsePacket_Progress.Size(m)
}
func (m *CloneRepoResponsePacket_Progress) XXX_DiscardUnknown() {
	xxx_messageInfo_CloneRepoResponsePacket_Progress.DiscardUnknown(m)
}

var xxx_messageInfo_CloneRepoResponsePacket_Progress proto.InternalMessageInfo

func (m *CloneRepoResponsePacket_Progress) GetToFetch() int64 {
	if m != nil {
		return m.ToFetch
	}
	return 0
}

func (m *CloneRepoResponsePacket_Progress) GetFetched() int64 {
	if m != nil {
		return m.Fetched
	}
	return 0
}

type CloneRepoResponsePacket_Success struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloneRepoResponsePacket_Success) Reset()         { *m = CloneRepoResponsePacket_Success{} }
func (m *CloneRepoResponsePacket_Success) String() string { return proto.CompactTextString(m) }
func (*CloneRepoResponsePacket_Success) ProtoMessage()    {}
func (*CloneRepoResponsePacket_Success) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{11, 1}
}
func (m *CloneRepoResponsePacket_Success) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloneRepoResponsePacket_Success.Unmarshal(m, b)
}
func (m *CloneRepoResponsePacket_Success) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloneRepoResponsePacket_Success.Marshal(b, m, deterministic)
}
func (dst *CloneRepoResponsePacket_Success) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloneRepoResponsePacket_Success.Merge(dst, src)
}
func (m *CloneRepoResponsePacket_Success) XXX_Size() int {
	return xxx_messageInfo_CloneRepoResponsePacket_Success.Size(m)
}
func (m *CloneRepoResponsePacket_Success) XXX_DiscardUnknown() {
	xxx_messageInfo_CloneRepoResponsePacket_Success.DiscardUnknown(m)
}

var xxx_messageInfo_CloneRepoResponsePacket_Success proto.InternalMessageInfo

func (m *CloneRepoResponsePacket_Success) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type FetchFromCommitRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Commit               []byte   `protobuf:"bytes,3,opt,name=commit,proto3" json:"commit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchFromCommitRequest) Reset()         { *m = FetchFromCommitRequest{} }
func (m *FetchFromCommitRequest) String() string { return proto.CompactTextString(m) }
func (*FetchFromCommitRequest) ProtoMessage()    {}
func (*FetchFromCommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{12}
}
func (m *FetchFromCommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchFromCommitRequest.Unmarshal(m, b)
}
func (m *FetchFromCommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchFromCommitRequest.Marshal(b, m, deterministic)
}
func (dst *FetchFromCommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchFromCommitRequest.Merge(dst, src)
}
func (m *FetchFromCommitRequest) XXX_Size() int {
	return xxx_messageInfo_FetchFromCommitRequest.Size(m)
}
func (m *FetchFromCommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchFromCommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchFromCommitRequest proto.InternalMessageInfo

func (m *FetchFromCommitRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *FetchFromCommitRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *FetchFromCommitRequest) GetCommit() []byte {
	if m != nil {
		return m.Commit
	}
	return nil
}

type FetchFromCommitResponse struct {
	// Types that are valid to be assigned to Payload:
	//	*FetchFromCommitResponse_Header_
	//	*FetchFromCommitResponse_PackfileHeader_
	//	*FetchFromCommitResponse_PackfileData_
	Payload              isFetchFromCommitResponse_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *FetchFromCommitResponse) Reset()         { *m = FetchFromCommitResponse{} }
func (m *FetchFromCommitResponse) String() string { return proto.CompactTextString(m) }
func (*FetchFromCommitResponse) ProtoMessage()    {}
func (*FetchFromCommitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{13}
}
func (m *FetchFromCommitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchFromCommitResponse.Unmarshal(m, b)
}
func (m *FetchFromCommitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchFromCommitResponse.Marshal(b, m, deterministic)
}
func (dst *FetchFromCommitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchFromCommitResponse.Merge(dst, src)
}
func (m *FetchFromCommitResponse) XXX_Size() int {
	return xxx_messageInfo_FetchFromCommitResponse.Size(m)
}
func (m *FetchFromCommitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchFromCommitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchFromCommitResponse proto.InternalMessageInfo

type isFetchFromCommitResponse_Payload interface {
	isFetchFromCommitResponse_Payload()
}

type FetchFromCommitResponse_Header_ struct {
	Header *FetchFromCommitResponse_Header `protobuf:"bytes,1,opt,name=header,proto3,oneof"`
}

type FetchFromCommitResponse_PackfileHeader_ struct {
	PackfileHeader *FetchFromCommitResponse_PackfileHeader `protobuf:"bytes,2,opt,name=packfileHeader,proto3,oneof"`
}

type FetchFromCommitResponse_PackfileData_ struct {
	PackfileData *FetchFromCommitResponse_PackfileData `protobuf:"bytes,3,opt,name=packfileData,proto3,oneof"`
}

func (*FetchFromCommitResponse_Header_) isFetchFromCommitResponse_Payload() {}

func (*FetchFromCommitResponse_PackfileHeader_) isFetchFromCommitResponse_Payload() {}

func (*FetchFromCommitResponse_PackfileData_) isFetchFromCommitResponse_Payload() {}

func (m *FetchFromCommitResponse) GetPayload() isFetchFromCommitResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *FetchFromCommitResponse) GetHeader() *FetchFromCommitResponse_Header {
	if x, ok := m.GetPayload().(*FetchFromCommitResponse_Header_); ok {
		return x.Header
	}
	return nil
}

func (m *FetchFromCommitResponse) GetPackfileHeader() *FetchFromCommitResponse_PackfileHeader {
	if x, ok := m.GetPayload().(*FetchFromCommitResponse_PackfileHeader_); ok {
		return x.PackfileHeader
	}
	return nil
}

func (m *FetchFromCommitResponse) GetPackfileData() *FetchFromCommitResponse_PackfileData {
	if x, ok := m.GetPayload().(*FetchFromCommitResponse_PackfileData_); ok {
		return x.PackfileData
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FetchFromCommitResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FetchFromCommitResponse_OneofMarshaler, _FetchFromCommitResponse_OneofUnmarshaler, _FetchFromCommitResponse_OneofSizer, []interface{}{
		(*FetchFromCommitResponse_Header_)(nil),
		(*FetchFromCommitResponse_PackfileHeader_)(nil),
		(*FetchFromCommitResponse_PackfileData_)(nil),
	}
}

func _FetchFromCommitResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FetchFromCommitResponse)
	// payload
	switch x := m.Payload.(type) {
	case *FetchFromCommitResponse_Header_:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Header); err != nil {
			return err
		}
	case *FetchFromCommitResponse_PackfileHeader_:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PackfileHeader); err != nil {
			return err
		}
	case *FetchFromCommitResponse_PackfileData_:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PackfileData); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("FetchFromCommitResponse.Payload has unexpected type %T", x)
	}
	return nil
}

func _FetchFromCommitResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FetchFromCommitResponse)
	switch tag {
	case 1: // payload.header
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FetchFromCommitResponse_Header)
		err := b.DecodeMessage(msg)
		m.Payload = &FetchFromCommitResponse_Header_{msg}
		return true, err
	case 2: // payload.packfileHeader
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FetchFromCommitResponse_PackfileHeader)
		err := b.DecodeMessage(msg)
		m.Payload = &FetchFromCommitResponse_PackfileHeader_{msg}
		return true, err
	case 3: // payload.packfileData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FetchFromCommitResponse_PackfileData)
		err := b.DecodeMessage(msg)
		m.Payload = &FetchFromCommitResponse_PackfileData_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _FetchFromCommitResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FetchFromCommitResponse)
	// payload
	switch x := m.Payload.(type) {
	case *FetchFromCommitResponse_Header_:
		s := proto.Size(x.Header)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FetchFromCommitResponse_PackfileHeader_:
		s := proto.Size(x.PackfileHeader)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FetchFromCommitResponse_PackfileData_:
		s := proto.Size(x.PackfileData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type FetchFromCommitResponse_Header struct {
	UncompressedSize     int64    `protobuf:"varint,1,opt,name=uncompressedSize,proto3" json:"uncompressedSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchFromCommitResponse_Header) Reset()         { *m = FetchFromCommitResponse_Header{} }
func (m *FetchFromCommitResponse_Header) String() string { return proto.CompactTextString(m) }
func (*FetchFromCommitResponse_Header) ProtoMessage()    {}
func (*FetchFromCommitResponse_Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{13, 0}
}
func (m *FetchFromCommitResponse_Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchFromCommitResponse_Header.Unmarshal(m, b)
}
func (m *FetchFromCommitResponse_Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchFromCommitResponse_Header.Marshal(b, m, deterministic)
}
func (dst *FetchFromCommitResponse_Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchFromCommitResponse_Header.Merge(dst, src)
}
func (m *FetchFromCommitResponse_Header) XXX_Size() int {
	return xxx_messageInfo_FetchFromCommitResponse_Header.Size(m)
}
func (m *FetchFromCommitResponse_Header) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchFromCommitResponse_Header.DiscardUnknown(m)
}

var xxx_messageInfo_FetchFromCommitResponse_Header proto.InternalMessageInfo

func (m *FetchFromCommitResponse_Header) GetUncompressedSize() int64 {
	if m != nil {
		return m.UncompressedSize
	}
	return 0
}

type FetchFromCommitResponse_PackfileHeader struct {
	PackfileID           []byte   `protobuf:"bytes,1,opt,name=packfileID,proto3" json:"packfileID,omitempty"`
	UncompressedSize     int64    `protobuf:"varint,2,opt,name=uncompressedSize,proto3" json:"uncompressedSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchFromCommitResponse_PackfileHeader) Reset() {
	*m = FetchFromCommitResponse_PackfileHeader{}
}
func (m *FetchFromCommitResponse_PackfileHeader) String() string { return proto.CompactTextString(m) }
func (*FetchFromCommitResponse_PackfileHeader) ProtoMessage()    {}
func (*FetchFromCommitResponse_PackfileHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{13, 1}
}
func (m *FetchFromCommitResponse_PackfileHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchFromCommitResponse_PackfileHeader.Unmarshal(m, b)
}
func (m *FetchFromCommitResponse_PackfileHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchFromCommitResponse_PackfileHeader.Marshal(b, m, deterministic)
}
func (dst *FetchFromCommitResponse_PackfileHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchFromCommitResponse_PackfileHeader.Merge(dst, src)
}
func (m *FetchFromCommitResponse_PackfileHeader) XXX_Size() int {
	return xxx_messageInfo_FetchFromCommitResponse_PackfileHeader.Size(m)
}
func (m *FetchFromCommitResponse_PackfileHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchFromCommitResponse_PackfileHeader.DiscardUnknown(m)
}

var xxx_messageInfo_FetchFromCommitResponse_PackfileHeader proto.InternalMessageInfo

func (m *FetchFromCommitResponse_PackfileHeader) GetPackfileID() []byte {
	if m != nil {
		return m.PackfileID
	}
	return nil
}

func (m *FetchFromCommitResponse_PackfileHeader) GetUncompressedSize() int64 {
	if m != nil {
		return m.UncompressedSize
	}
	return 0
}

type FetchFromCommitResponse_PackfileData struct {
	PackfileID           []byte   `protobuf:"bytes,1,opt,name=packfileID,proto3" json:"packfileID,omitempty"`
	ToFetch              int64    `protobuf:"varint,4,opt,name=toFetch,proto3" json:"toFetch,omitempty"`
	Fetched              int64    `protobuf:"varint,5,opt,name=fetched,proto3" json:"fetched,omitempty"`
	Data                 []byte   `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	End                  bool     `protobuf:"varint,7,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchFromCommitResponse_PackfileData) Reset()         { *m = FetchFromCommitResponse_PackfileData{} }
func (m *FetchFromCommitResponse_PackfileData) String() string { return proto.CompactTextString(m) }
func (*FetchFromCommitResponse_PackfileData) ProtoMessage()    {}
func (*FetchFromCommitResponse_PackfileData) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{13, 2}
}
func (m *FetchFromCommitResponse_PackfileData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchFromCommitResponse_PackfileData.Unmarshal(m, b)
}
func (m *FetchFromCommitResponse_PackfileData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchFromCommitResponse_PackfileData.Marshal(b, m, deterministic)
}
func (dst *FetchFromCommitResponse_PackfileData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchFromCommitResponse_PackfileData.Merge(dst, src)
}
func (m *FetchFromCommitResponse_PackfileData) XXX_Size() int {
	return xxx_messageInfo_FetchFromCommitResponse_PackfileData.Size(m)
}
func (m *FetchFromCommitResponse_PackfileData) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchFromCommitResponse_PackfileData.DiscardUnknown(m)
}

var xxx_messageInfo_FetchFromCommitResponse_PackfileData proto.InternalMessageInfo

func (m *FetchFromCommitResponse_PackfileData) GetPackfileID() []byte {
	if m != nil {
		return m.PackfileID
	}
	return nil
}

func (m *FetchFromCommitResponse_PackfileData) GetToFetch() int64 {
	if m != nil {
		return m.ToFetch
	}
	return 0
}

func (m *FetchFromCommitResponse_PackfileData) GetFetched() int64 {
	if m != nil {
		return m.Fetched
	}
	return 0
}

func (m *FetchFromCommitResponse_PackfileData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FetchFromCommitResponse_PackfileData) GetEnd() bool {
	if m != nil {
		return m.End
	}
	return false
}

type RegisterRepoIDRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRepoIDRequest) Reset()         { *m = RegisterRepoIDRequest{} }
func (m *RegisterRepoIDRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRepoIDRequest) ProtoMessage()    {}
func (*RegisterRepoIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{14}
}
func (m *RegisterRepoIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRepoIDRequest.Unmarshal(m, b)
}
func (m *RegisterRepoIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRepoIDRequest.Marshal(b, m, deterministic)
}
func (dst *RegisterRepoIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRepoIDRequest.Merge(dst, src)
}
func (m *RegisterRepoIDRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRepoIDRequest.Size(m)
}
func (m *RegisterRepoIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRepoIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRepoIDRequest proto.InternalMessageInfo

func (m *RegisterRepoIDRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

type RegisterRepoIDResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRepoIDResponse) Reset()         { *m = RegisterRepoIDResponse{} }
func (m *RegisterRepoIDResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterRepoIDResponse) ProtoMessage()    {}
func (*RegisterRepoIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{15}
}
func (m *RegisterRepoIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRepoIDResponse.Unmarshal(m, b)
}
func (m *RegisterRepoIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRepoIDResponse.Marshal(b, m, deterministic)
}
func (dst *RegisterRepoIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRepoIDResponse.Merge(dst, src)
}
func (m *RegisterRepoIDResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterRepoIDResponse.Size(m)
}
func (m *RegisterRepoIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRepoIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRepoIDResponse proto.InternalMessageInfo

type TrackLocalRepoRequest struct {
	RepoPath             string   `protobuf:"bytes,1,opt,name=repoPath,proto3" json:"repoPath,omitempty"`
	ForceReload          bool     `protobuf:"varint,2,opt,name=forceReload,proto3" json:"forceReload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrackLocalRepoRequest) Reset()         { *m = TrackLocalRepoRequest{} }
func (m *TrackLocalRepoRequest) String() string { return proto.CompactTextString(m) }
func (*TrackLocalRepoRequest) ProtoMessage()    {}
func (*TrackLocalRepoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{16}
}
func (m *TrackLocalRepoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackLocalRepoRequest.Unmarshal(m, b)
}
func (m *TrackLocalRepoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackLocalRepoRequest.Marshal(b, m, deterministic)
}
func (dst *TrackLocalRepoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackLocalRepoRequest.Merge(dst, src)
}
func (m *TrackLocalRepoRequest) XXX_Size() int {
	return xxx_messageInfo_TrackLocalRepoRequest.Size(m)
}
func (m *TrackLocalRepoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackLocalRepoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TrackLocalRepoRequest proto.InternalMessageInfo

func (m *TrackLocalRepoRequest) GetRepoPath() string {
	if m != nil {
		return m.RepoPath
	}
	return ""
}

func (m *TrackLocalRepoRequest) GetForceReload() bool {
	if m != nil {
		return m.ForceReload
	}
	return false
}

type TrackLocalRepoResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrackLocalRepoResponse) Reset()         { *m = TrackLocalRepoResponse{} }
func (m *TrackLocalRepoResponse) String() string { return proto.CompactTextString(m) }
func (*TrackLocalRepoResponse) ProtoMessage()    {}
func (*TrackLocalRepoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{17}
}
func (m *TrackLocalRepoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackLocalRepoResponse.Unmarshal(m, b)
}
func (m *TrackLocalRepoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackLocalRepoResponse.Marshal(b, m, deterministic)
}
func (dst *TrackLocalRepoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackLocalRepoResponse.Merge(dst, src)
}
func (m *TrackLocalRepoResponse) XXX_Size() int {
	return xxx_messageInfo_TrackLocalRepoResponse.Size(m)
}
func (m *TrackLocalRepoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackLocalRepoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TrackLocalRepoResponse proto.InternalMessageInfo

type GetLocalReposRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLocalReposRequest) Reset()         { *m = GetLocalReposRequest{} }
func (m *GetLocalReposRequest) String() string { return proto.CompactTextString(m) }
func (*GetLocalReposRequest) ProtoMessage()    {}
func (*GetLocalReposRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{18}
}
func (m *GetLocalReposRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLocalReposRequest.Unmarshal(m, b)
}
func (m *GetLocalReposRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLocalReposRequest.Marshal(b, m, deterministic)
}
func (dst *GetLocalReposRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLocalReposRequest.Merge(dst, src)
}
func (m *GetLocalReposRequest) XXX_Size() int {
	return xxx_messageInfo_GetLocalReposRequest.Size(m)
}
func (m *GetLocalReposRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLocalReposRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLocalReposRequest proto.InternalMessageInfo

type GetLocalReposResponsePacket struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLocalReposResponsePacket) Reset()         { *m = GetLocalReposResponsePacket{} }
func (m *GetLocalReposResponsePacket) String() string { return proto.CompactTextString(m) }
func (*GetLocalReposResponsePacket) ProtoMessage()    {}
func (*GetLocalReposResponsePacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{19}
}
func (m *GetLocalReposResponsePacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLocalReposResponsePacket.Unmarshal(m, b)
}
func (m *GetLocalReposResponsePacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLocalReposResponsePacket.Marshal(b, m, deterministic)
}
func (dst *GetLocalReposResponsePacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLocalReposResponsePacket.Merge(dst, src)
}
func (m *GetLocalReposResponsePacket) XXX_Size() int {
	return xxx_messageInfo_GetLocalReposResponsePacket.Size(m)
}
func (m *GetLocalReposResponsePacket) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLocalReposResponsePacket.DiscardUnknown(m)
}

var xxx_messageInfo_GetLocalReposResponsePacket proto.InternalMessageInfo

func (m *GetLocalReposResponsePacket) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *GetLocalReposResponsePacket) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type SetReplicationPolicyRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	ShouldReplicate      bool     `protobuf:"varint,2,opt,name=shouldReplicate,proto3" json:"shouldReplicate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetReplicationPolicyRequest) Reset()         { *m = SetReplicationPolicyRequest{} }
func (m *SetReplicationPolicyRequest) String() string { return proto.CompactTextString(m) }
func (*SetReplicationPolicyRequest) ProtoMessage()    {}
func (*SetReplicationPolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{20}
}
func (m *SetReplicationPolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetReplicationPolicyRequest.Unmarshal(m, b)
}
func (m *SetReplicationPolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetReplicationPolicyRequest.Marshal(b, m, deterministic)
}
func (dst *SetReplicationPolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetReplicationPolicyRequest.Merge(dst, src)
}
func (m *SetReplicationPolicyRequest) XXX_Size() int {
	return xxx_messageInfo_SetReplicationPolicyRequest.Size(m)
}
func (m *SetReplicationPolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetReplicationPolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetReplicationPolicyRequest proto.InternalMessageInfo

func (m *SetReplicationPolicyRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *SetReplicationPolicyRequest) GetShouldReplicate() bool {
	if m != nil {
		return m.ShouldReplicate
	}
	return false
}

type SetReplicationPolicyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetReplicationPolicyResponse) Reset()         { *m = SetReplicationPolicyResponse{} }
func (m *SetReplicationPolicyResponse) String() string { return proto.CompactTextString(m) }
func (*SetReplicationPolicyResponse) ProtoMessage()    {}
func (*SetReplicationPolicyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{21}
}
func (m *SetReplicationPolicyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetReplicationPolicyResponse.Unmarshal(m, b)
}
func (m *SetReplicationPolicyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetReplicationPolicyResponse.Marshal(b, m, deterministic)
}
func (dst *SetReplicationPolicyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetReplicationPolicyResponse.Merge(dst, src)
}
func (m *SetReplicationPolicyResponse) XXX_Size() int {
	return xxx_messageInfo_SetReplicationPolicyResponse.Size(m)
}
func (m *SetReplicationPolicyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetReplicationPolicyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetReplicationPolicyResponse proto.InternalMessageInfo

type AnnounceRepoContentRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnnounceRepoContentRequest) Reset()         { *m = AnnounceRepoContentRequest{} }
func (m *AnnounceRepoContentRequest) String() string { return proto.CompactTextString(m) }
func (*AnnounceRepoContentRequest) ProtoMessage()    {}
func (*AnnounceRepoContentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{22}
}
func (m *AnnounceRepoContentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnnounceRepoContentRequest.Unmarshal(m, b)
}
func (m *AnnounceRepoContentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnnounceRepoContentRequest.Marshal(b, m, deterministic)
}
func (dst *AnnounceRepoContentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnnounceRepoContentRequest.Merge(dst, src)
}
func (m *AnnounceRepoContentRequest) XXX_Size() int {
	return xxx_messageInfo_AnnounceRepoContentRequest.Size(m)
}
func (m *AnnounceRepoContentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AnnounceRepoContentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AnnounceRepoContentRequest proto.InternalMessageInfo

func (m *AnnounceRepoContentRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

type AnnounceRepoContentResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnnounceRepoContentResponse) Reset()         { *m = AnnounceRepoContentResponse{} }
func (m *AnnounceRepoContentResponse) String() string { return proto.CompactTextString(m) }
func (*AnnounceRepoContentResponse) ProtoMessage()    {}
func (*AnnounceRepoContentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{23}
}
func (m *AnnounceRepoContentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnnounceRepoContentResponse.Unmarshal(m, b)
}
func (m *AnnounceRepoContentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnnounceRepoContentResponse.Marshal(b, m, deterministic)
}
func (dst *AnnounceRepoContentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnnounceRepoContentResponse.Merge(dst, src)
}
func (m *AnnounceRepoContentResponse) XXX_Size() int {
	return xxx_messageInfo_AnnounceRepoContentResponse.Size(m)
}
func (m *AnnounceRepoContentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AnnounceRepoContentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AnnounceRepoContentResponse proto.InternalMessageInfo

type Ref struct {
	RefName              string   `protobuf:"bytes,1,opt,name=refName,proto3" json:"refName,omitempty"`
	CommitHash           string   `protobuf:"bytes,2,opt,name=commitHash,proto3" json:"commitHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ref) Reset()         { *m = Ref{} }
func (m *Ref) String() string { return proto.CompactTextString(m) }
func (*Ref) ProtoMessage()    {}
func (*Ref) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{24}
}
func (m *Ref) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ref.Unmarshal(m, b)
}
func (m *Ref) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ref.Marshal(b, m, deterministic)
}
func (dst *Ref) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ref.Merge(dst, src)
}
func (m *Ref) XXX_Size() int {
	return xxx_messageInfo_Ref.Size(m)
}
func (m *Ref) XXX_DiscardUnknown() {
	xxx_messageInfo_Ref.DiscardUnknown(m)
}

var xxx_messageInfo_Ref proto.InternalMessageInfo

func (m *Ref) GetRefName() string {
	if m != nil {
		return m.RefName
	}
	return ""
}

func (m *Ref) GetCommitHash() string {
	if m != nil {
		return m.CommitHash
	}
	return ""
}

type GetLocalRefsRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLocalRefsRequest) Reset()         { *m = GetLocalRefsRequest{} }
func (m *GetLocalRefsRequest) String() string { return proto.CompactTextString(m) }
func (*GetLocalRefsRequest) ProtoMessage()    {}
func (*GetLocalRefsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{25}
}
func (m *GetLocalRefsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLocalRefsRequest.Unmarshal(m, b)
}
func (m *GetLocalRefsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLocalRefsRequest.Marshal(b, m, deterministic)
}
func (dst *GetLocalRefsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLocalRefsRequest.Merge(dst, src)
}
func (m *GetLocalRefsRequest) XXX_Size() int {
	return xxx_messageInfo_GetLocalRefsRequest.Size(m)
}
func (m *GetLocalRefsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLocalRefsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLocalRefsRequest proto.InternalMessageInfo

func (m *GetLocalRefsRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *GetLocalRefsRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type GetLocalRefsResponse struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Refs                 []*Ref   `protobuf:"bytes,2,rep,name=refs,proto3" json:"refs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLocalRefsResponse) Reset()         { *m = GetLocalRefsResponse{} }
func (m *GetLocalRefsResponse) String() string { return proto.CompactTextString(m) }
func (*GetLocalRefsResponse) ProtoMessage()    {}
func (*GetLocalRefsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{26}
}
func (m *GetLocalRefsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLocalRefsResponse.Unmarshal(m, b)
}
func (m *GetLocalRefsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLocalRefsResponse.Marshal(b, m, deterministic)
}
func (dst *GetLocalRefsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLocalRefsResponse.Merge(dst, src)
}
func (m *GetLocalRefsResponse) XXX_Size() int {
	return xxx_messageInfo_GetLocalRefsResponse.Size(m)
}
func (m *GetLocalRefsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLocalRefsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLocalRefsResponse proto.InternalMessageInfo

func (m *GetLocalRefsResponse) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *GetLocalRefsResponse) GetRefs() []*Ref {
	if m != nil {
		return m.Refs
	}
	return nil
}

type GetRemoteRefsRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	PageSize             uint64   `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Page                 uint64   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRemoteRefsRequest) Reset()         { *m = GetRemoteRefsRequest{} }
func (m *GetRemoteRefsRequest) String() string { return proto.CompactTextString(m) }
func (*GetRemoteRefsRequest) ProtoMessage()    {}
func (*GetRemoteRefsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{27}
}
func (m *GetRemoteRefsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRemoteRefsRequest.Unmarshal(m, b)
}
func (m *GetRemoteRefsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRemoteRefsRequest.Marshal(b, m, deterministic)
}
func (dst *GetRemoteRefsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRemoteRefsRequest.Merge(dst, src)
}
func (m *GetRemoteRefsRequest) XXX_Size() int {
	return xxx_messageInfo_GetRemoteRefsRequest.Size(m)
}
func (m *GetRemoteRefsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRemoteRefsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRemoteRefsRequest proto.InternalMessageInfo

func (m *GetRemoteRefsRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *GetRemoteRefsRequest) GetPageSize() uint64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetRemoteRefsRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

type GetRemoteRefsResponse struct {
	Total                uint64   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Refs                 []*Ref   `protobuf:"bytes,2,rep,name=refs,proto3" json:"refs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRemoteRefsResponse) Reset()         { *m = GetRemoteRefsResponse{} }
func (m *GetRemoteRefsResponse) String() string { return proto.CompactTextString(m) }
func (*GetRemoteRefsResponse) ProtoMessage()    {}
func (*GetRemoteRefsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{28}
}
func (m *GetRemoteRefsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRemoteRefsResponse.Unmarshal(m, b)
}
func (m *GetRemoteRefsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRemoteRefsResponse.Marshal(b, m, deterministic)
}
func (dst *GetRemoteRefsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRemoteRefsResponse.Merge(dst, src)
}
func (m *GetRemoteRefsResponse) XXX_Size() int {
	return xxx_messageInfo_GetRemoteRefsResponse.Size(m)
}
func (m *GetRemoteRefsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRemoteRefsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRemoteRefsResponse proto.InternalMessageInfo

func (m *GetRemoteRefsResponse) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *GetRemoteRefsResponse) GetRefs() []*Ref {
	if m != nil {
		return m.Refs
	}
	return nil
}

type IsBehindRemoteRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsBehindRemoteRequest) Reset()         { *m = IsBehindRemoteRequest{} }
func (m *IsBehindRemoteRequest) String() string { return proto.CompactTextString(m) }
func (*IsBehindRemoteRequest) ProtoMessage()    {}
func (*IsBehindRemoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{29}
}
func (m *IsBehindRemoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsBehindRemoteRequest.Unmarshal(m, b)
}
func (m *IsBehindRemoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsBehindRemoteRequest.Marshal(b, m, deterministic)
}
func (dst *IsBehindRemoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsBehindRemoteRequest.Merge(dst, src)
}
func (m *IsBehindRemoteRequest) XXX_Size() int {
	return xxx_messageInfo_IsBehindRemoteRequest.Size(m)
}
func (m *IsBehindRemoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsBehindRemoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsBehindRemoteRequest proto.InternalMessageInfo

func (m *IsBehindRemoteRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *IsBehindRemoteRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type IsBehindRemoteResponse struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	IsBehindRemote       bool     `protobuf:"varint,2,opt,name=isBehindRemote,proto3" json:"isBehindRemote,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsBehindRemoteResponse) Reset()         { *m = IsBehindRemoteResponse{} }
func (m *IsBehindRemoteResponse) String() string { return proto.CompactTextString(m) }
func (*IsBehindRemoteResponse) ProtoMessage()    {}
func (*IsBehindRemoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{30}
}
func (m *IsBehindRemoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsBehindRemoteResponse.Unmarshal(m, b)
}
func (m *IsBehindRemoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsBehindRemoteResponse.Marshal(b, m, deterministic)
}
func (dst *IsBehindRemoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsBehindRemoteResponse.Merge(dst, src)
}
func (m *IsBehindRemoteResponse) XXX_Size() int {
	return xxx_messageInfo_IsBehindRemoteResponse.Size(m)
}
func (m *IsBehindRemoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsBehindRemoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsBehindRemoteResponse proto.InternalMessageInfo

func (m *IsBehindRemoteResponse) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *IsBehindRemoteResponse) GetIsBehindRemote() bool {
	if m != nil {
		return m.IsBehindRemote
	}
	return false
}

type UpdateRefRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	RefName              string   `protobuf:"bytes,2,opt,name=refName,proto3" json:"refName,omitempty"`
	CommitHash           string   `protobuf:"bytes,3,opt,name=commitHash,proto3" json:"commitHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRefRequest) Reset()         { *m = UpdateRefRequest{} }
func (m *UpdateRefRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRefRequest) ProtoMessage()    {}
func (*UpdateRefRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{31}
}
func (m *UpdateRefRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRefRequest.Unmarshal(m, b)
}
func (m *UpdateRefRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRefRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateRefRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRefRequest.Merge(dst, src)
}
func (m *UpdateRefRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRefRequest.Size(m)
}
func (m *UpdateRefRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRefRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRefRequest proto.InternalMessageInfo

func (m *UpdateRefRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *UpdateRefRequest) GetRefName() string {
	if m != nil {
		return m.RefName
	}
	return ""
}

func (m *UpdateRefRequest) GetCommitHash() string {
	if m != nil {
		return m.CommitHash
	}
	return ""
}

type UpdateRefResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRefResponse) Reset()         { *m = UpdateRefResponse{} }
func (m *UpdateRefResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateRefResponse) ProtoMessage()    {}
func (*UpdateRefResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{32}
}
func (m *UpdateRefResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRefResponse.Unmarshal(m, b)
}
func (m *UpdateRefResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRefResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateRefResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRefResponse.Merge(dst, src)
}
func (m *UpdateRefResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateRefResponse.Size(m)
}
func (m *UpdateRefResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRefResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRefResponse proto.InternalMessageInfo

type GetRepoUsersRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Type                 uint64   `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	PageSize             uint64   `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Page                 uint64   `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRepoUsersRequest) Reset()         { *m = GetRepoUsersRequest{} }
func (m *GetRepoUsersRequest) String() string { return proto.CompactTextString(m) }
func (*GetRepoUsersRequest) ProtoMessage()    {}
func (*GetRepoUsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{33}
}
func (m *GetRepoUsersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepoUsersRequest.Unmarshal(m, b)
}
func (m *GetRepoUsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepoUsersRequest.Marshal(b, m, deterministic)
}
func (dst *GetRepoUsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepoUsersRequest.Merge(dst, src)
}
func (m *GetRepoUsersRequest) XXX_Size() int {
	return xxx_messageInfo_GetRepoUsersRequest.Size(m)
}
func (m *GetRepoUsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepoUsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepoUsersRequest proto.InternalMessageInfo

func (m *GetRepoUsersRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *GetRepoUsersRequest) GetType() uint64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GetRepoUsersRequest) GetPageSize() uint64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetRepoUsersRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

type GetRepoUsersResponse struct {
	Total                uint64   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Users                []string `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRepoUsersResponse) Reset()         { *m = GetRepoUsersResponse{} }
func (m *GetRepoUsersResponse) String() string { return proto.CompactTextString(m) }
func (*GetRepoUsersResponse) ProtoMessage()    {}
func (*GetRepoUsersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{34}
}
func (m *GetRepoUsersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepoUsersResponse.Unmarshal(m, b)
}
func (m *GetRepoUsersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepoUsersResponse.Marshal(b, m, deterministic)
}
func (dst *GetRepoUsersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepoUsersResponse.Merge(dst, src)
}
func (m *GetRepoUsersResponse) XXX_Size() int {
	return xxx_messageInfo_GetRepoUsersResponse.Size(m)
}
func (m *GetRepoUsersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepoUsersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepoUsersResponse proto.InternalMessageInfo

func (m *GetRepoUsersResponse) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *GetRepoUsersResponse) GetUsers() []string {
	if m != nil {
		return m.Users
	}
	return nil
}

type ReplicationRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicationRequest) Reset()         { *m = ReplicationRequest{} }
func (m *ReplicationRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicationRequest) ProtoMessage()    {}
func (*ReplicationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{35}
}
func (m *ReplicationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicationRequest.Unmarshal(m, b)
}
func (m *ReplicationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicationRequest.Marshal(b, m, deterministic)
}
func (dst *ReplicationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicationRequest.Merge(dst, src)
}
func (m *ReplicationRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicationRequest.Size(m)
}
func (m *ReplicationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicationRequest proto.InternalMessageInfo

func (m *ReplicationRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

type ReplicationResponsePacket struct {
	Percent              int32    `protobuf:"varint,1,opt,name=percent,proto3" json:"percent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicationResponsePacket) Reset()         { *m = ReplicationResponsePacket{} }
func (m *ReplicationResponsePacket) String() string { return proto.CompactTextString(m) }
func (*ReplicationResponsePacket) ProtoMessage()    {}
func (*ReplicationResponsePacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{36}
}
func (m *ReplicationResponsePacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicationResponsePacket.Unmarshal(m, b)
}
func (m *ReplicationResponsePacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicationResponsePacket.Marshal(b, m, deterministic)
}
func (dst *ReplicationResponsePacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicationResponsePacket.Merge(dst, src)
}
func (m *ReplicationResponsePacket) XXX_Size() int {
	return xxx_messageInfo_ReplicationResponsePacket.Size(m)
}
func (m *ReplicationResponsePacket) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicationResponsePacket.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicationResponsePacket proto.InternalMessageInfo

func (m *ReplicationResponsePacket) GetPercent() int32 {
	if m != nil {
		return m.Percent
	}
	return 0
}

type GetRepoHistoryRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Page                 uint64   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRepoHistoryRequest) Reset()         { *m = GetRepoHistoryRequest{} }
func (m *GetRepoHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*GetRepoHistoryRequest) ProtoMessage()    {}
func (*GetRepoHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{37}
}
func (m *GetRepoHistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepoHistoryRequest.Unmarshal(m, b)
}
func (m *GetRepoHistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepoHistoryRequest.Marshal(b, m, deterministic)
}
func (dst *GetRepoHistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepoHistoryRequest.Merge(dst, src)
}
func (m *GetRepoHistoryRequest) XXX_Size() int {
	return xxx_messageInfo_GetRepoHistoryRequest.Size(m)
}
func (m *GetRepoHistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepoHistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepoHistoryRequest proto.InternalMessageInfo

func (m *GetRepoHistoryRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *GetRepoHistoryRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *GetRepoHistoryRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

type Commit struct {
	CommitHash           string   `protobuf:"bytes,1,opt,name=commitHash,proto3" json:"commitHash,omitempty"`
	Author               string   `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp            uint64   `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Files                []string `protobuf:"bytes,5,rep,name=files,proto3" json:"files,omitempty"`
	Verified             uint64   `protobuf:"varint,6,opt,name=verified,proto3" json:"verified,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Commit) Reset()         { *m = Commit{} }
func (m *Commit) String() string { return proto.CompactTextString(m) }
func (*Commit) ProtoMessage()    {}
func (*Commit) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{38}
}
func (m *Commit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commit.Unmarshal(m, b)
}
func (m *Commit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commit.Marshal(b, m, deterministic)
}
func (dst *Commit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commit.Merge(dst, src)
}
func (m *Commit) XXX_Size() int {
	return xxx_messageInfo_Commit.Size(m)
}
func (m *Commit) XXX_DiscardUnknown() {
	xxx_messageInfo_Commit.DiscardUnknown(m)
}

var xxx_messageInfo_Commit proto.InternalMessageInfo

func (m *Commit) GetCommitHash() string {
	if m != nil {
		return m.CommitHash
	}
	return ""
}

func (m *Commit) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Commit) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Commit) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Commit) GetFiles() []string {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *Commit) GetVerified() uint64 {
	if m != nil {
		return m.Verified
	}
	return 0
}

type GetRepoHistoryResponse struct {
	Commits              []*Commit `protobuf:"bytes,1,rep,name=commits,proto3" json:"commits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetRepoHistoryResponse) Reset()         { *m = GetRepoHistoryResponse{} }
func (m *GetRepoHistoryResponse) String() string { return proto.CompactTextString(m) }
func (*GetRepoHistoryResponse) ProtoMessage()    {}
func (*GetRepoHistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{39}
}
func (m *GetRepoHistoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepoHistoryResponse.Unmarshal(m, b)
}
func (m *GetRepoHistoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepoHistoryResponse.Marshal(b, m, deterministic)
}
func (dst *GetRepoHistoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepoHistoryResponse.Merge(dst, src)
}
func (m *GetRepoHistoryResponse) XXX_Size() int {
	return xxx_messageInfo_GetRepoHistoryResponse.Size(m)
}
func (m *GetRepoHistoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepoHistoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepoHistoryResponse proto.InternalMessageInfo

func (m *GetRepoHistoryResponse) GetCommits() []*Commit {
	if m != nil {
		return m.Commits
	}
	return nil
}

type GetRepoFilesRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRepoFilesRequest) Reset()         { *m = GetRepoFilesRequest{} }
func (m *GetRepoFilesRequest) String() string { return proto.CompactTextString(m) }
func (*GetRepoFilesRequest) ProtoMessage()    {}
func (*GetRepoFilesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{40}
}
func (m *GetRepoFilesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepoFilesRequest.Unmarshal(m, b)
}
func (m *GetRepoFilesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepoFilesRequest.Marshal(b, m, deterministic)
}
func (dst *GetRepoFilesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepoFilesRequest.Merge(dst, src)
}
func (m *GetRepoFilesRequest) XXX_Size() int {
	return xxx_messageInfo_GetRepoFilesRequest.Size(m)
}
func (m *GetRepoFilesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepoFilesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepoFilesRequest proto.InternalMessageInfo

func (m *GetRepoFilesRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *GetRepoFilesRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type File struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Hash                 []byte   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Mode                 uint32   `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	Size                 uint64   `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Modified             uint32   `protobuf:"varint,5,opt,name=modified,proto3" json:"modified,omitempty"`
	UnstagedStatus       string   `protobuf:"bytes,6,opt,name=unstagedStatus,proto3" json:"unstagedStatus,omitempty"`
	StagedStatus         string   `protobuf:"bytes,7,opt,name=stagedStatus,proto3" json:"stagedStatus,omitempty"`
	MergeConflict        bool     `protobuf:"varint,8,opt,name=mergeConflict,proto3" json:"mergeConflict,omitempty"`
	MergeUnresolved      bool     `protobuf:"varint,9,opt,name=mergeUnresolved,proto3" json:"mergeUnresolved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{41}
}
func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (dst *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(dst, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *File) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *File) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *File) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *File) GetModified() uint32 {
	if m != nil {
		return m.Modified
	}
	return 0
}

func (m *File) GetUnstagedStatus() string {
	if m != nil {
		return m.UnstagedStatus
	}
	return ""
}

func (m *File) GetStagedStatus() string {
	if m != nil {
		return m.StagedStatus
	}
	return ""
}

func (m *File) GetMergeConflict() bool {
	if m != nil {
		return m.MergeConflict
	}
	return false
}

func (m *File) GetMergeUnresolved() bool {
	if m != nil {
		return m.MergeUnresolved
	}
	return false
}

type GetRepoFilesResponse struct {
	Files                []*File  `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRepoFilesResponse) Reset()         { *m = GetRepoFilesResponse{} }
func (m *GetRepoFilesResponse) String() string { return proto.CompactTextString(m) }
func (*GetRepoFilesResponse) ProtoMessage()    {}
func (*GetRepoFilesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{42}
}
func (m *GetRepoFilesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepoFilesResponse.Unmarshal(m, b)
}
func (m *GetRepoFilesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepoFilesResponse.Marshal(b, m, deterministic)
}
func (dst *GetRepoFilesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepoFilesResponse.Merge(dst, src)
}
func (m *GetRepoFilesResponse) XXX_Size() int {
	return xxx_messageInfo_GetRepoFilesResponse.Size(m)
}
func (m *GetRepoFilesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepoFilesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepoFilesResponse proto.InternalMessageInfo

func (m *GetRepoFilesResponse) GetFiles() []*File {
	if m != nil {
		return m.Files
	}
	return nil
}

type RepoHasObjectRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	ObjectID             []byte   `protobuf:"bytes,3,opt,name=objectID,proto3" json:"objectID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepoHasObjectRequest) Reset()         { *m = RepoHasObjectRequest{} }
func (m *RepoHasObjectRequest) String() string { return proto.CompactTextString(m) }
func (*RepoHasObjectRequest) ProtoMessage()    {}
func (*RepoHasObjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{43}
}
func (m *RepoHasObjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepoHasObjectRequest.Unmarshal(m, b)
}
func (m *RepoHasObjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepoHasObjectRequest.Marshal(b, m, deterministic)
}
func (dst *RepoHasObjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepoHasObjectRequest.Merge(dst, src)
}
func (m *RepoHasObjectRequest) XXX_Size() int {
	return xxx_messageInfo_RepoHasObjectRequest.Size(m)
}
func (m *RepoHasObjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RepoHasObjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RepoHasObjectRequest proto.InternalMessageInfo

func (m *RepoHasObjectRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *RepoHasObjectRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *RepoHasObjectRequest) GetObjectID() []byte {
	if m != nil {
		return m.ObjectID
	}
	return nil
}

type RepoHasObjectResponse struct {
	HasObject            bool     `protobuf:"varint,1,opt,name=hasObject,proto3" json:"hasObject,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepoHasObjectResponse) Reset()         { *m = RepoHasObjectResponse{} }
func (m *RepoHasObjectResponse) String() string { return proto.CompactTextString(m) }
func (*RepoHasObjectResponse) ProtoMessage()    {}
func (*RepoHasObjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{44}
}
func (m *RepoHasObjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepoHasObjectResponse.Unmarshal(m, b)
}
func (m *RepoHasObjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepoHasObjectResponse.Marshal(b, m, deterministic)
}
func (dst *RepoHasObjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepoHasObjectResponse.Merge(dst, src)
}
func (m *RepoHasObjectResponse) XXX_Size() int {
	return xxx_messageInfo_RepoHasObjectResponse.Size(m)
}
func (m *RepoHasObjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RepoHasObjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RepoHasObjectResponse proto.InternalMessageInfo

func (m *RepoHasObjectResponse) GetHasObject() bool {
	if m != nil {
		return m.HasObject
	}
	return false
}

type SignMessageRequest struct {
	Message              []byte   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignMessageRequest) Reset()         { *m = SignMessageRequest{} }
func (m *SignMessageRequest) String() string { return proto.CompactTextString(m) }
func (*SignMessageRequest) ProtoMessage()    {}
func (*SignMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{45}
}
func (m *SignMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignMessageRequest.Unmarshal(m, b)
}
func (m *SignMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignMessageRequest.Marshal(b, m, deterministic)
}
func (dst *SignMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignMessageRequest.Merge(dst, src)
}
func (m *SignMessageRequest) XXX_Size() int {
	return xxx_messageInfo_SignMessageRequest.Size(m)
}
func (m *SignMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignMessageRequest proto.InternalMessageInfo

func (m *SignMessageRequest) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

type SignMessageResponse struct {
	Signature            []byte   `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignMessageResponse) Reset()         { *m = SignMessageResponse{} }
func (m *SignMessageResponse) String() string { return proto.CompactTextString(m) }
func (*SignMessageResponse) ProtoMessage()    {}
func (*SignMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{46}
}
func (m *SignMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignMessageResponse.Unmarshal(m, b)
}
func (m *SignMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignMessageResponse.Marshal(b, m, deterministic)
}
func (dst *SignMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignMessageResponse.Merge(dst, src)
}
func (m *SignMessageResponse) XXX_Size() int {
	return xxx_messageInfo_SignMessageResponse.Size(m)
}
func (m *SignMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignMessageResponse proto.InternalMessageInfo

func (m *SignMessageResponse) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type EthAddressRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthAddressRequest) Reset()         { *m = EthAddressRequest{} }
func (m *EthAddressRequest) String() string { return proto.CompactTextString(m) }
func (*EthAddressRequest) ProtoMessage()    {}
func (*EthAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{47}
}
func (m *EthAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthAddressRequest.Unmarshal(m, b)
}
func (m *EthAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthAddressRequest.Marshal(b, m, deterministic)
}
func (dst *EthAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthAddressRequest.Merge(dst, src)
}
func (m *EthAddressRequest) XXX_Size() int {
	return xxx_messageInfo_EthAddressRequest.Size(m)
}
func (m *EthAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EthAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EthAddressRequest proto.InternalMessageInfo

type EthAddressResponse struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthAddressResponse) Reset()         { *m = EthAddressResponse{} }
func (m *EthAddressResponse) String() string { return proto.CompactTextString(m) }
func (*EthAddressResponse) ProtoMessage()    {}
func (*EthAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{48}
}
func (m *EthAddressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthAddressResponse.Unmarshal(m, b)
}
func (m *EthAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthAddressResponse.Marshal(b, m, deterministic)
}
func (dst *EthAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthAddressResponse.Merge(dst, src)
}
func (m *EthAddressResponse) XXX_Size() int {
	return xxx_messageInfo_EthAddressResponse.Size(m)
}
func (m *EthAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EthAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EthAddressResponse proto.InternalMessageInfo

func (m *EthAddressResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type SetUserPermissionsRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Puller               bool     `protobuf:"varint,3,opt,name=puller,proto3" json:"puller,omitempty"`
	Pusher               bool     `protobuf:"varint,4,opt,name=pusher,proto3" json:"pusher,omitempty"`
	Admin                bool     `protobuf:"varint,5,opt,name=admin,proto3" json:"admin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetUserPermissionsRequest) Reset()         { *m = SetUserPermissionsRequest{} }
func (m *SetUserPermissionsRequest) String() string { return proto.CompactTextString(m) }
func (*SetUserPermissionsRequest) ProtoMessage()    {}
func (*SetUserPermissionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{49}
}
func (m *SetUserPermissionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetUserPermissionsRequest.Unmarshal(m, b)
}
func (m *SetUserPermissionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetUserPermissionsRequest.Marshal(b, m, deterministic)
}
func (dst *SetUserPermissionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetUserPermissionsRequest.Merge(dst, src)
}
func (m *SetUserPermissionsRequest) XXX_Size() int {
	return xxx_messageInfo_SetUserPermissionsRequest.Size(m)
}
func (m *SetUserPermissionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetUserPermissionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetUserPermissionsRequest proto.InternalMessageInfo

func (m *SetUserPermissionsRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *SetUserPermissionsRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *SetUserPermissionsRequest) GetPuller() bool {
	if m != nil {
		return m.Puller
	}
	return false
}

func (m *SetUserPermissionsRequest) GetPusher() bool {
	if m != nil {
		return m.Pusher
	}
	return false
}

func (m *SetUserPermissionsRequest) GetAdmin() bool {
	if m != nil {
		return m.Admin
	}
	return false
}

type SetUserPermissionsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetUserPermissionsResponse) Reset()         { *m = SetUserPermissionsResponse{} }
func (m *SetUserPermissionsResponse) String() string { return proto.CompactTextString(m) }
func (*SetUserPermissionsResponse) ProtoMessage()    {}
func (*SetUserPermissionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_noderpc_c1a706fd578a3a53, []int{50}
}
func (m *SetUserPermissionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetUserPermissionsResponse.Unmarshal(m, b)
}
func (m *SetUserPermissionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetUserPermissionsResponse.Marshal(b, m, deterministic)
}
func (dst *SetUserPermissionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetUserPermissionsResponse.Merge(dst, src)
}
func (m *SetUserPermissionsResponse) XXX_Size() int {
	return xxx_messageInfo_SetUserPermissionsResponse.Size(m)
}
func (m *SetUserPermissionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetUserPermissionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetUserPermissionsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*SetUsernameRequest)(nil), "noderpc.SetUsernameRequest")
	proto.RegisterType((*SetUsernameResponse)(nil), "noderpc.SetUsernameResponse")
	proto.RegisterType((*GetUsernameRequest)(nil), "noderpc.GetUsernameRequest")
	proto.RegisterType((*GetUsernameResponse)(nil), "noderpc.GetUsernameResponse")
	proto.RegisterType((*InitRepoRequest)(nil), "noderpc.InitRepoRequest")
	proto.RegisterType((*InitRepoResponse)(nil), "noderpc.InitRepoResponse")
	proto.RegisterType((*CheckpointRepoRequest)(nil), "noderpc.CheckpointRepoRequest")
	proto.RegisterType((*CheckpointRepoResponse)(nil), "noderpc.CheckpointRepoResponse")
	proto.RegisterType((*PullRepoRequest)(nil), "noderpc.PullRepoRequest")
	proto.RegisterType((*PullRepoResponsePacket)(nil), "noderpc.PullRepoResponsePacket")
	proto.RegisterType((*CloneRepoRequest)(nil), "noderpc.CloneRepoRequest")
	proto.RegisterType((*CloneRepoResponsePacket)(nil), "noderpc.CloneRepoResponsePacket")
	proto.RegisterType((*CloneRepoResponsePacket_Progress)(nil), "noderpc.CloneRepoResponsePacket.Progress")
	proto.RegisterType((*CloneRepoResponsePacket_Success)(nil), "noderpc.CloneRepoResponsePacket.Success")
	proto.RegisterType((*FetchFromCommitRequest)(nil), "noderpc.FetchFromCommitRequest")
	proto.RegisterType((*FetchFromCommitResponse)(nil), "noderpc.FetchFromCommitResponse")
	proto.RegisterType((*FetchFromCommitResponse_Header)(nil), "noderpc.FetchFromCommitResponse.Header")
	proto.RegisterType((*FetchFromCommitResponse_PackfileHeader)(nil), "noderpc.FetchFromCommitResponse.PackfileHeader")
	proto.RegisterType((*FetchFromCommitResponse_PackfileData)(nil), "noderpc.FetchFromCommitResponse.PackfileData")
	proto.RegisterType((*RegisterRepoIDRequest)(nil), "noderpc.RegisterRepoIDRequest")
	proto.RegisterType((*RegisterRepoIDResponse)(nil), "noderpc.RegisterRepoIDResponse")
	proto.RegisterType((*TrackLocalRepoRequest)(nil), "noderpc.TrackLocalRepoRequest")
	proto.RegisterType((*TrackLocalRepoResponse)(nil), "noderpc.TrackLocalRepoResponse")
	proto.RegisterType((*GetLocalReposRequest)(nil), "noderpc.GetLocalReposRequest")
	proto.RegisterType((*GetLocalReposResponsePacket)(nil), "noderpc.GetLocalReposResponsePacket")
	proto.RegisterType((*SetReplicationPolicyRequest)(nil), "noderpc.SetReplicationPolicyRequest")
	proto.RegisterType((*SetReplicationPolicyResponse)(nil), "noderpc.SetReplicationPolicyResponse")
	proto.RegisterType((*AnnounceRepoContentRequest)(nil), "noderpc.AnnounceRepoContentRequest")
	proto.RegisterType((*AnnounceRepoContentResponse)(nil), "noderpc.AnnounceRepoContentResponse")
	proto.RegisterType((*Ref)(nil), "noderpc.Ref")
	proto.RegisterType((*GetLocalRefsRequest)(nil), "noderpc.GetLocalRefsRequest")
	proto.RegisterType((*GetLocalRefsResponse)(nil), "noderpc.GetLocalRefsResponse")
	proto.RegisterType((*GetRemoteRefsRequest)(nil), "noderpc.GetRemoteRefsRequest")
	proto.RegisterType((*GetRemoteRefsResponse)(nil), "noderpc.GetRemoteRefsResponse")
	proto.RegisterType((*IsBehindRemoteRequest)(nil), "noderpc.IsBehindRemoteRequest")
	proto.RegisterType((*IsBehindRemoteResponse)(nil), "noderpc.IsBehindRemoteResponse")
	proto.RegisterType((*UpdateRefRequest)(nil), "noderpc.UpdateRefRequest")
	proto.RegisterType((*UpdateRefResponse)(nil), "noderpc.UpdateRefResponse")
	proto.RegisterType((*GetRepoUsersRequest)(nil), "noderpc.GetRepoUsersRequest")
	proto.RegisterType((*GetRepoUsersResponse)(nil), "noderpc.GetRepoUsersResponse")
	proto.RegisterType((*ReplicationRequest)(nil), "noderpc.ReplicationRequest")
	proto.RegisterType((*ReplicationResponsePacket)(nil), "noderpc.ReplicationResponsePacket")
	proto.RegisterType((*GetRepoHistoryRequest)(nil), "noderpc.GetRepoHistoryRequest")
	proto.RegisterType((*Commit)(nil), "noderpc.Commit")
	proto.RegisterType((*GetRepoHistoryResponse)(nil), "noderpc.GetRepoHistoryResponse")
	proto.RegisterType((*GetRepoFilesRequest)(nil), "noderpc.GetRepoFilesRequest")
	proto.RegisterType((*File)(nil), "noderpc.File")
	proto.RegisterType((*GetRepoFilesResponse)(nil), "noderpc.GetRepoFilesResponse")
	proto.RegisterType((*RepoHasObjectRequest)(nil), "noderpc.RepoHasObjectRequest")
	proto.RegisterType((*RepoHasObjectResponse)(nil), "noderpc.RepoHasObjectResponse")
	proto.RegisterType((*SignMessageRequest)(nil), "noderpc.SignMessageRequest")
	proto.RegisterType((*SignMessageResponse)(nil), "noderpc.SignMessageResponse")
	proto.RegisterType((*EthAddressRequest)(nil), "noderpc.EthAddressRequest")
	proto.RegisterType((*EthAddressResponse)(nil), "noderpc.EthAddressResponse")
	proto.RegisterType((*SetUserPermissionsRequest)(nil), "noderpc.SetUserPermissionsRequest")
	proto.RegisterType((*SetUserPermissionsResponse)(nil), "noderpc.SetUserPermissionsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodeRPCClient is the client API for NodeRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeRPCClient interface {
	SetUsername(ctx context.Context, in *SetUsernameRequest, opts ...grpc.CallOption) (*SetUsernameResponse, error)
	GetUsername(ctx context.Context, in *GetUsernameRequest, opts ...grpc.CallOption) (*GetUsernameResponse, error)
	InitRepo(ctx context.Context, in *InitRepoRequest, opts ...grpc.CallOption) (*InitRepoResponse, error)
	CheckpointRepo(ctx context.Context, in *CheckpointRepoRequest, opts ...grpc.CallOption) (*CheckpointRepoResponse, error)
	PullRepo(ctx context.Context, in *PullRepoRequest, opts ...grpc.CallOption) (NodeRPC_PullRepoClient, error)
	CloneRepo(ctx context.Context, in *CloneRepoRequest, opts ...grpc.CallOption) (NodeRPC_CloneRepoClient, error)
	FetchFromCommit(ctx context.Context, in *FetchFromCommitRequest, opts ...grpc.CallOption) (NodeRPC_FetchFromCommitClient, error)
	RegisterRepoID(ctx context.Context, in *RegisterRepoIDRequest, opts ...grpc.CallOption) (*RegisterRepoIDResponse, error)
	TrackLocalRepo(ctx context.Context, in *TrackLocalRepoRequest, opts ...grpc.CallOption) (*TrackLocalRepoResponse, error)
	GetLocalRepos(ctx context.Context, in *GetLocalReposRequest, opts ...grpc.CallOption) (NodeRPC_GetLocalReposClient, error)
	SetReplicationPolicy(ctx context.Context, in *SetReplicationPolicyRequest, opts ...grpc.CallOption) (*SetReplicationPolicyResponse, error)
	AnnounceRepoContent(ctx context.Context, in *AnnounceRepoContentRequest, opts ...grpc.CallOption) (*AnnounceRepoContentResponse, error)
	GetLocalRefs(ctx context.Context, in *GetLocalRefsRequest, opts ...grpc.CallOption) (*GetLocalRefsResponse, error)
	GetRemoteRefs(ctx context.Context, in *GetRemoteRefsRequest, opts ...grpc.CallOption) (*GetRemoteRefsResponse, error)
	IsBehindRemote(ctx context.Context, in *IsBehindRemoteRequest, opts ...grpc.CallOption) (*IsBehindRemoteResponse, error)
	GetRepoUsers(ctx context.Context, in *GetRepoUsersRequest, opts ...grpc.CallOption) (*GetRepoUsersResponse, error)
	UpdateRef(ctx context.Context, in *UpdateRefRequest, opts ...grpc.CallOption) (*UpdateRefResponse, error)
	RequestReplication(ctx context.Context, in *ReplicationRequest, opts ...grpc.CallOption) (NodeRPC_RequestReplicationClient, error)
	GetRepoHistory(ctx context.Context, in *GetRepoHistoryRequest, opts ...grpc.CallOption) (*GetRepoHistoryResponse, error)
	GetRepoFiles(ctx context.Context, in *GetRepoFilesRequest, opts ...grpc.CallOption) (*GetRepoFilesResponse, error)
	RepoHasObject(ctx context.Context, in *RepoHasObjectRequest, opts ...grpc.CallOption) (*RepoHasObjectResponse, error)
	SignMessage(ctx context.Context, in *SignMessageRequest, opts ...grpc.CallOption) (*SignMessageResponse, error)
	EthAddress(ctx context.Context, in *EthAddressRequest, opts ...grpc.CallOption) (*EthAddressResponse, error)
	SetUserPermissions(ctx context.Context, in *SetUserPermissionsRequest, opts ...grpc.CallOption) (*SetUserPermissionsResponse, error)
}

type nodeRPCClient struct {
	cc *grpc.ClientConn
}

func NewNodeRPCClient(cc *grpc.ClientConn) NodeRPCClient {
	return &nodeRPCClient{cc}
}

func (c *nodeRPCClient) SetUsername(ctx context.Context, in *SetUsernameRequest, opts ...grpc.CallOption) (*SetUsernameResponse, error) {
	out := new(SetUsernameResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/SetUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) GetUsername(ctx context.Context, in *GetUsernameRequest, opts ...grpc.CallOption) (*GetUsernameResponse, error) {
	out := new(GetUsernameResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/GetUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) InitRepo(ctx context.Context, in *InitRepoRequest, opts ...grpc.CallOption) (*InitRepoResponse, error) {
	out := new(InitRepoResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/InitRepo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) CheckpointRepo(ctx context.Context, in *CheckpointRepoRequest, opts ...grpc.CallOption) (*CheckpointRepoResponse, error) {
	out := new(CheckpointRepoResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/CheckpointRepo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) PullRepo(ctx context.Context, in *PullRepoRequest, opts ...grpc.CallOption) (NodeRPC_PullRepoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeRPC_serviceDesc.Streams[0], "/noderpc.NodeRPC/PullRepo", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeRPCPullRepoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeRPC_PullRepoClient interface {
	Recv() (*PullRepoResponsePacket, error)
	grpc.ClientStream
}

type nodeRPCPullRepoClient struct {
	grpc.ClientStream
}

func (x *nodeRPCPullRepoClient) Recv() (*PullRepoResponsePacket, error) {
	m := new(PullRepoResponsePacket)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeRPCClient) CloneRepo(ctx context.Context, in *CloneRepoRequest, opts ...grpc.CallOption) (NodeRPC_CloneRepoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeRPC_serviceDesc.Streams[1], "/noderpc.NodeRPC/CloneRepo", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeRPCCloneRepoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeRPC_CloneRepoClient interface {
	Recv() (*CloneRepoResponsePacket, error)
	grpc.ClientStream
}

type nodeRPCCloneRepoClient struct {
	grpc.ClientStream
}

func (x *nodeRPCCloneRepoClient) Recv() (*CloneRepoResponsePacket, error) {
	m := new(CloneRepoResponsePacket)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeRPCClient) FetchFromCommit(ctx context.Context, in *FetchFromCommitRequest, opts ...grpc.CallOption) (NodeRPC_FetchFromCommitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeRPC_serviceDesc.Streams[2], "/noderpc.NodeRPC/FetchFromCommit", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeRPCFetchFromCommitClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeRPC_FetchFromCommitClient interface {
	Recv() (*FetchFromCommitResponse, error)
	grpc.ClientStream
}

type nodeRPCFetchFromCommitClient struct {
	grpc.ClientStream
}

func (x *nodeRPCFetchFromCommitClient) Recv() (*FetchFromCommitResponse, error) {
	m := new(FetchFromCommitResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeRPCClient) RegisterRepoID(ctx context.Context, in *RegisterRepoIDRequest, opts ...grpc.CallOption) (*RegisterRepoIDResponse, error) {
	out := new(RegisterRepoIDResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/RegisterRepoID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) TrackLocalRepo(ctx context.Context, in *TrackLocalRepoRequest, opts ...grpc.CallOption) (*TrackLocalRepoResponse, error) {
	out := new(TrackLocalRepoResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/TrackLocalRepo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) GetLocalRepos(ctx context.Context, in *GetLocalReposRequest, opts ...grpc.CallOption) (NodeRPC_GetLocalReposClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeRPC_serviceDesc.Streams[3], "/noderpc.NodeRPC/GetLocalRepos", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeRPCGetLocalReposClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeRPC_GetLocalReposClient interface {
	Recv() (*GetLocalReposResponsePacket, error)
	grpc.ClientStream
}

type nodeRPCGetLocalReposClient struct {
	grpc.ClientStream
}

func (x *nodeRPCGetLocalReposClient) Recv() (*GetLocalReposResponsePacket, error) {
	m := new(GetLocalReposResponsePacket)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeRPCClient) SetReplicationPolicy(ctx context.Context, in *SetReplicationPolicyRequest, opts ...grpc.CallOption) (*SetReplicationPolicyResponse, error) {
	out := new(SetReplicationPolicyResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/SetReplicationPolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) AnnounceRepoContent(ctx context.Context, in *AnnounceRepoContentRequest, opts ...grpc.CallOption) (*AnnounceRepoContentResponse, error) {
	out := new(AnnounceRepoContentResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/AnnounceRepoContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) GetLocalRefs(ctx context.Context, in *GetLocalRefsRequest, opts ...grpc.CallOption) (*GetLocalRefsResponse, error) {
	out := new(GetLocalRefsResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/GetLocalRefs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) GetRemoteRefs(ctx context.Context, in *GetRemoteRefsRequest, opts ...grpc.CallOption) (*GetRemoteRefsResponse, error) {
	out := new(GetRemoteRefsResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/GetRemoteRefs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) IsBehindRemote(ctx context.Context, in *IsBehindRemoteRequest, opts ...grpc.CallOption) (*IsBehindRemoteResponse, error) {
	out := new(IsBehindRemoteResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/IsBehindRemote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) GetRepoUsers(ctx context.Context, in *GetRepoUsersRequest, opts ...grpc.CallOption) (*GetRepoUsersResponse, error) {
	out := new(GetRepoUsersResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/GetRepoUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) UpdateRef(ctx context.Context, in *UpdateRefRequest, opts ...grpc.CallOption) (*UpdateRefResponse, error) {
	out := new(UpdateRefResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/UpdateRef", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) RequestReplication(ctx context.Context, in *ReplicationRequest, opts ...grpc.CallOption) (NodeRPC_RequestReplicationClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeRPC_serviceDesc.Streams[4], "/noderpc.NodeRPC/RequestReplication", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeRPCRequestReplicationClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeRPC_RequestReplicationClient interface {
	Recv() (*ReplicationResponsePacket, error)
	grpc.ClientStream
}

type nodeRPCRequestReplicationClient struct {
	grpc.ClientStream
}

func (x *nodeRPCRequestReplicationClient) Recv() (*ReplicationResponsePacket, error) {
	m := new(ReplicationResponsePacket)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeRPCClient) GetRepoHistory(ctx context.Context, in *GetRepoHistoryRequest, opts ...grpc.CallOption) (*GetRepoHistoryResponse, error) {
	out := new(GetRepoHistoryResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/GetRepoHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) GetRepoFiles(ctx context.Context, in *GetRepoFilesRequest, opts ...grpc.CallOption) (*GetRepoFilesResponse, error) {
	out := new(GetRepoFilesResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/GetRepoFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) RepoHasObject(ctx context.Context, in *RepoHasObjectRequest, opts ...grpc.CallOption) (*RepoHasObjectResponse, error) {
	out := new(RepoHasObjectResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/RepoHasObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) SignMessage(ctx context.Context, in *SignMessageRequest, opts ...grpc.CallOption) (*SignMessageResponse, error) {
	out := new(SignMessageResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/SignMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) EthAddress(ctx context.Context, in *EthAddressRequest, opts ...grpc.CallOption) (*EthAddressResponse, error) {
	out := new(EthAddressResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/EthAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) SetUserPermissions(ctx context.Context, in *SetUserPermissionsRequest, opts ...grpc.CallOption) (*SetUserPermissionsResponse, error) {
	out := new(SetUserPermissionsResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/SetUserPermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeRPCServer is the server API for NodeRPC service.
type NodeRPCServer interface {
	SetUsername(context.Context, *SetUsernameRequest) (*SetUsernameResponse, error)
	GetUsername(context.Context, *GetUsernameRequest) (*GetUsernameResponse, error)
	InitRepo(context.Context, *InitRepoRequest) (*InitRepoResponse, error)
	CheckpointRepo(context.Context, *CheckpointRepoRequest) (*CheckpointRepoResponse, error)
	PullRepo(*PullRepoRequest, NodeRPC_PullRepoServer) error
	CloneRepo(*CloneRepoRequest, NodeRPC_CloneRepoServer) error
	FetchFromCommit(*FetchFromCommitRequest, NodeRPC_FetchFromCommitServer) error
	RegisterRepoID(context.Context, *RegisterRepoIDRequest) (*RegisterRepoIDResponse, error)
	TrackLocalRepo(context.Context, *TrackLocalRepoRequest) (*TrackLocalRepoResponse, error)
	GetLocalRepos(*GetLocalReposRequest, NodeRPC_GetLocalReposServer) error
	SetReplicationPolicy(context.Context, *SetReplicationPolicyRequest) (*SetReplicationPolicyResponse, error)
	AnnounceRepoContent(context.Context, *AnnounceRepoContentRequest) (*AnnounceRepoContentResponse, error)
	GetLocalRefs(context.Context, *GetLocalRefsRequest) (*GetLocalRefsResponse, error)
	GetRemoteRefs(context.Context, *GetRemoteRefsRequest) (*GetRemoteRefsResponse, error)
	IsBehindRemote(context.Context, *IsBehindRemoteRequest) (*IsBehindRemoteResponse, error)
	GetRepoUsers(context.Context, *GetRepoUsersRequest) (*GetRepoUsersResponse, error)
	UpdateRef(context.Context, *UpdateRefRequest) (*UpdateRefResponse, error)
	RequestReplication(*ReplicationRequest, NodeRPC_RequestReplicationServer) error
	GetRepoHistory(context.Context, *GetRepoHistoryRequest) (*GetRepoHistoryResponse, error)
	GetRepoFiles(context.Context, *GetRepoFilesRequest) (*GetRepoFilesResponse, error)
	RepoHasObject(context.Context, *RepoHasObjectRequest) (*RepoHasObjectResponse, error)
	SignMessage(context.Context, *SignMessageRequest) (*SignMessageResponse, error)
	EthAddress(context.Context, *EthAddressRequest) (*EthAddressResponse, error)
	SetUserPermissions(context.Context, *SetUserPermissionsRequest) (*SetUserPermissionsResponse, error)
}

func RegisterNodeRPCServer(s *grpc.Server, srv NodeRPCServer) {
	s.RegisterService(&_NodeRPC_serviceDesc, srv)
}

func _NodeRPC_SetUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).SetUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/SetUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).SetUsername(ctx, req.(*SetUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_GetUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).GetUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/GetUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).GetUsername(ctx, req.(*GetUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_InitRepo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitRepoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).InitRepo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/InitRepo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).InitRepo(ctx, req.(*InitRepoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_CheckpointRepo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckpointRepoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).CheckpointRepo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/CheckpointRepo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).CheckpointRepo(ctx, req.(*CheckpointRepoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_PullRepo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PullRepoRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeRPCServer).PullRepo(m, &nodeRPCPullRepoServer{stream})
}

type NodeRPC_PullRepoServer interface {
	Send(*PullRepoResponsePacket) error
	grpc.ServerStream
}

type nodeRPCPullRepoServer struct {
	grpc.ServerStream
}

func (x *nodeRPCPullRepoServer) Send(m *PullRepoResponsePacket) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeRPC_CloneRepo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CloneRepoRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeRPCServer).CloneRepo(m, &nodeRPCCloneRepoServer{stream})
}

type NodeRPC_CloneRepoServer interface {
	Send(*CloneRepoResponsePacket) error
	grpc.ServerStream
}

type nodeRPCCloneRepoServer struct {
	grpc.ServerStream
}

func (x *nodeRPCCloneRepoServer) Send(m *CloneRepoResponsePacket) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeRPC_FetchFromCommit_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FetchFromCommitRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeRPCServer).FetchFromCommit(m, &nodeRPCFetchFromCommitServer{stream})
}

type NodeRPC_FetchFromCommitServer interface {
	Send(*FetchFromCommitResponse) error
	grpc.ServerStream
}

type nodeRPCFetchFromCommitServer struct {
	grpc.ServerStream
}

func (x *nodeRPCFetchFromCommitServer) Send(m *FetchFromCommitResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeRPC_RegisterRepoID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRepoIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).RegisterRepoID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/RegisterRepoID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).RegisterRepoID(ctx, req.(*RegisterRepoIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_TrackLocalRepo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TrackLocalRepoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).TrackLocalRepo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/TrackLocalRepo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).TrackLocalRepo(ctx, req.(*TrackLocalRepoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_GetLocalRepos_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetLocalReposRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeRPCServer).GetLocalRepos(m, &nodeRPCGetLocalReposServer{stream})
}

type NodeRPC_GetLocalReposServer interface {
	Send(*GetLocalReposResponsePacket) error
	grpc.ServerStream
}

type nodeRPCGetLocalReposServer struct {
	grpc.ServerStream
}

func (x *nodeRPCGetLocalReposServer) Send(m *GetLocalReposResponsePacket) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeRPC_SetReplicationPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetReplicationPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).SetReplicationPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/SetReplicationPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).SetReplicationPolicy(ctx, req.(*SetReplicationPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_AnnounceRepoContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AnnounceRepoContentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).AnnounceRepoContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/AnnounceRepoContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).AnnounceRepoContent(ctx, req.(*AnnounceRepoContentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_GetLocalRefs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLocalRefsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).GetLocalRefs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/GetLocalRefs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).GetLocalRefs(ctx, req.(*GetLocalRefsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_GetRemoteRefs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRemoteRefsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).GetRemoteRefs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/GetRemoteRefs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).GetRemoteRefs(ctx, req.(*GetRemoteRefsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_IsBehindRemote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsBehindRemoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).IsBehindRemote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/IsBehindRemote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).IsBehindRemote(ctx, req.(*IsBehindRemoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_GetRepoUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRepoUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).GetRepoUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/GetRepoUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).GetRepoUsers(ctx, req.(*GetRepoUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_UpdateRef_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRefRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).UpdateRef(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/UpdateRef",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).UpdateRef(ctx, req.(*UpdateRefRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_RequestReplication_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReplicationRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeRPCServer).RequestReplication(m, &nodeRPCRequestReplicationServer{stream})
}

type NodeRPC_RequestReplicationServer interface {
	Send(*ReplicationResponsePacket) error
	grpc.ServerStream
}

type nodeRPCRequestReplicationServer struct {
	grpc.ServerStream
}

func (x *nodeRPCRequestReplicationServer) Send(m *ReplicationResponsePacket) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeRPC_GetRepoHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRepoHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).GetRepoHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/GetRepoHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).GetRepoHistory(ctx, req.(*GetRepoHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_GetRepoFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRepoFilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).GetRepoFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/GetRepoFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).GetRepoFiles(ctx, req.(*GetRepoFilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_RepoHasObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RepoHasObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).RepoHasObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/RepoHasObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).RepoHasObject(ctx, req.(*RepoHasObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_SignMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).SignMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/SignMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).SignMessage(ctx, req.(*SignMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_EthAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EthAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).EthAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/EthAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).EthAddress(ctx, req.(*EthAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_SetUserPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUserPermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).SetUserPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/SetUserPermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).SetUserPermissions(ctx, req.(*SetUserPermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "noderpc.NodeRPC",
	HandlerType: (*NodeRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetUsername",
			Handler:    _NodeRPC_SetUsername_Handler,
		},
		{
			MethodName: "GetUsername",
			Handler:    _NodeRPC_GetUsername_Handler,
		},
		{
			MethodName: "InitRepo",
			Handler:    _NodeRPC_InitRepo_Handler,
		},
		{
			MethodName: "CheckpointRepo",
			Handler:    _NodeRPC_CheckpointRepo_Handler,
		},
		{
			MethodName: "RegisterRepoID",
			Handler:    _NodeRPC_RegisterRepoID_Handler,
		},
		{
			MethodName: "TrackLocalRepo",
			Handler:    _NodeRPC_TrackLocalRepo_Handler,
		},
		{
			MethodName: "SetReplicationPolicy",
			Handler:    _NodeRPC_SetReplicationPolicy_Handler,
		},
		{
			MethodName: "AnnounceRepoContent",
			Handler:    _NodeRPC_AnnounceRepoContent_Handler,
		},
		{
			MethodName: "GetLocalRefs",
			Handler:    _NodeRPC_GetLocalRefs_Handler,
		},
		{
			MethodName: "GetRemoteRefs",
			Handler:    _NodeRPC_GetRemoteRefs_Handler,
		},
		{
			MethodName: "IsBehindRemote",
			Handler:    _NodeRPC_IsBehindRemote_Handler,
		},
		{
			MethodName: "GetRepoUsers",
			Handler:    _NodeRPC_GetRepoUsers_Handler,
		},
		{
			MethodName: "UpdateRef",
			Handler:    _NodeRPC_UpdateRef_Handler,
		},
		{
			MethodName: "GetRepoHistory",
			Handler:    _NodeRPC_GetRepoHistory_Handler,
		},
		{
			MethodName: "GetRepoFiles",
			Handler:    _NodeRPC_GetRepoFiles_Handler,
		},
		{
			MethodName: "RepoHasObject",
			Handler:    _NodeRPC_RepoHasObject_Handler,
		},
		{
			MethodName: "SignMessage",
			Handler:    _NodeRPC_SignMessage_Handler,
		},
		{
			MethodName: "EthAddress",
			Handler:    _NodeRPC_EthAddress_Handler,
		},
		{
			MethodName: "SetUserPermissions",
			Handler:    _NodeRPC_SetUserPermissions_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PullRepo",
			Handler:       _NodeRPC_PullRepo_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CloneRepo",
			Handler:       _NodeRPC_CloneRepo_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "FetchFromCommit",
			Handler:       _NodeRPC_FetchFromCommit_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetLocalRepos",
			Handler:       _NodeRPC_GetLocalRepos_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "RequestReplication",
			Handler:       _NodeRPC_RequestReplication_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "noderpc.proto",
}

func init() { proto.RegisterFile("noderpc.proto", fileDescriptor_noderpc_c1a706fd578a3a53) }

var fileDescriptor_noderpc_c1a706fd578a3a53 = []byte{
	// 1820 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x59, 0xeb, 0x6e, 0x23, 0xb7,
	0x15, 0xd6, 0xcd, 0xba, 0x1c, 0xcb, 0x97, 0xd0, 0xb6, 0x22, 0x8f, 0x2f, 0x31, 0xb8, 0x9b, 0xd4,
	0x29, 0x5a, 0x27, 0x70, 0x92, 0x5f, 0x05, 0x5a, 0xd8, 0x72, 0x56, 0x72, 0xe1, 0x64, 0x05, 0xaa,
	0x46, 0x77, 0x8b, 0x45, 0x17, 0xe3, 0x19, 0x4a, 0x9a, 0x5a, 0x1a, 0xce, 0xce, 0x8c, 0x16, 0x70,
	0x9f, 0xa0, 0xbf, 0xfa, 0xa3, 0x40, 0x5f, 0xa2, 0x0f, 0xd0, 0xb7, 0xe8, 0x3b, 0x15, 0xe4, 0x70,
	0x28, 0xce, 0xcd, 0xf2, 0x1a, 0xc8, 0xbf, 0x39, 0x87, 0x3c, 0x1f, 0xc9, 0x73, 0x0e, 0xc9, 0xef,
	0x70, 0x60, 0xc3, 0x65, 0x36, 0xf5, 0x3d, 0xeb, 0xcc, 0xf3, 0x59, 0xc8, 0x50, 0x43, 0x8a, 0xf8,
	0x5b, 0x40, 0x23, 0x1a, 0xde, 0x06, 0xd4, 0x77, 0xcd, 0x39, 0x25, 0xf4, 0xc3, 0x82, 0x06, 0x21,
	0x32, 0xa0, 0xb9, 0x90, 0xaa, 0x6e, 0xf9, 0xa4, 0x7c, 0xda, 0x22, 0x4a, 0xc6, 0xdf, 0xc1, 0x4e,
	0xc2, 0x22, 0xf0, 0x98, 0x1b, 0x50, 0x74, 0x08, 0xad, 0xc0, 0x99, 0xb8, 0x66, 0xb8, 0xf0, 0x69,
	0xb7, 0x72, 0x52, 0x3e, 0x6d, 0x93, 0xa5, 0x02, 0xef, 0x02, 0xea, 0x67, 0x86, 0xc1, 0xaf, 0x61,
	0xa7, 0x9f, 0x03, 0xf5, 0xc8, 0xe8, 0x2b, 0x86, 0x99, 0xc0, 0xd6, 0xb5, 0xeb, 0x84, 0x84, 0x7a,
	0x2c, 0x5e, 0x4a, 0x07, 0xea, 0x3e, 0xf5, 0xd8, 0xf5, 0x95, 0x84, 0x92, 0x12, 0x42, 0x50, 0xf3,
	0xcc, 0x70, 0x2a, 0x30, 0x5a, 0x44, 0x7c, 0x73, 0x9d, 0x18, 0xb4, 0x1a, 0xe9, 0xc4, 0x80, 0xbb,
	0xb0, 0x46, 0xe7, 0xa6, 0x33, 0xeb, 0xd6, 0x84, 0x32, 0x12, 0xf0, 0x57, 0xb0, 0xbd, 0x1c, 0x48,
	0x4e, 0x3b, 0x46, 0x2c, 0x2f, 0x11, 0xf1, 0x8f, 0xb0, 0xd7, 0x9b, 0x52, 0xeb, 0xde, 0x63, 0x8e,
	0x9b, 0x98, 0x56, 0x4e, 0x67, 0xd4, 0x85, 0xc6, 0x9c, 0x06, 0x81, 0x39, 0xa1, 0x72, 0x56, 0xb1,
	0x88, 0x4f, 0xa1, 0x93, 0x86, 0x91, 0x83, 0x6e, 0x42, 0x85, 0xdd, 0x0b, 0x94, 0x26, 0xa9, 0xb0,
	0x7b, 0xfc, 0x25, 0x6c, 0x0d, 0x17, 0xb3, 0xd9, 0x8a, 0xa1, 0xf0, 0x0d, 0x74, 0x96, 0xdd, 0x22,
	0xa8, 0xa1, 0x69, 0xdd, 0xd3, 0x90, 0x4f, 0x22, 0x64, 0xaf, 0x68, 0x68, 0x45, 0x06, 0x55, 0x12,
	0x8b, 0xbc, 0x65, 0xcc, 0x3f, 0xa8, 0x2d, 0xa6, 0x57, 0x25, 0xb1, 0x88, 0xa7, 0xb0, 0xdd, 0x9b,
	0x31, 0x97, 0xfe, 0xf2, 0x7e, 0xff, 0x57, 0x05, 0x3e, 0xd7, 0x86, 0x4a, 0xcc, 0xbc, 0x0f, 0x4d,
	0xcf, 0x67, 0x13, 0x9f, 0x06, 0x81, 0x18, 0x73, 0xfd, 0xfc, 0xeb, 0xb3, 0x38, 0xeb, 0x0b, 0x6c,
	0xce, 0x86, 0xd2, 0x60, 0x50, 0x22, 0xca, 0x18, 0x5d, 0x41, 0x23, 0x58, 0x58, 0x16, 0xc7, 0xa9,
	0x08, 0x9c, 0xd3, 0x95, 0x38, 0xa3, 0xa8, 0xff, 0xa0, 0x44, 0x62, 0x53, 0xe3, 0xf7, 0xd0, 0x8c,
	0xd1, 0x9f, 0xe3, 0x54, 0xe3, 0x08, 0x1a, 0x12, 0x35, 0x2f, 0x82, 0x97, 0x2d, 0x68, 0x78, 0xe6,
	0xc3, 0x8c, 0x99, 0x36, 0x7e, 0x07, 0x1d, 0x01, 0xf6, 0xca, 0x67, 0xf3, 0x1e, 0x9b, 0xcf, 0x79,
	0x5e, 0x7e, 0x7a, 0x10, 0x3a, 0x50, 0xb7, 0x84, 0xb1, 0x08, 0x43, 0x9b, 0x48, 0x09, 0xff, 0xb7,
	0x06, 0x9f, 0x67, 0xe0, 0x65, 0xf6, 0x5d, 0x40, 0x7d, 0x4a, 0x4d, 0x9b, 0xfa, 0xd2, 0xe1, 0xbf,
	0x52, 0x8e, 0x2a, 0xb0, 0x38, 0x1b, 0x88, 0xee, 0x83, 0x12, 0x91, 0x86, 0xe8, 0x2d, 0x6c, 0x7a,
	0xa6, 0x75, 0x3f, 0x76, 0x66, 0x34, 0x6a, 0x93, 0x3e, 0xff, 0x66, 0x25, 0xd4, 0x30, 0x61, 0x36,
	0x28, 0x91, 0x14, 0x10, 0x1a, 0x41, 0x3b, 0xd6, 0x5c, 0x99, 0xa1, 0x29, 0xd6, 0xb5, 0x7e, 0xfe,
	0xdb, 0x27, 0x03, 0x73, 0xa3, 0x41, 0x89, 0x24, 0x40, 0x8c, 0xef, 0xa1, 0x2e, 0xe1, 0x7f, 0x0d,
	0xdb, 0x0b, 0xd7, 0x62, 0x73, 0x8f, 0x87, 0x98, 0xda, 0x23, 0xe7, 0xef, 0x54, 0x46, 0x37, 0xa3,
	0x37, 0xde, 0xc1, 0x66, 0x72, 0xba, 0xe8, 0x18, 0x20, 0xc6, 0x95, 0xe1, 0x69, 0x13, 0x4d, 0x93,
	0x8b, 0x5e, 0x29, 0x40, 0xff, 0x47, 0x19, 0xda, 0xfa, 0xa4, 0x57, 0x82, 0x6b, 0xf9, 0x58, 0x2b,
	0xcc, 0xc7, 0xb5, 0x44, 0x3e, 0xf2, 0x9c, 0xb1, 0xb9, 0x17, 0xeb, 0x02, 0x4d, 0x7c, 0xa3, 0x6d,
	0xa8, 0x52, 0xd7, 0xee, 0x36, 0xc4, 0xf1, 0xc3, 0x3f, 0xf5, 0xb4, 0xfc, 0x06, 0xf6, 0x08, 0x9d,
	0x38, 0x41, 0x48, 0x7d, 0x22, 0xd2, 0x6e, 0x45, 0x56, 0xe2, 0x2e, 0x74, 0xd2, 0x06, 0x51, 0x44,
	0xf0, 0x2d, 0xec, 0xfd, 0xc9, 0x37, 0xad, 0xfb, 0x1b, 0x66, 0x99, 0x89, 0xb3, 0xcd, 0x80, 0x26,
	0x37, 0x1e, 0x2e, 0x77, 0x87, 0x92, 0xd1, 0x09, 0xac, 0x8f, 0x99, 0x6f, 0x51, 0x42, 0xf9, 0x74,
	0x84, 0xf3, 0x9a, 0x44, 0x57, 0xf1, 0x01, 0xd3, 0xb0, 0x72, 0xc0, 0x0e, 0xec, 0xf6, 0x69, 0xa8,
	0xf4, 0x41, 0x7c, 0x63, 0x5d, 0xc3, 0x41, 0x4a, 0x9f, 0x38, 0x82, 0x3e, 0x61, 0xbf, 0xe1, 0xf7,
	0x70, 0x30, 0xa2, 0xfc, 0x30, 0x9f, 0x39, 0x96, 0x19, 0x3a, 0xcc, 0x1d, 0xb2, 0x99, 0x63, 0x3d,
	0xac, 0xda, 0xba, 0xa7, 0xb0, 0x15, 0x4c, 0xd9, 0x62, 0x66, 0xc7, 0x96, 0x54, 0xae, 0x2c, 0xad,
	0xc6, 0xc7, 0x70, 0x98, 0x3f, 0x80, 0x5c, 0xe3, 0xf7, 0x60, 0x5c, 0xb8, 0x2e, 0x5b, 0xb8, 0x96,
	0x38, 0xd1, 0x7a, 0xcc, 0x0d, 0xa9, 0xbb, 0xea, 0xe8, 0xc0, 0x47, 0x70, 0x90, 0x6b, 0x25, 0x41,
	0xff, 0x00, 0x55, 0x42, 0xc7, 0x3c, 0x8d, 0x7c, 0x3a, 0xfe, 0x79, 0x79, 0x83, 0xc7, 0x22, 0x4f,
	0xcd, 0xe8, 0x60, 0x19, 0x98, 0x41, 0xec, 0x10, 0x4d, 0x83, 0x2f, 0x04, 0x27, 0x90, 0x1e, 0x1e,
	0x07, 0xcf, 0x38, 0xc9, 0xf0, 0x8d, 0x1e, 0xbc, 0x71, 0xf0, 0xd8, 0x05, 0x8d, 0x4e, 0xa0, 0xe6,
	0xd3, 0x31, 0x3f, 0xe8, 0xab, 0xa7, 0xeb, 0xe7, 0x6d, 0x75, 0x36, 0x10, 0x3a, 0x26, 0xa2, 0x05,
	0xff, 0x55, 0xa0, 0x11, 0x3a, 0x67, 0x21, 0x7d, 0xca, 0x8c, 0x0c, 0x68, 0x7a, 0xe6, 0x84, 0xaa,
	0x0d, 0x5b, 0x23, 0x4a, 0x8e, 0x66, 0x30, 0x89, 0x2e, 0xba, 0x1a, 0x11, 0xdf, 0xf8, 0x35, 0xec,
	0xa5, 0xf0, 0xe5, 0x74, 0x77, 0x61, 0x2d, 0x64, 0xa1, 0x39, 0x13, 0xf8, 0x35, 0x12, 0x09, 0x4f,
	0x98, 0x70, 0x0f, 0xf6, 0xae, 0x83, 0x4b, 0x3a, 0x75, 0x5c, 0x3b, 0x46, 0xfd, 0x74, 0x1f, 0xbe,
	0x81, 0x4e, 0x1a, 0x44, 0x4e, 0xab, 0x08, 0xe5, 0x2b, 0xd8, 0x74, 0x12, 0x16, 0x32, 0x2f, 0x53,
	0x5a, 0x6c, 0xc3, 0xf6, 0xad, 0x67, 0x9b, 0x62, 0xb1, 0xab, 0x66, 0xa6, 0xa5, 0x51, 0xe5, 0xb1,
	0x34, 0xaa, 0x66, 0xd2, 0x68, 0x07, 0x3e, 0xd3, 0x46, 0x91, 0xc9, 0xf9, 0x41, 0xe4, 0x16, 0x4f,
	0x5b, 0xce, 0x39, 0x9f, 0x92, 0x5b, 0xe1, 0x83, 0x17, 0x47, 0x51, 0x7c, 0x27, 0xa2, 0x5b, 0x2d,
	0x88, 0x6e, 0x4d, 0x8b, 0xee, 0xa5, 0xcc, 0x1e, 0x35, 0xe4, 0xa3, 0xc1, 0xdd, 0x85, 0x35, 0xce,
	0x74, 0xa3, 0xe8, 0xb6, 0x48, 0x24, 0xe0, 0xdf, 0x00, 0xd2, 0x76, 0xf1, 0xaa, 0x0d, 0xfa, 0x03,
	0xec, 0x27, 0x7a, 0xa7, 0xd9, 0x9d, 0x47, 0x7d, 0x8b, 0xba, 0xa1, 0xb0, 0x5a, 0x23, 0xb1, 0x88,
	0xff, 0x2c, 0xd3, 0xd0, 0x63, 0x03, 0x27, 0x08, 0x99, 0xff, 0xf0, 0x4c, 0x22, 0x97, 0xc9, 0xef,
	0xff, 0x94, 0xa1, 0x1e, 0x5d, 0xb0, 0xa9, 0xa0, 0x95, 0xd3, 0x41, 0xe3, 0x43, 0x99, 0x8b, 0x70,
	0xca, 0x7c, 0x09, 0x2a, 0x25, 0x9d, 0x18, 0x57, 0x13, 0xc4, 0x98, 0x97, 0x03, 0xa1, 0x33, 0xa7,
	0x41, 0x68, 0xce, 0x3d, 0xe9, 0xf7, 0xa5, 0x82, 0xbb, 0x93, 0x5f, 0x78, 0x41, 0x77, 0x2d, 0x72,
	0xa7, 0x10, 0x78, 0x08, 0x3f, 0x52, 0xdf, 0x19, 0x3b, 0xd4, 0x16, 0x97, 0x59, 0x8d, 0x28, 0x19,
	0xf7, 0xa0, 0x93, 0xf6, 0x82, 0x0c, 0xd8, 0xd7, 0xd0, 0x88, 0x66, 0xca, 0xc9, 0x25, 0xdf, 0x7a,
	0x5b, 0x4b, 0x52, 0x18, 0xd1, 0x87, 0xb8, 0x5d, 0x1e, 0x61, 0x1c, 0xe4, 0x15, 0x1f, 0xf0, 0x39,
	0xdb, 0xef, 0x9f, 0x15, 0xa8, 0x71, 0x63, 0x45, 0x8d, 0xcb, 0x1a, 0x35, 0x46, 0x50, 0x9b, 0xc6,
	0x87, 0x67, 0x9b, 0x88, 0x6f, 0xae, 0x9b, 0x33, 0x3b, 0xf2, 0xcf, 0x06, 0x11, 0xdf, 0x5c, 0x17,
	0xf0, 0x3c, 0x95, 0xf9, 0xc8, 0xbf, 0xf9, 0xe2, 0xe7, 0xcc, 0x8e, 0x16, 0xbf, 0x26, 0xfa, 0x2a,
	0x99, 0xef, 0xe0, 0x85, 0x1b, 0x84, 0xe6, 0x84, 0xda, 0xa3, 0xd0, 0x0c, 0x17, 0x81, 0x70, 0x4f,
	0x8b, 0xa4, 0xb4, 0x08, 0x43, 0x3b, 0xd1, 0xab, 0x21, 0x7a, 0x25, 0x74, 0xe8, 0x25, 0x6c, 0xcc,
	0xa9, 0x3f, 0xa1, 0x3d, 0xe6, 0x8e, 0x67, 0x8e, 0x15, 0x76, 0x9b, 0xe2, 0x30, 0x48, 0x2a, 0xf9,
	0x65, 0x26, 0x14, 0xb7, 0xae, 0x4f, 0x03, 0x36, 0xfb, 0x48, 0xed, 0x6e, 0x2b, 0xba, 0xcc, 0x52,
	0x6a, 0xfc, 0x3b, 0xb5, 0x8f, 0xa4, 0x4f, 0x65, 0x58, 0x5e, 0xc4, 0x21, 0x8e, 0x82, 0xb2, 0xb1,
	0x24, 0x77, 0xce, 0x8c, 0xca, 0x88, 0xf3, 0x23, 0x5c, 0x84, 0xd4, 0x0c, 0x5e, 0xdf, 0xfd, 0x8d,
	0x5a, 0xcf, 0xa2, 0xc7, 0x06, 0x34, 0x99, 0x30, 0xbe, 0xbe, 0x92, 0x04, 0x59, 0xc9, 0xf8, 0x07,
	0xce, 0x74, 0x12, 0xf8, 0xcb, 0xa2, 0x78, 0x1a, 0x2b, 0x65, 0x91, 0xb6, 0x54, 0xe0, 0x33, 0x40,
	0x23, 0x67, 0xe2, 0xfe, 0x14, 0xe5, 0x72, 0x3c, 0x29, 0x2d, 0xd9, 0x23, 0xe2, 0xa6, 0xaa, 0x40,
	0x5e, 0x79, 0xeb, 0xfd, 0xf3, 0x2a, 0xef, 0x72, 0xba, 0x24, 0xde, 0x81, 0xcf, 0x7e, 0x0c, 0xa7,
	0x17, 0xb6, 0xcd, 0xf9, 0x62, 0x4c, 0x63, 0xce, 0x00, 0xe9, 0x4a, 0x09, 0xd4, 0x85, 0x86, 0x19,
	0xa9, 0xe2, 0x4b, 0x5b, 0x8a, 0xf8, 0xdf, 0x65, 0xd8, 0x97, 0x45, 0xff, 0x90, 0xfa, 0x73, 0x27,
	0x08, 0x1c, 0xe6, 0x3e, 0xe5, 0x26, 0x54, 0x75, 0x7c, 0x25, 0x55, 0xc7, 0x77, 0xa0, 0xee, 0x2d,
	0x66, 0x33, 0xea, 0x0b, 0x67, 0x36, 0x89, 0x94, 0x22, 0x7d, 0x30, 0xa5, 0xbe, 0xc8, 0x5a, 0xa1,
	0xe7, 0x12, 0xdf, 0xca, 0xa6, 0x3d, 0x77, 0x5c, 0x91, 0xb4, 0x4d, 0x12, 0x09, 0xf8, 0x10, 0x8c,
	0xbc, 0x69, 0x45, 0xeb, 0x39, 0xff, 0xdf, 0x16, 0x34, 0x7e, 0x66, 0x36, 0x25, 0xc3, 0x1e, 0xfa,
	0x23, 0xac, 0x6b, 0xaf, 0x16, 0xe8, 0x40, 0xe5, 0x49, 0xf6, 0xf5, 0xc3, 0x38, 0xcc, 0x6f, 0x94,
	0x97, 0x48, 0x89, 0x63, 0xf5, 0x73, 0xb1, 0xfa, 0x8f, 0x61, 0xf5, 0x73, 0xb1, 0x2e, 0xa0, 0x19,
	0x3f, 0x24, 0xa0, 0xae, 0xea, 0x9b, 0x7a, 0xc4, 0x30, 0xf6, 0x73, 0x5a, 0x14, 0xc4, 0x08, 0x36,
	0x93, 0x8f, 0x03, 0xe8, 0x78, 0x79, 0x34, 0xe5, 0x3d, 0x3e, 0x18, 0x5f, 0x14, 0xb6, 0x2b, 0xd0,
	0x6b, 0x68, 0xc6, 0x0f, 0x04, 0xda, 0xbc, 0x52, 0x4f, 0x0b, 0x1a, 0x50, 0xfe, 0x6b, 0x02, 0x2e,
	0x7d, 0x5b, 0x46, 0x37, 0xd0, 0x52, 0x65, 0x33, 0xda, 0xcf, 0x2b, 0xa5, 0x23, 0xb0, 0x93, 0x55,
	0x55, 0xb6, 0x40, 0x7b, 0x03, 0x5b, 0xa9, 0xba, 0x0d, 0x7d, 0x51, 0x5c, 0xd1, 0xa5, 0x91, 0x0b,
	0x4a, 0x3e, 0x81, 0x3c, 0x82, 0xcd, 0x64, 0xf9, 0xa1, 0xf9, 0x31, 0xb7, 0x90, 0xd1, 0x96, 0x5f,
	0x50, 0xb7, 0x88, 0xe0, 0x24, 0x4b, 0x0c, 0x0d, 0x34, 0xb7, 0xa4, 0xd1, 0x40, 0x0b, 0x6a, 0x93,
	0x12, 0x7a, 0x03, 0x1b, 0x89, 0x2a, 0x04, 0x1d, 0xe9, 0x59, 0x96, 0xa9, 0x5a, 0x8c, 0x97, 0x45,
	0xcd, 0x19, 0xef, 0x52, 0xd8, 0xcd, 0xab, 0x19, 0xd0, 0x4b, 0x7d, 0x4b, 0x14, 0xd5, 0x2c, 0xc6,
	0x97, 0x2b, 0x7a, 0xa9, 0x05, 0xdc, 0xc1, 0x4e, 0x4e, 0x11, 0x81, 0x5e, 0x28, 0xfb, 0xe2, 0xc2,
	0x44, 0x5b, 0xcc, 0x63, 0x75, 0x48, 0x09, 0xfd, 0x04, 0x6d, 0xbd, 0x0a, 0x40, 0x87, 0x39, 0x4e,
	0x50, 0x6c, 0xde, 0x38, 0x2a, 0x68, 0x55, 0x70, 0x43, 0xe1, 0xf3, 0x25, 0x4d, 0x4f, 0xfa, 0x3c,
	0x53, 0x1e, 0x18, 0xc7, 0x45, 0xcd, 0x7a, 0x6a, 0x24, 0x29, 0xb6, 0x96, 0x1a, 0xb9, 0x04, 0x5e,
	0x4b, 0x8d, 0x7c, 0x6e, 0xae, 0x56, 0xad, 0xf8, 0x66, 0x72, 0xd5, 0x69, 0xe6, 0x6b, 0x1c, 0x15,
	0xb4, 0x2a, 0xb8, 0x2b, 0x68, 0x29, 0x1a, 0xad, 0xed, 0xdd, 0x34, 0x81, 0x37, 0x8c, 0xbc, 0x26,
	0x85, 0xf2, 0x96, 0x13, 0x58, 0xd1, 0x51, 0x4b, 0x0a, 0xed, 0xdc, 0xcc, 0xb2, 0x5b, 0x03, 0xe7,
	0x37, 0x66, 0x12, 0x76, 0x04, 0x9b, 0x49, 0xc2, 0x86, 0x8e, 0xd3, 0x6b, 0x4a, 0xf2, 0x59, 0xcd,
	0x89, 0xf9, 0x4c, 0x2f, 0xe1, 0x44, 0x41, 0x36, 0xb2, 0x4e, 0xd4, 0x79, 0x5d, 0xd6, 0x89, 0x09,
	0x86, 0x12, 0xa5, 0x4e, 0x82, 0x1e, 0x68, 0xa9, 0x93, 0x47, 0x4b, 0x8c, 0xe3, 0xa2, 0x66, 0xfd,
	0x06, 0xd2, 0x98, 0x80, 0x7e, 0x9b, 0x65, 0xf8, 0x84, 0x7e, 0x9b, 0x65, 0xc9, 0x03, 0x2e, 0xa1,
	0x3e, 0xc0, 0x92, 0x0b, 0xa0, 0x65, 0x20, 0x33, 0xac, 0xc1, 0x38, 0xc8, 0x6d, 0x53, 0x40, 0xef,
	0xd5, 0xaf, 0x04, 0xed, 0x32, 0x46, 0x38, 0x7d, 0x99, 0x66, 0x09, 0x84, 0xf1, 0xe2, 0xd1, 0x3e,
	0xf1, 0x00, 0x97, 0xb5, 0xbf, 0x54, 0xbc, 0xbb, 0xbb, 0xba, 0xf8, 0x83, 0xf1, 0xdd, 0xff, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x4f, 0xc5, 0xaf, 0xa6, 0xd2, 0x18, 0x00, 0x00,
}
