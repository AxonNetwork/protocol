// Code generated by protoc-gen-go. DO NOT EDIT.
// source: noderpc.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SetUsernameRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetUsernameRequest) Reset()         { *m = SetUsernameRequest{} }
func (m *SetUsernameRequest) String() string { return proto.CompactTextString(m) }
func (*SetUsernameRequest) ProtoMessage()    {}
func (*SetUsernameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{0}
}

func (m *SetUsernameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetUsernameRequest.Unmarshal(m, b)
}
func (m *SetUsernameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetUsernameRequest.Marshal(b, m, deterministic)
}
func (m *SetUsernameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetUsernameRequest.Merge(m, src)
}
func (m *SetUsernameRequest) XXX_Size() int {
	return xxx_messageInfo_SetUsernameRequest.Size(m)
}
func (m *SetUsernameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetUsernameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetUsernameRequest proto.InternalMessageInfo

func (m *SetUsernameRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type SetUsernameResponse struct {
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetUsernameResponse) Reset()         { *m = SetUsernameResponse{} }
func (m *SetUsernameResponse) String() string { return proto.CompactTextString(m) }
func (*SetUsernameResponse) ProtoMessage()    {}
func (*SetUsernameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{1}
}

func (m *SetUsernameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetUsernameResponse.Unmarshal(m, b)
}
func (m *SetUsernameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetUsernameResponse.Marshal(b, m, deterministic)
}
func (m *SetUsernameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetUsernameResponse.Merge(m, src)
}
func (m *SetUsernameResponse) XXX_Size() int {
	return xxx_messageInfo_SetUsernameResponse.Size(m)
}
func (m *SetUsernameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetUsernameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetUsernameResponse proto.InternalMessageInfo

func (m *SetUsernameResponse) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type GetEthereumBIP39SeedRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEthereumBIP39SeedRequest) Reset()         { *m = GetEthereumBIP39SeedRequest{} }
func (m *GetEthereumBIP39SeedRequest) String() string { return proto.CompactTextString(m) }
func (*GetEthereumBIP39SeedRequest) ProtoMessage()    {}
func (*GetEthereumBIP39SeedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{2}
}

func (m *GetEthereumBIP39SeedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEthereumBIP39SeedRequest.Unmarshal(m, b)
}
func (m *GetEthereumBIP39SeedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEthereumBIP39SeedRequest.Marshal(b, m, deterministic)
}
func (m *GetEthereumBIP39SeedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEthereumBIP39SeedRequest.Merge(m, src)
}
func (m *GetEthereumBIP39SeedRequest) XXX_Size() int {
	return xxx_messageInfo_GetEthereumBIP39SeedRequest.Size(m)
}
func (m *GetEthereumBIP39SeedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEthereumBIP39SeedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEthereumBIP39SeedRequest proto.InternalMessageInfo

type GetEthereumBIP39SeedResponse struct {
	Seed                 string   `protobuf:"bytes,1,opt,name=seed,proto3" json:"seed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEthereumBIP39SeedResponse) Reset()         { *m = GetEthereumBIP39SeedResponse{} }
func (m *GetEthereumBIP39SeedResponse) String() string { return proto.CompactTextString(m) }
func (*GetEthereumBIP39SeedResponse) ProtoMessage()    {}
func (*GetEthereumBIP39SeedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{3}
}

func (m *GetEthereumBIP39SeedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEthereumBIP39SeedResponse.Unmarshal(m, b)
}
func (m *GetEthereumBIP39SeedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEthereumBIP39SeedResponse.Marshal(b, m, deterministic)
}
func (m *GetEthereumBIP39SeedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEthereumBIP39SeedResponse.Merge(m, src)
}
func (m *GetEthereumBIP39SeedResponse) XXX_Size() int {
	return xxx_messageInfo_GetEthereumBIP39SeedResponse.Size(m)
}
func (m *GetEthereumBIP39SeedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEthereumBIP39SeedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetEthereumBIP39SeedResponse proto.InternalMessageInfo

func (m *GetEthereumBIP39SeedResponse) GetSeed() string {
	if m != nil {
		return m.Seed
	}
	return ""
}

type SetEthereumBIP39SeedRequest struct {
	Seed                 string   `protobuf:"bytes,1,opt,name=seed,proto3" json:"seed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetEthereumBIP39SeedRequest) Reset()         { *m = SetEthereumBIP39SeedRequest{} }
func (m *SetEthereumBIP39SeedRequest) String() string { return proto.CompactTextString(m) }
func (*SetEthereumBIP39SeedRequest) ProtoMessage()    {}
func (*SetEthereumBIP39SeedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{4}
}

func (m *SetEthereumBIP39SeedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetEthereumBIP39SeedRequest.Unmarshal(m, b)
}
func (m *SetEthereumBIP39SeedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetEthereumBIP39SeedRequest.Marshal(b, m, deterministic)
}
func (m *SetEthereumBIP39SeedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetEthereumBIP39SeedRequest.Merge(m, src)
}
func (m *SetEthereumBIP39SeedRequest) XXX_Size() int {
	return xxx_messageInfo_SetEthereumBIP39SeedRequest.Size(m)
}
func (m *SetEthereumBIP39SeedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetEthereumBIP39SeedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetEthereumBIP39SeedRequest proto.InternalMessageInfo

func (m *SetEthereumBIP39SeedRequest) GetSeed() string {
	if m != nil {
		return m.Seed
	}
	return ""
}

type SetEthereumBIP39SeedResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetEthereumBIP39SeedResponse) Reset()         { *m = SetEthereumBIP39SeedResponse{} }
func (m *SetEthereumBIP39SeedResponse) String() string { return proto.CompactTextString(m) }
func (*SetEthereumBIP39SeedResponse) ProtoMessage()    {}
func (*SetEthereumBIP39SeedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{5}
}

func (m *SetEthereumBIP39SeedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetEthereumBIP39SeedResponse.Unmarshal(m, b)
}
func (m *SetEthereumBIP39SeedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetEthereumBIP39SeedResponse.Marshal(b, m, deterministic)
}
func (m *SetEthereumBIP39SeedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetEthereumBIP39SeedResponse.Merge(m, src)
}
func (m *SetEthereumBIP39SeedResponse) XXX_Size() int {
	return xxx_messageInfo_SetEthereumBIP39SeedResponse.Size(m)
}
func (m *SetEthereumBIP39SeedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetEthereumBIP39SeedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetEthereumBIP39SeedResponse proto.InternalMessageInfo

type GetUsernameRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUsernameRequest) Reset()         { *m = GetUsernameRequest{} }
func (m *GetUsernameRequest) String() string { return proto.CompactTextString(m) }
func (*GetUsernameRequest) ProtoMessage()    {}
func (*GetUsernameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{6}
}

func (m *GetUsernameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUsernameRequest.Unmarshal(m, b)
}
func (m *GetUsernameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUsernameRequest.Marshal(b, m, deterministic)
}
func (m *GetUsernameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUsernameRequest.Merge(m, src)
}
func (m *GetUsernameRequest) XXX_Size() int {
	return xxx_messageInfo_GetUsernameRequest.Size(m)
}
func (m *GetUsernameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUsernameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUsernameRequest proto.InternalMessageInfo

type GetUsernameResponse struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUsernameResponse) Reset()         { *m = GetUsernameResponse{} }
func (m *GetUsernameResponse) String() string { return proto.CompactTextString(m) }
func (*GetUsernameResponse) ProtoMessage()    {}
func (*GetUsernameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{7}
}

func (m *GetUsernameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUsernameResponse.Unmarshal(m, b)
}
func (m *GetUsernameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUsernameResponse.Marshal(b, m, deterministic)
}
func (m *GetUsernameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUsernameResponse.Merge(m, src)
}
func (m *GetUsernameResponse) XXX_Size() int {
	return xxx_messageInfo_GetUsernameResponse.Size(m)
}
func (m *GetUsernameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUsernameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUsernameResponse proto.InternalMessageInfo

func (m *GetUsernameResponse) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GetUsernameResponse) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type InitRepoRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitRepoRequest) Reset()         { *m = InitRepoRequest{} }
func (m *InitRepoRequest) String() string { return proto.CompactTextString(m) }
func (*InitRepoRequest) ProtoMessage()    {}
func (*InitRepoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{8}
}

func (m *InitRepoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitRepoRequest.Unmarshal(m, b)
}
func (m *InitRepoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitRepoRequest.Marshal(b, m, deterministic)
}
func (m *InitRepoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitRepoRequest.Merge(m, src)
}
func (m *InitRepoRequest) XXX_Size() int {
	return xxx_messageInfo_InitRepoRequest.Size(m)
}
func (m *InitRepoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InitRepoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InitRepoRequest proto.InternalMessageInfo

func (m *InitRepoRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *InitRepoRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *InitRepoRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InitRepoRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type InitRepoResponse struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitRepoResponse) Reset()         { *m = InitRepoResponse{} }
func (m *InitRepoResponse) String() string { return proto.CompactTextString(m) }
func (*InitRepoResponse) ProtoMessage()    {}
func (*InitRepoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{9}
}

func (m *InitRepoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitRepoResponse.Unmarshal(m, b)
}
func (m *InitRepoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitRepoResponse.Marshal(b, m, deterministic)
}
func (m *InitRepoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitRepoResponse.Merge(m, src)
}
func (m *InitRepoResponse) XXX_Size() int {
	return xxx_messageInfo_InitRepoResponse.Size(m)
}
func (m *InitRepoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InitRepoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InitRepoResponse proto.InternalMessageInfo

func (m *InitRepoResponse) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type ImportRepoRequest struct {
	RepoRoot             string   `protobuf:"bytes,1,opt,name=repoRoot,proto3" json:"repoRoot,omitempty"`
	RepoID               string   `protobuf:"bytes,2,opt,name=repoID,proto3" json:"repoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportRepoRequest) Reset()         { *m = ImportRepoRequest{} }
func (m *ImportRepoRequest) String() string { return proto.CompactTextString(m) }
func (*ImportRepoRequest) ProtoMessage()    {}
func (*ImportRepoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{10}
}

func (m *ImportRepoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportRepoRequest.Unmarshal(m, b)
}
func (m *ImportRepoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportRepoRequest.Marshal(b, m, deterministic)
}
func (m *ImportRepoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportRepoRequest.Merge(m, src)
}
func (m *ImportRepoRequest) XXX_Size() int {
	return xxx_messageInfo_ImportRepoRequest.Size(m)
}
func (m *ImportRepoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportRepoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportRepoRequest proto.InternalMessageInfo

func (m *ImportRepoRequest) GetRepoRoot() string {
	if m != nil {
		return m.RepoRoot
	}
	return ""
}

func (m *ImportRepoRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

type ImportRepoResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportRepoResponse) Reset()         { *m = ImportRepoResponse{} }
func (m *ImportRepoResponse) String() string { return proto.CompactTextString(m) }
func (*ImportRepoResponse) ProtoMessage()    {}
func (*ImportRepoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{11}
}

func (m *ImportRepoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportRepoResponse.Unmarshal(m, b)
}
func (m *ImportRepoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportRepoResponse.Marshal(b, m, deterministic)
}
func (m *ImportRepoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportRepoResponse.Merge(m, src)
}
func (m *ImportRepoResponse) XXX_Size() int {
	return xxx_messageInfo_ImportRepoResponse.Size(m)
}
func (m *ImportRepoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportRepoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImportRepoResponse proto.InternalMessageInfo

type CheckpointRepoRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckpointRepoRequest) Reset()         { *m = CheckpointRepoRequest{} }
func (m *CheckpointRepoRequest) String() string { return proto.CompactTextString(m) }
func (*CheckpointRepoRequest) ProtoMessage()    {}
func (*CheckpointRepoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{12}
}

func (m *CheckpointRepoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckpointRepoRequest.Unmarshal(m, b)
}
func (m *CheckpointRepoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckpointRepoRequest.Marshal(b, m, deterministic)
}
func (m *CheckpointRepoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckpointRepoRequest.Merge(m, src)
}
func (m *CheckpointRepoRequest) XXX_Size() int {
	return xxx_messageInfo_CheckpointRepoRequest.Size(m)
}
func (m *CheckpointRepoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckpointRepoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckpointRepoRequest proto.InternalMessageInfo

func (m *CheckpointRepoRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CheckpointRepoRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CheckpointRepoResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckpointRepoResponse) Reset()         { *m = CheckpointRepoResponse{} }
func (m *CheckpointRepoResponse) String() string { return proto.CompactTextString(m) }
func (*CheckpointRepoResponse) ProtoMessage()    {}
func (*CheckpointRepoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{13}
}

func (m *CheckpointRepoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckpointRepoResponse.Unmarshal(m, b)
}
func (m *CheckpointRepoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckpointRepoResponse.Marshal(b, m, deterministic)
}
func (m *CheckpointRepoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckpointRepoResponse.Merge(m, src)
}
func (m *CheckpointRepoResponse) XXX_Size() int {
	return xxx_messageInfo_CheckpointRepoResponse.Size(m)
}
func (m *CheckpointRepoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckpointRepoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckpointRepoResponse proto.InternalMessageInfo

func (m *CheckpointRepoResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type PullRepoRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullRepoRequest) Reset()         { *m = PullRepoRequest{} }
func (m *PullRepoRequest) String() string { return proto.CompactTextString(m) }
func (*PullRepoRequest) ProtoMessage()    {}
func (*PullRepoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{14}
}

func (m *PullRepoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullRepoRequest.Unmarshal(m, b)
}
func (m *PullRepoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullRepoRequest.Marshal(b, m, deterministic)
}
func (m *PullRepoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullRepoRequest.Merge(m, src)
}
func (m *PullRepoRequest) XXX_Size() int {
	return xxx_messageInfo_PullRepoRequest.Size(m)
}
func (m *PullRepoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PullRepoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PullRepoRequest proto.InternalMessageInfo

func (m *PullRepoRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type PullRepoResponsePacket struct {
	ToFetch              int64    `protobuf:"varint,1,opt,name=toFetch,proto3" json:"toFetch,omitempty"`
	Fetched              int64    `protobuf:"varint,2,opt,name=fetched,proto3" json:"fetched,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullRepoResponsePacket) Reset()         { *m = PullRepoResponsePacket{} }
func (m *PullRepoResponsePacket) String() string { return proto.CompactTextString(m) }
func (*PullRepoResponsePacket) ProtoMessage()    {}
func (*PullRepoResponsePacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{15}
}

func (m *PullRepoResponsePacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullRepoResponsePacket.Unmarshal(m, b)
}
func (m *PullRepoResponsePacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullRepoResponsePacket.Marshal(b, m, deterministic)
}
func (m *PullRepoResponsePacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullRepoResponsePacket.Merge(m, src)
}
func (m *PullRepoResponsePacket) XXX_Size() int {
	return xxx_messageInfo_PullRepoResponsePacket.Size(m)
}
func (m *PullRepoResponsePacket) XXX_DiscardUnknown() {
	xxx_messageInfo_PullRepoResponsePacket.DiscardUnknown(m)
}

var xxx_messageInfo_PullRepoResponsePacket proto.InternalMessageInfo

func (m *PullRepoResponsePacket) GetToFetch() int64 {
	if m != nil {
		return m.ToFetch
	}
	return 0
}

func (m *PullRepoResponsePacket) GetFetched() int64 {
	if m != nil {
		return m.Fetched
	}
	return 0
}

type CloneRepoRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloneRepoRequest) Reset()         { *m = CloneRepoRequest{} }
func (m *CloneRepoRequest) String() string { return proto.CompactTextString(m) }
func (*CloneRepoRequest) ProtoMessage()    {}
func (*CloneRepoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{16}
}

func (m *CloneRepoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloneRepoRequest.Unmarshal(m, b)
}
func (m *CloneRepoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloneRepoRequest.Marshal(b, m, deterministic)
}
func (m *CloneRepoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloneRepoRequest.Merge(m, src)
}
func (m *CloneRepoRequest) XXX_Size() int {
	return xxx_messageInfo_CloneRepoRequest.Size(m)
}
func (m *CloneRepoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloneRepoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloneRepoRequest proto.InternalMessageInfo

func (m *CloneRepoRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *CloneRepoRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CloneRepoRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CloneRepoRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type CloneRepoResponsePacket struct {
	// Types that are valid to be assigned to Payload:
	//	*CloneRepoResponsePacket_Progress_
	//	*CloneRepoResponsePacket_Success_
	Payload              isCloneRepoResponsePacket_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *CloneRepoResponsePacket) Reset()         { *m = CloneRepoResponsePacket{} }
func (m *CloneRepoResponsePacket) String() string { return proto.CompactTextString(m) }
func (*CloneRepoResponsePacket) ProtoMessage()    {}
func (*CloneRepoResponsePacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{17}
}

func (m *CloneRepoResponsePacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloneRepoResponsePacket.Unmarshal(m, b)
}
func (m *CloneRepoResponsePacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloneRepoResponsePacket.Marshal(b, m, deterministic)
}
func (m *CloneRepoResponsePacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloneRepoResponsePacket.Merge(m, src)
}
func (m *CloneRepoResponsePacket) XXX_Size() int {
	return xxx_messageInfo_CloneRepoResponsePacket.Size(m)
}
func (m *CloneRepoResponsePacket) XXX_DiscardUnknown() {
	xxx_messageInfo_CloneRepoResponsePacket.DiscardUnknown(m)
}

var xxx_messageInfo_CloneRepoResponsePacket proto.InternalMessageInfo

type isCloneRepoResponsePacket_Payload interface {
	isCloneRepoResponsePacket_Payload()
}

type CloneRepoResponsePacket_Progress_ struct {
	Progress *CloneRepoResponsePacket_Progress `protobuf:"bytes,1,opt,name=progress,proto3,oneof"`
}

type CloneRepoResponsePacket_Success_ struct {
	Success *CloneRepoResponsePacket_Success `protobuf:"bytes,2,opt,name=success,proto3,oneof"`
}

func (*CloneRepoResponsePacket_Progress_) isCloneRepoResponsePacket_Payload() {}

func (*CloneRepoResponsePacket_Success_) isCloneRepoResponsePacket_Payload() {}

func (m *CloneRepoResponsePacket) GetPayload() isCloneRepoResponsePacket_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *CloneRepoResponsePacket) GetProgress() *CloneRepoResponsePacket_Progress {
	if x, ok := m.GetPayload().(*CloneRepoResponsePacket_Progress_); ok {
		return x.Progress
	}
	return nil
}

func (m *CloneRepoResponsePacket) GetSuccess() *CloneRepoResponsePacket_Success {
	if x, ok := m.GetPayload().(*CloneRepoResponsePacket_Success_); ok {
		return x.Success
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CloneRepoResponsePacket) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CloneRepoResponsePacket_Progress_)(nil),
		(*CloneRepoResponsePacket_Success_)(nil),
	}
}

type CloneRepoResponsePacket_Progress struct {
	ToFetch              int64    `protobuf:"varint,1,opt,name=toFetch,proto3" json:"toFetch,omitempty"`
	Fetched              int64    `protobuf:"varint,2,opt,name=fetched,proto3" json:"fetched,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloneRepoResponsePacket_Progress) Reset()         { *m = CloneRepoResponsePacket_Progress{} }
func (m *CloneRepoResponsePacket_Progress) String() string { return proto.CompactTextString(m) }
func (*CloneRepoResponsePacket_Progress) ProtoMessage()    {}
func (*CloneRepoResponsePacket_Progress) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{17, 0}
}

func (m *CloneRepoResponsePacket_Progress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloneRepoResponsePacket_Progress.Unmarshal(m, b)
}
func (m *CloneRepoResponsePacket_Progress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloneRepoResponsePacket_Progress.Marshal(b, m, deterministic)
}
func (m *CloneRepoResponsePacket_Progress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloneRepoResponsePacket_Progress.Merge(m, src)
}
func (m *CloneRepoResponsePacket_Progress) XXX_Size() int {
	return xxx_messageInfo_CloneRepoResponsePacket_Progress.Size(m)
}
func (m *CloneRepoResponsePacket_Progress) XXX_DiscardUnknown() {
	xxx_messageInfo_CloneRepoResponsePacket_Progress.DiscardUnknown(m)
}

var xxx_messageInfo_CloneRepoResponsePacket_Progress proto.InternalMessageInfo

func (m *CloneRepoResponsePacket_Progress) GetToFetch() int64 {
	if m != nil {
		return m.ToFetch
	}
	return 0
}

func (m *CloneRepoResponsePacket_Progress) GetFetched() int64 {
	if m != nil {
		return m.Fetched
	}
	return 0
}

type CloneRepoResponsePacket_Success struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloneRepoResponsePacket_Success) Reset()         { *m = CloneRepoResponsePacket_Success{} }
func (m *CloneRepoResponsePacket_Success) String() string { return proto.CompactTextString(m) }
func (*CloneRepoResponsePacket_Success) ProtoMessage()    {}
func (*CloneRepoResponsePacket_Success) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{17, 1}
}

func (m *CloneRepoResponsePacket_Success) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloneRepoResponsePacket_Success.Unmarshal(m, b)
}
func (m *CloneRepoResponsePacket_Success) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloneRepoResponsePacket_Success.Marshal(b, m, deterministic)
}
func (m *CloneRepoResponsePacket_Success) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloneRepoResponsePacket_Success.Merge(m, src)
}
func (m *CloneRepoResponsePacket_Success) XXX_Size() int {
	return xxx_messageInfo_CloneRepoResponsePacket_Success.Size(m)
}
func (m *CloneRepoResponsePacket_Success) XXX_DiscardUnknown() {
	xxx_messageInfo_CloneRepoResponsePacket_Success.DiscardUnknown(m)
}

var xxx_messageInfo_CloneRepoResponsePacket_Success proto.InternalMessageInfo

func (m *CloneRepoResponsePacket_Success) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type FetchFromCommitRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Commit               []byte   `protobuf:"bytes,3,opt,name=commit,proto3" json:"commit,omitempty"`
	CheckoutType         uint64   `protobuf:"varint,4,opt,name=checkoutType,proto3" json:"checkoutType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchFromCommitRequest) Reset()         { *m = FetchFromCommitRequest{} }
func (m *FetchFromCommitRequest) String() string { return proto.CompactTextString(m) }
func (*FetchFromCommitRequest) ProtoMessage()    {}
func (*FetchFromCommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{18}
}

func (m *FetchFromCommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchFromCommitRequest.Unmarshal(m, b)
}
func (m *FetchFromCommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchFromCommitRequest.Marshal(b, m, deterministic)
}
func (m *FetchFromCommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchFromCommitRequest.Merge(m, src)
}
func (m *FetchFromCommitRequest) XXX_Size() int {
	return xxx_messageInfo_FetchFromCommitRequest.Size(m)
}
func (m *FetchFromCommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchFromCommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchFromCommitRequest proto.InternalMessageInfo

func (m *FetchFromCommitRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *FetchFromCommitRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *FetchFromCommitRequest) GetCommit() []byte {
	if m != nil {
		return m.Commit
	}
	return nil
}

func (m *FetchFromCommitRequest) GetCheckoutType() uint64 {
	if m != nil {
		return m.CheckoutType
	}
	return 0
}

type FetchFromCommitResponse struct {
	// Types that are valid to be assigned to Payload:
	//	*FetchFromCommitResponse_Header_
	//	*FetchFromCommitResponse_PackfileHeader_
	//	*FetchFromCommitResponse_PackfileData_
	//	*FetchFromCommitResponse_Chunk_
	Payload              isFetchFromCommitResponse_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *FetchFromCommitResponse) Reset()         { *m = FetchFromCommitResponse{} }
func (m *FetchFromCommitResponse) String() string { return proto.CompactTextString(m) }
func (*FetchFromCommitResponse) ProtoMessage()    {}
func (*FetchFromCommitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{19}
}

func (m *FetchFromCommitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchFromCommitResponse.Unmarshal(m, b)
}
func (m *FetchFromCommitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchFromCommitResponse.Marshal(b, m, deterministic)
}
func (m *FetchFromCommitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchFromCommitResponse.Merge(m, src)
}
func (m *FetchFromCommitResponse) XXX_Size() int {
	return xxx_messageInfo_FetchFromCommitResponse.Size(m)
}
func (m *FetchFromCommitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchFromCommitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchFromCommitResponse proto.InternalMessageInfo

type isFetchFromCommitResponse_Payload interface {
	isFetchFromCommitResponse_Payload()
}

type FetchFromCommitResponse_Header_ struct {
	Header *FetchFromCommitResponse_Header `protobuf:"bytes,1,opt,name=header,proto3,oneof"`
}

type FetchFromCommitResponse_PackfileHeader_ struct {
	PackfileHeader *FetchFromCommitResponse_PackfileHeader `protobuf:"bytes,2,opt,name=packfileHeader,proto3,oneof"`
}

type FetchFromCommitResponse_PackfileData_ struct {
	PackfileData *FetchFromCommitResponse_PackfileData `protobuf:"bytes,3,opt,name=packfileData,proto3,oneof"`
}

type FetchFromCommitResponse_Chunk_ struct {
	Chunk *FetchFromCommitResponse_Chunk `protobuf:"bytes,4,opt,name=chunk,proto3,oneof"`
}

func (*FetchFromCommitResponse_Header_) isFetchFromCommitResponse_Payload() {}

func (*FetchFromCommitResponse_PackfileHeader_) isFetchFromCommitResponse_Payload() {}

func (*FetchFromCommitResponse_PackfileData_) isFetchFromCommitResponse_Payload() {}

func (*FetchFromCommitResponse_Chunk_) isFetchFromCommitResponse_Payload() {}

func (m *FetchFromCommitResponse) GetPayload() isFetchFromCommitResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *FetchFromCommitResponse) GetHeader() *FetchFromCommitResponse_Header {
	if x, ok := m.GetPayload().(*FetchFromCommitResponse_Header_); ok {
		return x.Header
	}
	return nil
}

func (m *FetchFromCommitResponse) GetPackfileHeader() *FetchFromCommitResponse_PackfileHeader {
	if x, ok := m.GetPayload().(*FetchFromCommitResponse_PackfileHeader_); ok {
		return x.PackfileHeader
	}
	return nil
}

func (m *FetchFromCommitResponse) GetPackfileData() *FetchFromCommitResponse_PackfileData {
	if x, ok := m.GetPayload().(*FetchFromCommitResponse_PackfileData_); ok {
		return x.PackfileData
	}
	return nil
}

func (m *FetchFromCommitResponse) GetChunk() *FetchFromCommitResponse_Chunk {
	if x, ok := m.GetPayload().(*FetchFromCommitResponse_Chunk_); ok {
		return x.Chunk
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FetchFromCommitResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FetchFromCommitResponse_Header_)(nil),
		(*FetchFromCommitResponse_PackfileHeader_)(nil),
		(*FetchFromCommitResponse_PackfileData_)(nil),
		(*FetchFromCommitResponse_Chunk_)(nil),
	}
}

type FetchFromCommitResponse_Header struct {
	UncompressedSize     int64    `protobuf:"varint,1,opt,name=uncompressedSize,proto3" json:"uncompressedSize,omitempty"`
	TotalChunks          int64    `protobuf:"varint,2,opt,name=totalChunks,proto3" json:"totalChunks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchFromCommitResponse_Header) Reset()         { *m = FetchFromCommitResponse_Header{} }
func (m *FetchFromCommitResponse_Header) String() string { return proto.CompactTextString(m) }
func (*FetchFromCommitResponse_Header) ProtoMessage()    {}
func (*FetchFromCommitResponse_Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{19, 0}
}

func (m *FetchFromCommitResponse_Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchFromCommitResponse_Header.Unmarshal(m, b)
}
func (m *FetchFromCommitResponse_Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchFromCommitResponse_Header.Marshal(b, m, deterministic)
}
func (m *FetchFromCommitResponse_Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchFromCommitResponse_Header.Merge(m, src)
}
func (m *FetchFromCommitResponse_Header) XXX_Size() int {
	return xxx_messageInfo_FetchFromCommitResponse_Header.Size(m)
}
func (m *FetchFromCommitResponse_Header) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchFromCommitResponse_Header.DiscardUnknown(m)
}

var xxx_messageInfo_FetchFromCommitResponse_Header proto.InternalMessageInfo

func (m *FetchFromCommitResponse_Header) GetUncompressedSize() int64 {
	if m != nil {
		return m.UncompressedSize
	}
	return 0
}

func (m *FetchFromCommitResponse_Header) GetTotalChunks() int64 {
	if m != nil {
		return m.TotalChunks
	}
	return 0
}

type FetchFromCommitResponse_PackfileHeader struct {
	PackfileID           []byte   `protobuf:"bytes,1,opt,name=packfileID,proto3" json:"packfileID,omitempty"`
	UncompressedSize     int64    `protobuf:"varint,2,opt,name=uncompressedSize,proto3" json:"uncompressedSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchFromCommitResponse_PackfileHeader) Reset() {
	*m = FetchFromCommitResponse_PackfileHeader{}
}
func (m *FetchFromCommitResponse_PackfileHeader) String() string { return proto.CompactTextString(m) }
func (*FetchFromCommitResponse_PackfileHeader) ProtoMessage()    {}
func (*FetchFromCommitResponse_PackfileHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{19, 1}
}

func (m *FetchFromCommitResponse_PackfileHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchFromCommitResponse_PackfileHeader.Unmarshal(m, b)
}
func (m *FetchFromCommitResponse_PackfileHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchFromCommitResponse_PackfileHeader.Marshal(b, m, deterministic)
}
func (m *FetchFromCommitResponse_PackfileHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchFromCommitResponse_PackfileHeader.Merge(m, src)
}
func (m *FetchFromCommitResponse_PackfileHeader) XXX_Size() int {
	return xxx_messageInfo_FetchFromCommitResponse_PackfileHeader.Size(m)
}
func (m *FetchFromCommitResponse_PackfileHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchFromCommitResponse_PackfileHeader.DiscardUnknown(m)
}

var xxx_messageInfo_FetchFromCommitResponse_PackfileHeader proto.InternalMessageInfo

func (m *FetchFromCommitResponse_PackfileHeader) GetPackfileID() []byte {
	if m != nil {
		return m.PackfileID
	}
	return nil
}

func (m *FetchFromCommitResponse_PackfileHeader) GetUncompressedSize() int64 {
	if m != nil {
		return m.UncompressedSize
	}
	return 0
}

type FetchFromCommitResponse_PackfileData struct {
	PackfileID           []byte   `protobuf:"bytes,1,opt,name=packfileID,proto3" json:"packfileID,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	End                  bool     `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchFromCommitResponse_PackfileData) Reset()         { *m = FetchFromCommitResponse_PackfileData{} }
func (m *FetchFromCommitResponse_PackfileData) String() string { return proto.CompactTextString(m) }
func (*FetchFromCommitResponse_PackfileData) ProtoMessage()    {}
func (*FetchFromCommitResponse_PackfileData) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{19, 2}
}

func (m *FetchFromCommitResponse_PackfileData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchFromCommitResponse_PackfileData.Unmarshal(m, b)
}
func (m *FetchFromCommitResponse_PackfileData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchFromCommitResponse_PackfileData.Marshal(b, m, deterministic)
}
func (m *FetchFromCommitResponse_PackfileData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchFromCommitResponse_PackfileData.Merge(m, src)
}
func (m *FetchFromCommitResponse_PackfileData) XXX_Size() int {
	return xxx_messageInfo_FetchFromCommitResponse_PackfileData.Size(m)
}
func (m *FetchFromCommitResponse_PackfileData) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchFromCommitResponse_PackfileData.DiscardUnknown(m)
}

var xxx_messageInfo_FetchFromCommitResponse_PackfileData proto.InternalMessageInfo

func (m *FetchFromCommitResponse_PackfileData) GetPackfileID() []byte {
	if m != nil {
		return m.PackfileID
	}
	return nil
}

func (m *FetchFromCommitResponse_PackfileData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FetchFromCommitResponse_PackfileData) GetEnd() bool {
	if m != nil {
		return m.End
	}
	return false
}

type FetchFromCommitResponse_Chunk struct {
	ObjectID             []byte   `protobuf:"bytes,1,opt,name=objectID,proto3" json:"objectID,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	End                  bool     `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchFromCommitResponse_Chunk) Reset()         { *m = FetchFromCommitResponse_Chunk{} }
func (m *FetchFromCommitResponse_Chunk) String() string { return proto.CompactTextString(m) }
func (*FetchFromCommitResponse_Chunk) ProtoMessage()    {}
func (*FetchFromCommitResponse_Chunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{19, 3}
}

func (m *FetchFromCommitResponse_Chunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchFromCommitResponse_Chunk.Unmarshal(m, b)
}
func (m *FetchFromCommitResponse_Chunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchFromCommitResponse_Chunk.Marshal(b, m, deterministic)
}
func (m *FetchFromCommitResponse_Chunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchFromCommitResponse_Chunk.Merge(m, src)
}
func (m *FetchFromCommitResponse_Chunk) XXX_Size() int {
	return xxx_messageInfo_FetchFromCommitResponse_Chunk.Size(m)
}
func (m *FetchFromCommitResponse_Chunk) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchFromCommitResponse_Chunk.DiscardUnknown(m)
}

var xxx_messageInfo_FetchFromCommitResponse_Chunk proto.InternalMessageInfo

func (m *FetchFromCommitResponse_Chunk) GetObjectID() []byte {
	if m != nil {
		return m.ObjectID
	}
	return nil
}

func (m *FetchFromCommitResponse_Chunk) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FetchFromCommitResponse_Chunk) GetEnd() bool {
	if m != nil {
		return m.End
	}
	return false
}

type RegisterRepoIDRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRepoIDRequest) Reset()         { *m = RegisterRepoIDRequest{} }
func (m *RegisterRepoIDRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRepoIDRequest) ProtoMessage()    {}
func (*RegisterRepoIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{20}
}

func (m *RegisterRepoIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRepoIDRequest.Unmarshal(m, b)
}
func (m *RegisterRepoIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRepoIDRequest.Marshal(b, m, deterministic)
}
func (m *RegisterRepoIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRepoIDRequest.Merge(m, src)
}
func (m *RegisterRepoIDRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRepoIDRequest.Size(m)
}
func (m *RegisterRepoIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRepoIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRepoIDRequest proto.InternalMessageInfo

func (m *RegisterRepoIDRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

type RegisterRepoIDResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRepoIDResponse) Reset()         { *m = RegisterRepoIDResponse{} }
func (m *RegisterRepoIDResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterRepoIDResponse) ProtoMessage()    {}
func (*RegisterRepoIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{21}
}

func (m *RegisterRepoIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRepoIDResponse.Unmarshal(m, b)
}
func (m *RegisterRepoIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRepoIDResponse.Marshal(b, m, deterministic)
}
func (m *RegisterRepoIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRepoIDResponse.Merge(m, src)
}
func (m *RegisterRepoIDResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterRepoIDResponse.Size(m)
}
func (m *RegisterRepoIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRepoIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRepoIDResponse proto.InternalMessageInfo

type IsRepoIDRegisteredRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsRepoIDRegisteredRequest) Reset()         { *m = IsRepoIDRegisteredRequest{} }
func (m *IsRepoIDRegisteredRequest) String() string { return proto.CompactTextString(m) }
func (*IsRepoIDRegisteredRequest) ProtoMessage()    {}
func (*IsRepoIDRegisteredRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{22}
}

func (m *IsRepoIDRegisteredRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsRepoIDRegisteredRequest.Unmarshal(m, b)
}
func (m *IsRepoIDRegisteredRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsRepoIDRegisteredRequest.Marshal(b, m, deterministic)
}
func (m *IsRepoIDRegisteredRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsRepoIDRegisteredRequest.Merge(m, src)
}
func (m *IsRepoIDRegisteredRequest) XXX_Size() int {
	return xxx_messageInfo_IsRepoIDRegisteredRequest.Size(m)
}
func (m *IsRepoIDRegisteredRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsRepoIDRegisteredRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsRepoIDRegisteredRequest proto.InternalMessageInfo

func (m *IsRepoIDRegisteredRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

type IsRepoIDRegisteredResponse struct {
	IsRegistered         bool     `protobuf:"varint,1,opt,name=isRegistered,proto3" json:"isRegistered,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsRepoIDRegisteredResponse) Reset()         { *m = IsRepoIDRegisteredResponse{} }
func (m *IsRepoIDRegisteredResponse) String() string { return proto.CompactTextString(m) }
func (*IsRepoIDRegisteredResponse) ProtoMessage()    {}
func (*IsRepoIDRegisteredResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{23}
}

func (m *IsRepoIDRegisteredResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsRepoIDRegisteredResponse.Unmarshal(m, b)
}
func (m *IsRepoIDRegisteredResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsRepoIDRegisteredResponse.Marshal(b, m, deterministic)
}
func (m *IsRepoIDRegisteredResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsRepoIDRegisteredResponse.Merge(m, src)
}
func (m *IsRepoIDRegisteredResponse) XXX_Size() int {
	return xxx_messageInfo_IsRepoIDRegisteredResponse.Size(m)
}
func (m *IsRepoIDRegisteredResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsRepoIDRegisteredResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsRepoIDRegisteredResponse proto.InternalMessageInfo

func (m *IsRepoIDRegisteredResponse) GetIsRegistered() bool {
	if m != nil {
		return m.IsRegistered
	}
	return false
}

type FetchChunksRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Chunks               [][]byte `protobuf:"bytes,3,rep,name=chunks,proto3" json:"chunks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchChunksRequest) Reset()         { *m = FetchChunksRequest{} }
func (m *FetchChunksRequest) String() string { return proto.CompactTextString(m) }
func (*FetchChunksRequest) ProtoMessage()    {}
func (*FetchChunksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{24}
}

func (m *FetchChunksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchChunksRequest.Unmarshal(m, b)
}
func (m *FetchChunksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchChunksRequest.Marshal(b, m, deterministic)
}
func (m *FetchChunksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchChunksRequest.Merge(m, src)
}
func (m *FetchChunksRequest) XXX_Size() int {
	return xxx_messageInfo_FetchChunksRequest.Size(m)
}
func (m *FetchChunksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchChunksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchChunksRequest proto.InternalMessageInfo

func (m *FetchChunksRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *FetchChunksRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *FetchChunksRequest) GetChunks() [][]byte {
	if m != nil {
		return m.Chunks
	}
	return nil
}

type FetchChunksResponse struct {
	ObjectID             []byte   `protobuf:"bytes,1,opt,name=objectID,proto3" json:"objectID,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	End                  bool     `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchChunksResponse) Reset()         { *m = FetchChunksResponse{} }
func (m *FetchChunksResponse) String() string { return proto.CompactTextString(m) }
func (*FetchChunksResponse) ProtoMessage()    {}
func (*FetchChunksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{25}
}

func (m *FetchChunksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchChunksResponse.Unmarshal(m, b)
}
func (m *FetchChunksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchChunksResponse.Marshal(b, m, deterministic)
}
func (m *FetchChunksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchChunksResponse.Merge(m, src)
}
func (m *FetchChunksResponse) XXX_Size() int {
	return xxx_messageInfo_FetchChunksResponse.Size(m)
}
func (m *FetchChunksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchChunksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchChunksResponse proto.InternalMessageInfo

func (m *FetchChunksResponse) GetObjectID() []byte {
	if m != nil {
		return m.ObjectID
	}
	return nil
}

func (m *FetchChunksResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FetchChunksResponse) GetEnd() bool {
	if m != nil {
		return m.End
	}
	return false
}

type TrackLocalRepoRequest struct {
	RepoPath             string   `protobuf:"bytes,1,opt,name=repoPath,proto3" json:"repoPath,omitempty"`
	ForceReload          bool     `protobuf:"varint,2,opt,name=forceReload,proto3" json:"forceReload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrackLocalRepoRequest) Reset()         { *m = TrackLocalRepoRequest{} }
func (m *TrackLocalRepoRequest) String() string { return proto.CompactTextString(m) }
func (*TrackLocalRepoRequest) ProtoMessage()    {}
func (*TrackLocalRepoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{26}
}

func (m *TrackLocalRepoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackLocalRepoRequest.Unmarshal(m, b)
}
func (m *TrackLocalRepoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackLocalRepoRequest.Marshal(b, m, deterministic)
}
func (m *TrackLocalRepoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackLocalRepoRequest.Merge(m, src)
}
func (m *TrackLocalRepoRequest) XXX_Size() int {
	return xxx_messageInfo_TrackLocalRepoRequest.Size(m)
}
func (m *TrackLocalRepoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackLocalRepoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TrackLocalRepoRequest proto.InternalMessageInfo

func (m *TrackLocalRepoRequest) GetRepoPath() string {
	if m != nil {
		return m.RepoPath
	}
	return ""
}

func (m *TrackLocalRepoRequest) GetForceReload() bool {
	if m != nil {
		return m.ForceReload
	}
	return false
}

type TrackLocalRepoResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrackLocalRepoResponse) Reset()         { *m = TrackLocalRepoResponse{} }
func (m *TrackLocalRepoResponse) String() string { return proto.CompactTextString(m) }
func (*TrackLocalRepoResponse) ProtoMessage()    {}
func (*TrackLocalRepoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{27}
}

func (m *TrackLocalRepoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackLocalRepoResponse.Unmarshal(m, b)
}
func (m *TrackLocalRepoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackLocalRepoResponse.Marshal(b, m, deterministic)
}
func (m *TrackLocalRepoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackLocalRepoResponse.Merge(m, src)
}
func (m *TrackLocalRepoResponse) XXX_Size() int {
	return xxx_messageInfo_TrackLocalRepoResponse.Size(m)
}
func (m *TrackLocalRepoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackLocalRepoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TrackLocalRepoResponse proto.InternalMessageInfo

type GetLocalReposRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLocalReposRequest) Reset()         { *m = GetLocalReposRequest{} }
func (m *GetLocalReposRequest) String() string { return proto.CompactTextString(m) }
func (*GetLocalReposRequest) ProtoMessage()    {}
func (*GetLocalReposRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{28}
}

func (m *GetLocalReposRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLocalReposRequest.Unmarshal(m, b)
}
func (m *GetLocalReposRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLocalReposRequest.Marshal(b, m, deterministic)
}
func (m *GetLocalReposRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLocalReposRequest.Merge(m, src)
}
func (m *GetLocalReposRequest) XXX_Size() int {
	return xxx_messageInfo_GetLocalReposRequest.Size(m)
}
func (m *GetLocalReposRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLocalReposRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLocalReposRequest proto.InternalMessageInfo

type GetLocalReposResponsePacket struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLocalReposResponsePacket) Reset()         { *m = GetLocalReposResponsePacket{} }
func (m *GetLocalReposResponsePacket) String() string { return proto.CompactTextString(m) }
func (*GetLocalReposResponsePacket) ProtoMessage()    {}
func (*GetLocalReposResponsePacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{29}
}

func (m *GetLocalReposResponsePacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLocalReposResponsePacket.Unmarshal(m, b)
}
func (m *GetLocalReposResponsePacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLocalReposResponsePacket.Marshal(b, m, deterministic)
}
func (m *GetLocalReposResponsePacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLocalReposResponsePacket.Merge(m, src)
}
func (m *GetLocalReposResponsePacket) XXX_Size() int {
	return xxx_messageInfo_GetLocalReposResponsePacket.Size(m)
}
func (m *GetLocalReposResponsePacket) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLocalReposResponsePacket.DiscardUnknown(m)
}

var xxx_messageInfo_GetLocalReposResponsePacket proto.InternalMessageInfo

func (m *GetLocalReposResponsePacket) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *GetLocalReposResponsePacket) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type SetReplicationPolicyRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	MaxBytes             int64    `protobuf:"varint,2,opt,name=maxBytes,proto3" json:"maxBytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetReplicationPolicyRequest) Reset()         { *m = SetReplicationPolicyRequest{} }
func (m *SetReplicationPolicyRequest) String() string { return proto.CompactTextString(m) }
func (*SetReplicationPolicyRequest) ProtoMessage()    {}
func (*SetReplicationPolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{30}
}

func (m *SetReplicationPolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetReplicationPolicyRequest.Unmarshal(m, b)
}
func (m *SetReplicationPolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetReplicationPolicyRequest.Marshal(b, m, deterministic)
}
func (m *SetReplicationPolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetReplicationPolicyRequest.Merge(m, src)
}
func (m *SetReplicationPolicyRequest) XXX_Size() int {
	return xxx_messageInfo_SetReplicationPolicyRequest.Size(m)
}
func (m *SetReplicationPolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetReplicationPolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetReplicationPolicyRequest proto.InternalMessageInfo

func (m *SetReplicationPolicyRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *SetReplicationPolicyRequest) GetMaxBytes() int64 {
	if m != nil {
		return m.MaxBytes
	}
	return 0
}

type SetReplicationPolicyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetReplicationPolicyResponse) Reset()         { *m = SetReplicationPolicyResponse{} }
func (m *SetReplicationPolicyResponse) String() string { return proto.CompactTextString(m) }
func (*SetReplicationPolicyResponse) ProtoMessage()    {}
func (*SetReplicationPolicyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{31}
}

func (m *SetReplicationPolicyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetReplicationPolicyResponse.Unmarshal(m, b)
}
func (m *SetReplicationPolicyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetReplicationPolicyResponse.Marshal(b, m, deterministic)
}
func (m *SetReplicationPolicyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetReplicationPolicyResponse.Merge(m, src)
}
func (m *SetReplicationPolicyResponse) XXX_Size() int {
	return xxx_messageInfo_SetReplicationPolicyResponse.Size(m)
}
func (m *SetReplicationPolicyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetReplicationPolicyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetReplicationPolicyResponse proto.InternalMessageInfo

type AnnounceRepoContentRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnnounceRepoContentRequest) Reset()         { *m = AnnounceRepoContentRequest{} }
func (m *AnnounceRepoContentRequest) String() string { return proto.CompactTextString(m) }
func (*AnnounceRepoContentRequest) ProtoMessage()    {}
func (*AnnounceRepoContentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{32}
}

func (m *AnnounceRepoContentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnnounceRepoContentRequest.Unmarshal(m, b)
}
func (m *AnnounceRepoContentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnnounceRepoContentRequest.Marshal(b, m, deterministic)
}
func (m *AnnounceRepoContentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnnounceRepoContentRequest.Merge(m, src)
}
func (m *AnnounceRepoContentRequest) XXX_Size() int {
	return xxx_messageInfo_AnnounceRepoContentRequest.Size(m)
}
func (m *AnnounceRepoContentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AnnounceRepoContentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AnnounceRepoContentRequest proto.InternalMessageInfo

func (m *AnnounceRepoContentRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

type AnnounceRepoContentResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnnounceRepoContentResponse) Reset()         { *m = AnnounceRepoContentResponse{} }
func (m *AnnounceRepoContentResponse) String() string { return proto.CompactTextString(m) }
func (*AnnounceRepoContentResponse) ProtoMessage()    {}
func (*AnnounceRepoContentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{33}
}

func (m *AnnounceRepoContentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnnounceRepoContentResponse.Unmarshal(m, b)
}
func (m *AnnounceRepoContentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnnounceRepoContentResponse.Marshal(b, m, deterministic)
}
func (m *AnnounceRepoContentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnnounceRepoContentResponse.Merge(m, src)
}
func (m *AnnounceRepoContentResponse) XXX_Size() int {
	return xxx_messageInfo_AnnounceRepoContentResponse.Size(m)
}
func (m *AnnounceRepoContentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AnnounceRepoContentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AnnounceRepoContentResponse proto.InternalMessageInfo

type Ref struct {
	RefName              string   `protobuf:"bytes,1,opt,name=refName,proto3" json:"refName,omitempty"`
	CommitHash           string   `protobuf:"bytes,2,opt,name=commitHash,proto3" json:"commitHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ref) Reset()         { *m = Ref{} }
func (m *Ref) String() string { return proto.CompactTextString(m) }
func (*Ref) ProtoMessage()    {}
func (*Ref) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{34}
}

func (m *Ref) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ref.Unmarshal(m, b)
}
func (m *Ref) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ref.Marshal(b, m, deterministic)
}
func (m *Ref) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ref.Merge(m, src)
}
func (m *Ref) XXX_Size() int {
	return xxx_messageInfo_Ref.Size(m)
}
func (m *Ref) XXX_DiscardUnknown() {
	xxx_messageInfo_Ref.DiscardUnknown(m)
}

var xxx_messageInfo_Ref proto.InternalMessageInfo

func (m *Ref) GetRefName() string {
	if m != nil {
		return m.RefName
	}
	return ""
}

func (m *Ref) GetCommitHash() string {
	if m != nil {
		return m.CommitHash
	}
	return ""
}

type GetLocalRefsRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLocalRefsRequest) Reset()         { *m = GetLocalRefsRequest{} }
func (m *GetLocalRefsRequest) String() string { return proto.CompactTextString(m) }
func (*GetLocalRefsRequest) ProtoMessage()    {}
func (*GetLocalRefsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{35}
}

func (m *GetLocalRefsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLocalRefsRequest.Unmarshal(m, b)
}
func (m *GetLocalRefsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLocalRefsRequest.Marshal(b, m, deterministic)
}
func (m *GetLocalRefsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLocalRefsRequest.Merge(m, src)
}
func (m *GetLocalRefsRequest) XXX_Size() int {
	return xxx_messageInfo_GetLocalRefsRequest.Size(m)
}
func (m *GetLocalRefsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLocalRefsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLocalRefsRequest proto.InternalMessageInfo

func (m *GetLocalRefsRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *GetLocalRefsRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type GetLocalRefsResponse struct {
	Refs                 []*Ref   `protobuf:"bytes,1,rep,name=refs,proto3" json:"refs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLocalRefsResponse) Reset()         { *m = GetLocalRefsResponse{} }
func (m *GetLocalRefsResponse) String() string { return proto.CompactTextString(m) }
func (*GetLocalRefsResponse) ProtoMessage()    {}
func (*GetLocalRefsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{36}
}

func (m *GetLocalRefsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLocalRefsResponse.Unmarshal(m, b)
}
func (m *GetLocalRefsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLocalRefsResponse.Marshal(b, m, deterministic)
}
func (m *GetLocalRefsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLocalRefsResponse.Merge(m, src)
}
func (m *GetLocalRefsResponse) XXX_Size() int {
	return xxx_messageInfo_GetLocalRefsResponse.Size(m)
}
func (m *GetLocalRefsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLocalRefsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLocalRefsResponse proto.InternalMessageInfo

func (m *GetLocalRefsResponse) GetRefs() []*Ref {
	if m != nil {
		return m.Refs
	}
	return nil
}

type GetRemoteRefsRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	PageSize             uint64   `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Page                 uint64   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRemoteRefsRequest) Reset()         { *m = GetRemoteRefsRequest{} }
func (m *GetRemoteRefsRequest) String() string { return proto.CompactTextString(m) }
func (*GetRemoteRefsRequest) ProtoMessage()    {}
func (*GetRemoteRefsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{37}
}

func (m *GetRemoteRefsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRemoteRefsRequest.Unmarshal(m, b)
}
func (m *GetRemoteRefsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRemoteRefsRequest.Marshal(b, m, deterministic)
}
func (m *GetRemoteRefsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRemoteRefsRequest.Merge(m, src)
}
func (m *GetRemoteRefsRequest) XXX_Size() int {
	return xxx_messageInfo_GetRemoteRefsRequest.Size(m)
}
func (m *GetRemoteRefsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRemoteRefsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRemoteRefsRequest proto.InternalMessageInfo

func (m *GetRemoteRefsRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *GetRemoteRefsRequest) GetPageSize() uint64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetRemoteRefsRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

type GetRemoteRefsResponse struct {
	Total                uint64   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Refs                 []*Ref   `protobuf:"bytes,2,rep,name=refs,proto3" json:"refs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRemoteRefsResponse) Reset()         { *m = GetRemoteRefsResponse{} }
func (m *GetRemoteRefsResponse) String() string { return proto.CompactTextString(m) }
func (*GetRemoteRefsResponse) ProtoMessage()    {}
func (*GetRemoteRefsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{38}
}

func (m *GetRemoteRefsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRemoteRefsResponse.Unmarshal(m, b)
}
func (m *GetRemoteRefsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRemoteRefsResponse.Marshal(b, m, deterministic)
}
func (m *GetRemoteRefsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRemoteRefsResponse.Merge(m, src)
}
func (m *GetRemoteRefsResponse) XXX_Size() int {
	return xxx_messageInfo_GetRemoteRefsResponse.Size(m)
}
func (m *GetRemoteRefsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRemoteRefsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRemoteRefsResponse proto.InternalMessageInfo

func (m *GetRemoteRefsResponse) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *GetRemoteRefsResponse) GetRefs() []*Ref {
	if m != nil {
		return m.Refs
	}
	return nil
}

type IsBehindRemoteRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsBehindRemoteRequest) Reset()         { *m = IsBehindRemoteRequest{} }
func (m *IsBehindRemoteRequest) String() string { return proto.CompactTextString(m) }
func (*IsBehindRemoteRequest) ProtoMessage()    {}
func (*IsBehindRemoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{39}
}

func (m *IsBehindRemoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsBehindRemoteRequest.Unmarshal(m, b)
}
func (m *IsBehindRemoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsBehindRemoteRequest.Marshal(b, m, deterministic)
}
func (m *IsBehindRemoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsBehindRemoteRequest.Merge(m, src)
}
func (m *IsBehindRemoteRequest) XXX_Size() int {
	return xxx_messageInfo_IsBehindRemoteRequest.Size(m)
}
func (m *IsBehindRemoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsBehindRemoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsBehindRemoteRequest proto.InternalMessageInfo

func (m *IsBehindRemoteRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *IsBehindRemoteRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type IsBehindRemoteResponse struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	IsBehindRemote       bool     `protobuf:"varint,2,opt,name=isBehindRemote,proto3" json:"isBehindRemote,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsBehindRemoteResponse) Reset()         { *m = IsBehindRemoteResponse{} }
func (m *IsBehindRemoteResponse) String() string { return proto.CompactTextString(m) }
func (*IsBehindRemoteResponse) ProtoMessage()    {}
func (*IsBehindRemoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{40}
}

func (m *IsBehindRemoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsBehindRemoteResponse.Unmarshal(m, b)
}
func (m *IsBehindRemoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsBehindRemoteResponse.Marshal(b, m, deterministic)
}
func (m *IsBehindRemoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsBehindRemoteResponse.Merge(m, src)
}
func (m *IsBehindRemoteResponse) XXX_Size() int {
	return xxx_messageInfo_IsBehindRemoteResponse.Size(m)
}
func (m *IsBehindRemoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsBehindRemoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsBehindRemoteResponse proto.InternalMessageInfo

func (m *IsBehindRemoteResponse) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *IsBehindRemoteResponse) GetIsBehindRemote() bool {
	if m != nil {
		return m.IsBehindRemote
	}
	return false
}

type PushRepoRequest struct {
	RepoRoot             string   `protobuf:"bytes,1,opt,name=repoRoot,proto3" json:"repoRoot,omitempty"`
	BranchName           string   `protobuf:"bytes,2,opt,name=branchName,proto3" json:"branchName,omitempty"`
	Force                bool     `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushRepoRequest) Reset()         { *m = PushRepoRequest{} }
func (m *PushRepoRequest) String() string { return proto.CompactTextString(m) }
func (*PushRepoRequest) ProtoMessage()    {}
func (*PushRepoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{41}
}

func (m *PushRepoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushRepoRequest.Unmarshal(m, b)
}
func (m *PushRepoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushRepoRequest.Marshal(b, m, deterministic)
}
func (m *PushRepoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushRepoRequest.Merge(m, src)
}
func (m *PushRepoRequest) XXX_Size() int {
	return xxx_messageInfo_PushRepoRequest.Size(m)
}
func (m *PushRepoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushRepoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushRepoRequest proto.InternalMessageInfo

func (m *PushRepoRequest) GetRepoRoot() string {
	if m != nil {
		return m.RepoRoot
	}
	return ""
}

func (m *PushRepoRequest) GetBranchName() string {
	if m != nil {
		return m.BranchName
	}
	return ""
}

func (m *PushRepoRequest) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type ProgressPacket struct {
	Current              uint64   `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Total                uint64   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Done                 bool     `protobuf:"varint,3,opt,name=done,proto3" json:"done,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProgressPacket) Reset()         { *m = ProgressPacket{} }
func (m *ProgressPacket) String() string { return proto.CompactTextString(m) }
func (*ProgressPacket) ProtoMessage()    {}
func (*ProgressPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{42}
}

func (m *ProgressPacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProgressPacket.Unmarshal(m, b)
}
func (m *ProgressPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProgressPacket.Marshal(b, m, deterministic)
}
func (m *ProgressPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProgressPacket.Merge(m, src)
}
func (m *ProgressPacket) XXX_Size() int {
	return xxx_messageInfo_ProgressPacket.Size(m)
}
func (m *ProgressPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_ProgressPacket.DiscardUnknown(m)
}

var xxx_messageInfo_ProgressPacket proto.InternalMessageInfo

func (m *ProgressPacket) GetCurrent() uint64 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *ProgressPacket) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ProgressPacket) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

type UpdateRefRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	RefName              string   `protobuf:"bytes,2,opt,name=refName,proto3" json:"refName,omitempty"`
	CommitHash           string   `protobuf:"bytes,3,opt,name=commitHash,proto3" json:"commitHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRefRequest) Reset()         { *m = UpdateRefRequest{} }
func (m *UpdateRefRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRefRequest) ProtoMessage()    {}
func (*UpdateRefRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{43}
}

func (m *UpdateRefRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRefRequest.Unmarshal(m, b)
}
func (m *UpdateRefRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRefRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRefRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRefRequest.Merge(m, src)
}
func (m *UpdateRefRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRefRequest.Size(m)
}
func (m *UpdateRefRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRefRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRefRequest proto.InternalMessageInfo

func (m *UpdateRefRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *UpdateRefRequest) GetRefName() string {
	if m != nil {
		return m.RefName
	}
	return ""
}

func (m *UpdateRefRequest) GetCommitHash() string {
	if m != nil {
		return m.CommitHash
	}
	return ""
}

type UpdateRefResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRefResponse) Reset()         { *m = UpdateRefResponse{} }
func (m *UpdateRefResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateRefResponse) ProtoMessage()    {}
func (*UpdateRefResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{44}
}

func (m *UpdateRefResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRefResponse.Unmarshal(m, b)
}
func (m *UpdateRefResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRefResponse.Marshal(b, m, deterministic)
}
func (m *UpdateRefResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRefResponse.Merge(m, src)
}
func (m *UpdateRefResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateRefResponse.Size(m)
}
func (m *UpdateRefResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRefResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRefResponse proto.InternalMessageInfo

type ReplicationRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicationRequest) Reset()         { *m = ReplicationRequest{} }
func (m *ReplicationRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicationRequest) ProtoMessage()    {}
func (*ReplicationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{45}
}

func (m *ReplicationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicationRequest.Unmarshal(m, b)
}
func (m *ReplicationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicationRequest.Marshal(b, m, deterministic)
}
func (m *ReplicationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicationRequest.Merge(m, src)
}
func (m *ReplicationRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicationRequest.Size(m)
}
func (m *ReplicationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicationRequest proto.InternalMessageInfo

func (m *ReplicationRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

type SetRepoPublicRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	IsPublic             bool     `protobuf:"varint,2,opt,name=isPublic,proto3" json:"isPublic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetRepoPublicRequest) Reset()         { *m = SetRepoPublicRequest{} }
func (m *SetRepoPublicRequest) String() string { return proto.CompactTextString(m) }
func (*SetRepoPublicRequest) ProtoMessage()    {}
func (*SetRepoPublicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{46}
}

func (m *SetRepoPublicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRepoPublicRequest.Unmarshal(m, b)
}
func (m *SetRepoPublicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRepoPublicRequest.Marshal(b, m, deterministic)
}
func (m *SetRepoPublicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRepoPublicRequest.Merge(m, src)
}
func (m *SetRepoPublicRequest) XXX_Size() int {
	return xxx_messageInfo_SetRepoPublicRequest.Size(m)
}
func (m *SetRepoPublicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRepoPublicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetRepoPublicRequest proto.InternalMessageInfo

func (m *SetRepoPublicRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *SetRepoPublicRequest) GetIsPublic() bool {
	if m != nil {
		return m.IsPublic
	}
	return false
}

type SetRepoPublicResponse struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	IsPublic             bool     `protobuf:"varint,2,opt,name=isPublic,proto3" json:"isPublic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetRepoPublicResponse) Reset()         { *m = SetRepoPublicResponse{} }
func (m *SetRepoPublicResponse) String() string { return proto.CompactTextString(m) }
func (*SetRepoPublicResponse) ProtoMessage()    {}
func (*SetRepoPublicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{47}
}

func (m *SetRepoPublicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRepoPublicResponse.Unmarshal(m, b)
}
func (m *SetRepoPublicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRepoPublicResponse.Marshal(b, m, deterministic)
}
func (m *SetRepoPublicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRepoPublicResponse.Merge(m, src)
}
func (m *SetRepoPublicResponse) XXX_Size() int {
	return xxx_messageInfo_SetRepoPublicResponse.Size(m)
}
func (m *SetRepoPublicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRepoPublicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetRepoPublicResponse proto.InternalMessageInfo

func (m *SetRepoPublicResponse) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *SetRepoPublicResponse) GetIsPublic() bool {
	if m != nil {
		return m.IsPublic
	}
	return false
}

type IsRepoPublicRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsRepoPublicRequest) Reset()         { *m = IsRepoPublicRequest{} }
func (m *IsRepoPublicRequest) String() string { return proto.CompactTextString(m) }
func (*IsRepoPublicRequest) ProtoMessage()    {}
func (*IsRepoPublicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{48}
}

func (m *IsRepoPublicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsRepoPublicRequest.Unmarshal(m, b)
}
func (m *IsRepoPublicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsRepoPublicRequest.Marshal(b, m, deterministic)
}
func (m *IsRepoPublicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsRepoPublicRequest.Merge(m, src)
}
func (m *IsRepoPublicRequest) XXX_Size() int {
	return xxx_messageInfo_IsRepoPublicRequest.Size(m)
}
func (m *IsRepoPublicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsRepoPublicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsRepoPublicRequest proto.InternalMessageInfo

func (m *IsRepoPublicRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

type IsRepoPublicResponse struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	IsPublic             bool     `protobuf:"varint,2,opt,name=isPublic,proto3" json:"isPublic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsRepoPublicResponse) Reset()         { *m = IsRepoPublicResponse{} }
func (m *IsRepoPublicResponse) String() string { return proto.CompactTextString(m) }
func (*IsRepoPublicResponse) ProtoMessage()    {}
func (*IsRepoPublicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{49}
}

func (m *IsRepoPublicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsRepoPublicResponse.Unmarshal(m, b)
}
func (m *IsRepoPublicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsRepoPublicResponse.Marshal(b, m, deterministic)
}
func (m *IsRepoPublicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsRepoPublicResponse.Merge(m, src)
}
func (m *IsRepoPublicResponse) XXX_Size() int {
	return xxx_messageInfo_IsRepoPublicResponse.Size(m)
}
func (m *IsRepoPublicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsRepoPublicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsRepoPublicResponse proto.InternalMessageInfo

func (m *IsRepoPublicResponse) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *IsRepoPublicResponse) GetIsPublic() bool {
	if m != nil {
		return m.IsPublic
	}
	return false
}

type GetRepoUsersRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Type                 uint64   `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	PageSize             uint64   `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Page                 uint64   `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRepoUsersRequest) Reset()         { *m = GetRepoUsersRequest{} }
func (m *GetRepoUsersRequest) String() string { return proto.CompactTextString(m) }
func (*GetRepoUsersRequest) ProtoMessage()    {}
func (*GetRepoUsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{50}
}

func (m *GetRepoUsersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepoUsersRequest.Unmarshal(m, b)
}
func (m *GetRepoUsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepoUsersRequest.Marshal(b, m, deterministic)
}
func (m *GetRepoUsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepoUsersRequest.Merge(m, src)
}
func (m *GetRepoUsersRequest) XXX_Size() int {
	return xxx_messageInfo_GetRepoUsersRequest.Size(m)
}
func (m *GetRepoUsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepoUsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepoUsersRequest proto.InternalMessageInfo

func (m *GetRepoUsersRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *GetRepoUsersRequest) GetType() uint64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GetRepoUsersRequest) GetPageSize() uint64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetRepoUsersRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

type GetRepoUsersResponse struct {
	Total                uint64   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Users                []string `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRepoUsersResponse) Reset()         { *m = GetRepoUsersResponse{} }
func (m *GetRepoUsersResponse) String() string { return proto.CompactTextString(m) }
func (*GetRepoUsersResponse) ProtoMessage()    {}
func (*GetRepoUsersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{51}
}

func (m *GetRepoUsersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepoUsersResponse.Unmarshal(m, b)
}
func (m *GetRepoUsersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepoUsersResponse.Marshal(b, m, deterministic)
}
func (m *GetRepoUsersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepoUsersResponse.Merge(m, src)
}
func (m *GetRepoUsersResponse) XXX_Size() int {
	return xxx_messageInfo_GetRepoUsersResponse.Size(m)
}
func (m *GetRepoUsersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepoUsersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepoUsersResponse proto.InternalMessageInfo

func (m *GetRepoUsersResponse) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *GetRepoUsersResponse) GetUsers() []string {
	if m != nil {
		return m.Users
	}
	return nil
}

type GetUserPermissionsRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserPermissionsRequest) Reset()         { *m = GetUserPermissionsRequest{} }
func (m *GetUserPermissionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserPermissionsRequest) ProtoMessage()    {}
func (*GetUserPermissionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{52}
}

func (m *GetUserPermissionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserPermissionsRequest.Unmarshal(m, b)
}
func (m *GetUserPermissionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserPermissionsRequest.Marshal(b, m, deterministic)
}
func (m *GetUserPermissionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserPermissionsRequest.Merge(m, src)
}
func (m *GetUserPermissionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserPermissionsRequest.Size(m)
}
func (m *GetUserPermissionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserPermissionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserPermissionsRequest proto.InternalMessageInfo

func (m *GetUserPermissionsRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *GetUserPermissionsRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type GetUserPermissionsResponse struct {
	Puller               bool     `protobuf:"varint,1,opt,name=puller,proto3" json:"puller,omitempty"`
	Pusher               bool     `protobuf:"varint,2,opt,name=pusher,proto3" json:"pusher,omitempty"`
	Admin                bool     `protobuf:"varint,3,opt,name=admin,proto3" json:"admin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserPermissionsResponse) Reset()         { *m = GetUserPermissionsResponse{} }
func (m *GetUserPermissionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserPermissionsResponse) ProtoMessage()    {}
func (*GetUserPermissionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{53}
}

func (m *GetUserPermissionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserPermissionsResponse.Unmarshal(m, b)
}
func (m *GetUserPermissionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserPermissionsResponse.Marshal(b, m, deterministic)
}
func (m *GetUserPermissionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserPermissionsResponse.Merge(m, src)
}
func (m *GetUserPermissionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserPermissionsResponse.Size(m)
}
func (m *GetUserPermissionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserPermissionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserPermissionsResponse proto.InternalMessageInfo

func (m *GetUserPermissionsResponse) GetPuller() bool {
	if m != nil {
		return m.Puller
	}
	return false
}

func (m *GetUserPermissionsResponse) GetPusher() bool {
	if m != nil {
		return m.Pusher
	}
	return false
}

func (m *GetUserPermissionsResponse) GetAdmin() bool {
	if m != nil {
		return m.Admin
	}
	return false
}

type SetUserPermissionsRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Puller               bool     `protobuf:"varint,3,opt,name=puller,proto3" json:"puller,omitempty"`
	Pusher               bool     `protobuf:"varint,4,opt,name=pusher,proto3" json:"pusher,omitempty"`
	Admin                bool     `protobuf:"varint,5,opt,name=admin,proto3" json:"admin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetUserPermissionsRequest) Reset()         { *m = SetUserPermissionsRequest{} }
func (m *SetUserPermissionsRequest) String() string { return proto.CompactTextString(m) }
func (*SetUserPermissionsRequest) ProtoMessage()    {}
func (*SetUserPermissionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{54}
}

func (m *SetUserPermissionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetUserPermissionsRequest.Unmarshal(m, b)
}
func (m *SetUserPermissionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetUserPermissionsRequest.Marshal(b, m, deterministic)
}
func (m *SetUserPermissionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetUserPermissionsRequest.Merge(m, src)
}
func (m *SetUserPermissionsRequest) XXX_Size() int {
	return xxx_messageInfo_SetUserPermissionsRequest.Size(m)
}
func (m *SetUserPermissionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetUserPermissionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetUserPermissionsRequest proto.InternalMessageInfo

func (m *SetUserPermissionsRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *SetUserPermissionsRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *SetUserPermissionsRequest) GetPuller() bool {
	if m != nil {
		return m.Puller
	}
	return false
}

func (m *SetUserPermissionsRequest) GetPusher() bool {
	if m != nil {
		return m.Pusher
	}
	return false
}

func (m *SetUserPermissionsRequest) GetAdmin() bool {
	if m != nil {
		return m.Admin
	}
	return false
}

type SetUserPermissionsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetUserPermissionsResponse) Reset()         { *m = SetUserPermissionsResponse{} }
func (m *SetUserPermissionsResponse) String() string { return proto.CompactTextString(m) }
func (*SetUserPermissionsResponse) ProtoMessage()    {}
func (*SetUserPermissionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{55}
}

func (m *SetUserPermissionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetUserPermissionsResponse.Unmarshal(m, b)
}
func (m *SetUserPermissionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetUserPermissionsResponse.Marshal(b, m, deterministic)
}
func (m *SetUserPermissionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetUserPermissionsResponse.Merge(m, src)
}
func (m *SetUserPermissionsResponse) XXX_Size() int {
	return xxx_messageInfo_SetUserPermissionsResponse.Size(m)
}
func (m *SetUserPermissionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetUserPermissionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetUserPermissionsResponse proto.InternalMessageInfo

type GetRepoHistoryRequest struct {
	// need one or the other
	RepoID string `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	Path   string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// need one or the other
	// if neither, defaults to HEAD
	FromCommitHash       []byte   `protobuf:"bytes,3,opt,name=fromCommitHash,proto3" json:"fromCommitHash,omitempty"`
	FromCommitRef        string   `protobuf:"bytes,4,opt,name=fromCommitRef,proto3" json:"fromCommitRef,omitempty"`
	PageSize             uint64   `protobuf:"varint,5,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OnlyHashes           bool     `protobuf:"varint,6,opt,name=onlyHashes,proto3" json:"onlyHashes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRepoHistoryRequest) Reset()         { *m = GetRepoHistoryRequest{} }
func (m *GetRepoHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*GetRepoHistoryRequest) ProtoMessage()    {}
func (*GetRepoHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{56}
}

func (m *GetRepoHistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepoHistoryRequest.Unmarshal(m, b)
}
func (m *GetRepoHistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepoHistoryRequest.Marshal(b, m, deterministic)
}
func (m *GetRepoHistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepoHistoryRequest.Merge(m, src)
}
func (m *GetRepoHistoryRequest) XXX_Size() int {
	return xxx_messageInfo_GetRepoHistoryRequest.Size(m)
}
func (m *GetRepoHistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepoHistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepoHistoryRequest proto.InternalMessageInfo

func (m *GetRepoHistoryRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *GetRepoHistoryRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *GetRepoHistoryRequest) GetFromCommitHash() []byte {
	if m != nil {
		return m.FromCommitHash
	}
	return nil
}

func (m *GetRepoHistoryRequest) GetFromCommitRef() string {
	if m != nil {
		return m.FromCommitRef
	}
	return ""
}

func (m *GetRepoHistoryRequest) GetPageSize() uint64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetRepoHistoryRequest) GetOnlyHashes() bool {
	if m != nil {
		return m.OnlyHashes
	}
	return false
}

type Commit struct {
	CommitHash           string   `protobuf:"bytes,1,opt,name=commitHash,proto3" json:"commitHash,omitempty"`
	Author               string   `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Files                []string `protobuf:"bytes,4,rep,name=files,proto3" json:"files,omitempty"`
	Timestamp            uint64   `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Commit) Reset()         { *m = Commit{} }
func (m *Commit) String() string { return proto.CompactTextString(m) }
func (*Commit) ProtoMessage()    {}
func (*Commit) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{57}
}

func (m *Commit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commit.Unmarshal(m, b)
}
func (m *Commit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commit.Marshal(b, m, deterministic)
}
func (m *Commit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commit.Merge(m, src)
}
func (m *Commit) XXX_Size() int {
	return xxx_messageInfo_Commit.Size(m)
}
func (m *Commit) XXX_DiscardUnknown() {
	xxx_messageInfo_Commit.DiscardUnknown(m)
}

var xxx_messageInfo_Commit proto.InternalMessageInfo

func (m *Commit) GetCommitHash() string {
	if m != nil {
		return m.CommitHash
	}
	return ""
}

func (m *Commit) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Commit) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Commit) GetFiles() []string {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *Commit) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type GetRepoHistoryResponse struct {
	Commits              []*Commit `protobuf:"bytes,1,rep,name=commits,proto3" json:"commits,omitempty"`
	IsEnd                bool      `protobuf:"varint,2,opt,name=isEnd,proto3" json:"isEnd,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetRepoHistoryResponse) Reset()         { *m = GetRepoHistoryResponse{} }
func (m *GetRepoHistoryResponse) String() string { return proto.CompactTextString(m) }
func (*GetRepoHistoryResponse) ProtoMessage()    {}
func (*GetRepoHistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{58}
}

func (m *GetRepoHistoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepoHistoryResponse.Unmarshal(m, b)
}
func (m *GetRepoHistoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepoHistoryResponse.Marshal(b, m, deterministic)
}
func (m *GetRepoHistoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepoHistoryResponse.Merge(m, src)
}
func (m *GetRepoHistoryResponse) XXX_Size() int {
	return xxx_messageInfo_GetRepoHistoryResponse.Size(m)
}
func (m *GetRepoHistoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepoHistoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepoHistoryResponse proto.InternalMessageInfo

func (m *GetRepoHistoryResponse) GetCommits() []*Commit {
	if m != nil {
		return m.Commits
	}
	return nil
}

func (m *GetRepoHistoryResponse) GetIsEnd() bool {
	if m != nil {
		return m.IsEnd
	}
	return false
}

type GetUpdatedRefEventsRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	StartBlock           uint64   `protobuf:"varint,2,opt,name=startBlock,proto3" json:"startBlock,omitempty"`
	EndBlock             uint64   `protobuf:"varint,3,opt,name=endBlock,proto3" json:"endBlock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUpdatedRefEventsRequest) Reset()         { *m = GetUpdatedRefEventsRequest{} }
func (m *GetUpdatedRefEventsRequest) String() string { return proto.CompactTextString(m) }
func (*GetUpdatedRefEventsRequest) ProtoMessage()    {}
func (*GetUpdatedRefEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{59}
}

func (m *GetUpdatedRefEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUpdatedRefEventsRequest.Unmarshal(m, b)
}
func (m *GetUpdatedRefEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUpdatedRefEventsRequest.Marshal(b, m, deterministic)
}
func (m *GetUpdatedRefEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUpdatedRefEventsRequest.Merge(m, src)
}
func (m *GetUpdatedRefEventsRequest) XXX_Size() int {
	return xxx_messageInfo_GetUpdatedRefEventsRequest.Size(m)
}
func (m *GetUpdatedRefEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUpdatedRefEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUpdatedRefEventsRequest proto.InternalMessageInfo

func (m *GetUpdatedRefEventsRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *GetUpdatedRefEventsRequest) GetStartBlock() uint64 {
	if m != nil {
		return m.StartBlock
	}
	return 0
}

func (m *GetUpdatedRefEventsRequest) GetEndBlock() uint64 {
	if m != nil {
		return m.EndBlock
	}
	return 0
}

type UpdatedRefEvent struct {
	Commit               string   `protobuf:"bytes,1,opt,name=commit,proto3" json:"commit,omitempty"`
	RepoID               string   `protobuf:"bytes,2,opt,name=repoID,proto3" json:"repoID,omitempty"`
	TxHash               string   `protobuf:"bytes,3,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Time                 uint64   `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	BlockNumber          uint64   `protobuf:"varint,5,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatedRefEvent) Reset()         { *m = UpdatedRefEvent{} }
func (m *UpdatedRefEvent) String() string { return proto.CompactTextString(m) }
func (*UpdatedRefEvent) ProtoMessage()    {}
func (*UpdatedRefEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{60}
}

func (m *UpdatedRefEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatedRefEvent.Unmarshal(m, b)
}
func (m *UpdatedRefEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatedRefEvent.Marshal(b, m, deterministic)
}
func (m *UpdatedRefEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatedRefEvent.Merge(m, src)
}
func (m *UpdatedRefEvent) XXX_Size() int {
	return xxx_messageInfo_UpdatedRefEvent.Size(m)
}
func (m *UpdatedRefEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatedRefEvent.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatedRefEvent proto.InternalMessageInfo

func (m *UpdatedRefEvent) GetCommit() string {
	if m != nil {
		return m.Commit
	}
	return ""
}

func (m *UpdatedRefEvent) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *UpdatedRefEvent) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *UpdatedRefEvent) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *UpdatedRefEvent) GetBlockNumber() uint64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

type GetUpdatedRefEventsResponse struct {
	Events               []*UpdatedRefEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetUpdatedRefEventsResponse) Reset()         { *m = GetUpdatedRefEventsResponse{} }
func (m *GetUpdatedRefEventsResponse) String() string { return proto.CompactTextString(m) }
func (*GetUpdatedRefEventsResponse) ProtoMessage()    {}
func (*GetUpdatedRefEventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{61}
}

func (m *GetUpdatedRefEventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUpdatedRefEventsResponse.Unmarshal(m, b)
}
func (m *GetUpdatedRefEventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUpdatedRefEventsResponse.Marshal(b, m, deterministic)
}
func (m *GetUpdatedRefEventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUpdatedRefEventsResponse.Merge(m, src)
}
func (m *GetUpdatedRefEventsResponse) XXX_Size() int {
	return xxx_messageInfo_GetUpdatedRefEventsResponse.Size(m)
}
func (m *GetUpdatedRefEventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUpdatedRefEventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUpdatedRefEventsResponse proto.InternalMessageInfo

func (m *GetUpdatedRefEventsResponse) GetEvents() []*UpdatedRefEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

type GetRepoFilesRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	RepoRoot             string   `protobuf:"bytes,2,opt,name=repoRoot,proto3" json:"repoRoot,omitempty"`
	CommitHash           []byte   `protobuf:"bytes,3,opt,name=commitHash,proto3" json:"commitHash,omitempty"`
	CommitRef            string   `protobuf:"bytes,4,opt,name=commitRef,proto3" json:"commitRef,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRepoFilesRequest) Reset()         { *m = GetRepoFilesRequest{} }
func (m *GetRepoFilesRequest) String() string { return proto.CompactTextString(m) }
func (*GetRepoFilesRequest) ProtoMessage()    {}
func (*GetRepoFilesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{62}
}

func (m *GetRepoFilesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepoFilesRequest.Unmarshal(m, b)
}
func (m *GetRepoFilesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepoFilesRequest.Marshal(b, m, deterministic)
}
func (m *GetRepoFilesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepoFilesRequest.Merge(m, src)
}
func (m *GetRepoFilesRequest) XXX_Size() int {
	return xxx_messageInfo_GetRepoFilesRequest.Size(m)
}
func (m *GetRepoFilesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepoFilesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepoFilesRequest proto.InternalMessageInfo

func (m *GetRepoFilesRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *GetRepoFilesRequest) GetRepoRoot() string {
	if m != nil {
		return m.RepoRoot
	}
	return ""
}

func (m *GetRepoFilesRequest) GetCommitHash() []byte {
	if m != nil {
		return m.CommitHash
	}
	return nil
}

func (m *GetRepoFilesRequest) GetCommitRef() string {
	if m != nil {
		return m.CommitRef
	}
	return ""
}

type File struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Hash                 []byte   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Mode                 uint32   `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	Size                 uint64   `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Modified             uint32   `protobuf:"varint,5,opt,name=modified,proto3" json:"modified,omitempty"`
	UnstagedStatus       string   `protobuf:"bytes,6,opt,name=unstagedStatus,proto3" json:"unstagedStatus,omitempty"`
	StagedStatus         string   `protobuf:"bytes,7,opt,name=stagedStatus,proto3" json:"stagedStatus,omitempty"`
	MergeConflict        bool     `protobuf:"varint,8,opt,name=mergeConflict,proto3" json:"mergeConflict,omitempty"`
	IsChunked            bool     `protobuf:"varint,9,opt,name=isChunked,proto3" json:"isChunked,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{63}
}

func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (m *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(m, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *File) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *File) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *File) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *File) GetModified() uint32 {
	if m != nil {
		return m.Modified
	}
	return 0
}

func (m *File) GetUnstagedStatus() string {
	if m != nil {
		return m.UnstagedStatus
	}
	return ""
}

func (m *File) GetStagedStatus() string {
	if m != nil {
		return m.StagedStatus
	}
	return ""
}

func (m *File) GetMergeConflict() bool {
	if m != nil {
		return m.MergeConflict
	}
	return false
}

func (m *File) GetIsChunked() bool {
	if m != nil {
		return m.IsChunked
	}
	return false
}

type GetRepoFilesResponse struct {
	Files                []*File  `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRepoFilesResponse) Reset()         { *m = GetRepoFilesResponse{} }
func (m *GetRepoFilesResponse) String() string { return proto.CompactTextString(m) }
func (*GetRepoFilesResponse) ProtoMessage()    {}
func (*GetRepoFilesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{64}
}

func (m *GetRepoFilesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepoFilesResponse.Unmarshal(m, b)
}
func (m *GetRepoFilesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepoFilesResponse.Marshal(b, m, deterministic)
}
func (m *GetRepoFilesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepoFilesResponse.Merge(m, src)
}
func (m *GetRepoFilesResponse) XXX_Size() int {
	return xxx_messageInfo_GetRepoFilesResponse.Size(m)
}
func (m *GetRepoFilesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepoFilesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepoFilesResponse proto.InternalMessageInfo

func (m *GetRepoFilesResponse) GetFiles() []*File {
	if m != nil {
		return m.Files
	}
	return nil
}

type SignMessageRequest struct {
	Message              []byte   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignMessageRequest) Reset()         { *m = SignMessageRequest{} }
func (m *SignMessageRequest) String() string { return proto.CompactTextString(m) }
func (*SignMessageRequest) ProtoMessage()    {}
func (*SignMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{65}
}

func (m *SignMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignMessageRequest.Unmarshal(m, b)
}
func (m *SignMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignMessageRequest.Marshal(b, m, deterministic)
}
func (m *SignMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignMessageRequest.Merge(m, src)
}
func (m *SignMessageRequest) XXX_Size() int {
	return xxx_messageInfo_SignMessageRequest.Size(m)
}
func (m *SignMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignMessageRequest proto.InternalMessageInfo

func (m *SignMessageRequest) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

type SignMessageResponse struct {
	Signature            []byte   `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignMessageResponse) Reset()         { *m = SignMessageResponse{} }
func (m *SignMessageResponse) String() string { return proto.CompactTextString(m) }
func (*SignMessageResponse) ProtoMessage()    {}
func (*SignMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{66}
}

func (m *SignMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignMessageResponse.Unmarshal(m, b)
}
func (m *SignMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignMessageResponse.Marshal(b, m, deterministic)
}
func (m *SignMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignMessageResponse.Merge(m, src)
}
func (m *SignMessageResponse) XXX_Size() int {
	return xxx_messageInfo_SignMessageResponse.Size(m)
}
func (m *SignMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignMessageResponse proto.InternalMessageInfo

func (m *SignMessageResponse) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type EthAddressRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthAddressRequest) Reset()         { *m = EthAddressRequest{} }
func (m *EthAddressRequest) String() string { return proto.CompactTextString(m) }
func (*EthAddressRequest) ProtoMessage()    {}
func (*EthAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{67}
}

func (m *EthAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthAddressRequest.Unmarshal(m, b)
}
func (m *EthAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthAddressRequest.Marshal(b, m, deterministic)
}
func (m *EthAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthAddressRequest.Merge(m, src)
}
func (m *EthAddressRequest) XXX_Size() int {
	return xxx_messageInfo_EthAddressRequest.Size(m)
}
func (m *EthAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EthAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EthAddressRequest proto.InternalMessageInfo

type EthAddressResponse struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthAddressResponse) Reset()         { *m = EthAddressResponse{} }
func (m *EthAddressResponse) String() string { return proto.CompactTextString(m) }
func (*EthAddressResponse) ProtoMessage()    {}
func (*EthAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{68}
}

func (m *EthAddressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthAddressResponse.Unmarshal(m, b)
}
func (m *EthAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthAddressResponse.Marshal(b, m, deterministic)
}
func (m *EthAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthAddressResponse.Merge(m, src)
}
func (m *EthAddressResponse) XXX_Size() int {
	return xxx_messageInfo_EthAddressResponse.Size(m)
}
func (m *EthAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EthAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EthAddressResponse proto.InternalMessageInfo

func (m *EthAddressResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type GetObjectRequest struct {
	// need one or the other
	RepoID   string `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	RepoRoot string `protobuf:"bytes,2,opt,name=repoRoot,proto3" json:"repoRoot,omitempty"`
	// need objectID -or-
	//  (filename -and-
	//     (commitHash -or- commitRef)
	//  )
	// @@TODO: unfuck this
	ObjectID             []byte   `protobuf:"bytes,3,opt,name=objectID,proto3" json:"objectID,omitempty"`
	Filename             string   `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`
	CommitHash           []byte   `protobuf:"bytes,5,opt,name=commitHash,proto3" json:"commitHash,omitempty"`
	CommitRef            string   `protobuf:"bytes,6,opt,name=commitRef,proto3" json:"commitRef,omitempty"`
	MaxSize              uint64   `protobuf:"varint,7,opt,name=maxSize,proto3" json:"maxSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetObjectRequest) Reset()         { *m = GetObjectRequest{} }
func (m *GetObjectRequest) String() string { return proto.CompactTextString(m) }
func (*GetObjectRequest) ProtoMessage()    {}
func (*GetObjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{69}
}

func (m *GetObjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetObjectRequest.Unmarshal(m, b)
}
func (m *GetObjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetObjectRequest.Marshal(b, m, deterministic)
}
func (m *GetObjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetObjectRequest.Merge(m, src)
}
func (m *GetObjectRequest) XXX_Size() int {
	return xxx_messageInfo_GetObjectRequest.Size(m)
}
func (m *GetObjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetObjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetObjectRequest proto.InternalMessageInfo

func (m *GetObjectRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *GetObjectRequest) GetRepoRoot() string {
	if m != nil {
		return m.RepoRoot
	}
	return ""
}

func (m *GetObjectRequest) GetObjectID() []byte {
	if m != nil {
		return m.ObjectID
	}
	return nil
}

func (m *GetObjectRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *GetObjectRequest) GetCommitHash() []byte {
	if m != nil {
		return m.CommitHash
	}
	return nil
}

func (m *GetObjectRequest) GetCommitRef() string {
	if m != nil {
		return m.CommitRef
	}
	return ""
}

func (m *GetObjectRequest) GetMaxSize() uint64 {
	if m != nil {
		return m.MaxSize
	}
	return 0
}

type GetObjectResponse struct {
	// Types that are valid to be assigned to Payload:
	//	*GetObjectResponse_Header_
	//	*GetObjectResponse_Data_
	Payload              isGetObjectResponse_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *GetObjectResponse) Reset()         { *m = GetObjectResponse{} }
func (m *GetObjectResponse) String() string { return proto.CompactTextString(m) }
func (*GetObjectResponse) ProtoMessage()    {}
func (*GetObjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{70}
}

func (m *GetObjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetObjectResponse.Unmarshal(m, b)
}
func (m *GetObjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetObjectResponse.Marshal(b, m, deterministic)
}
func (m *GetObjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetObjectResponse.Merge(m, src)
}
func (m *GetObjectResponse) XXX_Size() int {
	return xxx_messageInfo_GetObjectResponse.Size(m)
}
func (m *GetObjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetObjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetObjectResponse proto.InternalMessageInfo

type isGetObjectResponse_Payload interface {
	isGetObjectResponse_Payload()
}

type GetObjectResponse_Header_ struct {
	Header *GetObjectResponse_Header `protobuf:"bytes,1,opt,name=header,proto3,oneof"`
}

type GetObjectResponse_Data_ struct {
	Data *GetObjectResponse_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetObjectResponse_Header_) isGetObjectResponse_Payload() {}

func (*GetObjectResponse_Data_) isGetObjectResponse_Payload() {}

func (m *GetObjectResponse) GetPayload() isGetObjectResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *GetObjectResponse) GetHeader() *GetObjectResponse_Header {
	if x, ok := m.GetPayload().(*GetObjectResponse_Header_); ok {
		return x.Header
	}
	return nil
}

func (m *GetObjectResponse) GetData() *GetObjectResponse_Data {
	if x, ok := m.GetPayload().(*GetObjectResponse_Data_); ok {
		return x.Data
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetObjectResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetObjectResponse_Header_)(nil),
		(*GetObjectResponse_Data_)(nil),
	}
}

type GetObjectResponse_Header struct {
	UncompressedSize     uint64   `protobuf:"varint,1,opt,name=uncompressedSize,proto3" json:"uncompressedSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetObjectResponse_Header) Reset()         { *m = GetObjectResponse_Header{} }
func (m *GetObjectResponse_Header) String() string { return proto.CompactTextString(m) }
func (*GetObjectResponse_Header) ProtoMessage()    {}
func (*GetObjectResponse_Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{70, 0}
}

func (m *GetObjectResponse_Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetObjectResponse_Header.Unmarshal(m, b)
}
func (m *GetObjectResponse_Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetObjectResponse_Header.Marshal(b, m, deterministic)
}
func (m *GetObjectResponse_Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetObjectResponse_Header.Merge(m, src)
}
func (m *GetObjectResponse_Header) XXX_Size() int {
	return xxx_messageInfo_GetObjectResponse_Header.Size(m)
}
func (m *GetObjectResponse_Header) XXX_DiscardUnknown() {
	xxx_messageInfo_GetObjectResponse_Header.DiscardUnknown(m)
}

var xxx_messageInfo_GetObjectResponse_Header proto.InternalMessageInfo

func (m *GetObjectResponse_Header) GetUncompressedSize() uint64 {
	if m != nil {
		return m.UncompressedSize
	}
	return 0
}

type GetObjectResponse_Data struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	End                  bool     `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetObjectResponse_Data) Reset()         { *m = GetObjectResponse_Data{} }
func (m *GetObjectResponse_Data) String() string { return proto.CompactTextString(m) }
func (*GetObjectResponse_Data) ProtoMessage()    {}
func (*GetObjectResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{70, 1}
}

func (m *GetObjectResponse_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetObjectResponse_Data.Unmarshal(m, b)
}
func (m *GetObjectResponse_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetObjectResponse_Data.Marshal(b, m, deterministic)
}
func (m *GetObjectResponse_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetObjectResponse_Data.Merge(m, src)
}
func (m *GetObjectResponse_Data) XXX_Size() int {
	return xxx_messageInfo_GetObjectResponse_Data.Size(m)
}
func (m *GetObjectResponse_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_GetObjectResponse_Data.DiscardUnknown(m)
}

var xxx_messageInfo_GetObjectResponse_Data proto.InternalMessageInfo

func (m *GetObjectResponse_Data) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetObjectResponse_Data) GetEnd() bool {
	if m != nil {
		return m.End
	}
	return false
}

type GetDiffRequest struct {
	// need one or the other
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	RepoRoot             string   `protobuf:"bytes,2,opt,name=repoRoot,proto3" json:"repoRoot,omitempty"`
	CommitHash           []byte   `protobuf:"bytes,3,opt,name=commitHash,proto3" json:"commitHash,omitempty"`
	CommitRef            string   `protobuf:"bytes,4,opt,name=commitRef,proto3" json:"commitRef,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDiffRequest) Reset()         { *m = GetDiffRequest{} }
func (m *GetDiffRequest) String() string { return proto.CompactTextString(m) }
func (*GetDiffRequest) ProtoMessage()    {}
func (*GetDiffRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{71}
}

func (m *GetDiffRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDiffRequest.Unmarshal(m, b)
}
func (m *GetDiffRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDiffRequest.Marshal(b, m, deterministic)
}
func (m *GetDiffRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDiffRequest.Merge(m, src)
}
func (m *GetDiffRequest) XXX_Size() int {
	return xxx_messageInfo_GetDiffRequest.Size(m)
}
func (m *GetDiffRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDiffRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDiffRequest proto.InternalMessageInfo

func (m *GetDiffRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *GetDiffRequest) GetRepoRoot() string {
	if m != nil {
		return m.RepoRoot
	}
	return ""
}

func (m *GetDiffRequest) GetCommitHash() []byte {
	if m != nil {
		return m.CommitHash
	}
	return nil
}

func (m *GetDiffRequest) GetCommitRef() string {
	if m != nil {
		return m.CommitRef
	}
	return ""
}

type GetDiffResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	End                  bool     `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDiffResponse) Reset()         { *m = GetDiffResponse{} }
func (m *GetDiffResponse) String() string { return proto.CompactTextString(m) }
func (*GetDiffResponse) ProtoMessage()    {}
func (*GetDiffResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{72}
}

func (m *GetDiffResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDiffResponse.Unmarshal(m, b)
}
func (m *GetDiffResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDiffResponse.Marshal(b, m, deterministic)
}
func (m *GetDiffResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDiffResponse.Merge(m, src)
}
func (m *GetDiffResponse) XXX_Size() int {
	return xxx_messageInfo_GetDiffResponse.Size(m)
}
func (m *GetDiffResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDiffResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDiffResponse proto.InternalMessageInfo

func (m *GetDiffResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetDiffResponse) GetEnd() bool {
	if m != nil {
		return m.End
	}
	return false
}

type SetFileChunkingRequest struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	RepoRoot             string   `protobuf:"bytes,2,opt,name=repoRoot,proto3" json:"repoRoot,omitempty"`
	Filename             string   `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	Enabled              bool     `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetFileChunkingRequest) Reset()         { *m = SetFileChunkingRequest{} }
func (m *SetFileChunkingRequest) String() string { return proto.CompactTextString(m) }
func (*SetFileChunkingRequest) ProtoMessage()    {}
func (*SetFileChunkingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{73}
}

func (m *SetFileChunkingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetFileChunkingRequest.Unmarshal(m, b)
}
func (m *SetFileChunkingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetFileChunkingRequest.Marshal(b, m, deterministic)
}
func (m *SetFileChunkingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetFileChunkingRequest.Merge(m, src)
}
func (m *SetFileChunkingRequest) XXX_Size() int {
	return xxx_messageInfo_SetFileChunkingRequest.Size(m)
}
func (m *SetFileChunkingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetFileChunkingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetFileChunkingRequest proto.InternalMessageInfo

func (m *SetFileChunkingRequest) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *SetFileChunkingRequest) GetRepoRoot() string {
	if m != nil {
		return m.RepoRoot
	}
	return ""
}

func (m *SetFileChunkingRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *SetFileChunkingRequest) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

type SetFileChunkingResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetFileChunkingResponse) Reset()         { *m = SetFileChunkingResponse{} }
func (m *SetFileChunkingResponse) String() string { return proto.CompactTextString(m) }
func (*SetFileChunkingResponse) ProtoMessage()    {}
func (*SetFileChunkingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{74}
}

func (m *SetFileChunkingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetFileChunkingResponse.Unmarshal(m, b)
}
func (m *SetFileChunkingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetFileChunkingResponse.Marshal(b, m, deterministic)
}
func (m *SetFileChunkingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetFileChunkingResponse.Merge(m, src)
}
func (m *SetFileChunkingResponse) XXX_Size() int {
	return xxx_messageInfo_SetFileChunkingResponse.Size(m)
}
func (m *SetFileChunkingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetFileChunkingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetFileChunkingResponse proto.InternalMessageInfo

type WatchRequest struct {
	EventTypes            []uint64                            `protobuf:"varint,1,rep,packed,name=eventTypes,proto3" json:"eventTypes,omitempty"`
	UpdatedRefEventParams *WatchRequest_UpdatedRefEventParams `protobuf:"bytes,2,opt,name=updatedRefEventParams,proto3" json:"updatedRefEventParams,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                            `json:"-"`
	XXX_unrecognized      []byte                              `json:"-"`
	XXX_sizecache         int32                               `json:"-"`
}

func (m *WatchRequest) Reset()         { *m = WatchRequest{} }
func (m *WatchRequest) String() string { return proto.CompactTextString(m) }
func (*WatchRequest) ProtoMessage()    {}
func (*WatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{75}
}

func (m *WatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchRequest.Unmarshal(m, b)
}
func (m *WatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchRequest.Marshal(b, m, deterministic)
}
func (m *WatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchRequest.Merge(m, src)
}
func (m *WatchRequest) XXX_Size() int {
	return xxx_messageInfo_WatchRequest.Size(m)
}
func (m *WatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchRequest proto.InternalMessageInfo

func (m *WatchRequest) GetEventTypes() []uint64 {
	if m != nil {
		return m.EventTypes
	}
	return nil
}

func (m *WatchRequest) GetUpdatedRefEventParams() *WatchRequest_UpdatedRefEventParams {
	if m != nil {
		return m.UpdatedRefEventParams
	}
	return nil
}

type WatchRequest_UpdatedRefEventParams struct {
	FromBlock            uint64   `protobuf:"varint,1,opt,name=fromBlock,proto3" json:"fromBlock,omitempty"`
	RepoIDs              []string `protobuf:"bytes,2,rep,name=repoIDs,proto3" json:"repoIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchRequest_UpdatedRefEventParams) Reset()         { *m = WatchRequest_UpdatedRefEventParams{} }
func (m *WatchRequest_UpdatedRefEventParams) String() string { return proto.CompactTextString(m) }
func (*WatchRequest_UpdatedRefEventParams) ProtoMessage()    {}
func (*WatchRequest_UpdatedRefEventParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{75, 0}
}

func (m *WatchRequest_UpdatedRefEventParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchRequest_UpdatedRefEventParams.Unmarshal(m, b)
}
func (m *WatchRequest_UpdatedRefEventParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchRequest_UpdatedRefEventParams.Marshal(b, m, deterministic)
}
func (m *WatchRequest_UpdatedRefEventParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchRequest_UpdatedRefEventParams.Merge(m, src)
}
func (m *WatchRequest_UpdatedRefEventParams) XXX_Size() int {
	return xxx_messageInfo_WatchRequest_UpdatedRefEventParams.Size(m)
}
func (m *WatchRequest_UpdatedRefEventParams) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchRequest_UpdatedRefEventParams.DiscardUnknown(m)
}

var xxx_messageInfo_WatchRequest_UpdatedRefEventParams proto.InternalMessageInfo

func (m *WatchRequest_UpdatedRefEventParams) GetFromBlock() uint64 {
	if m != nil {
		return m.FromBlock
	}
	return 0
}

func (m *WatchRequest_UpdatedRefEventParams) GetRepoIDs() []string {
	if m != nil {
		return m.RepoIDs
	}
	return nil
}

type WatchResponse struct {
	// Types that are valid to be assigned to Payload:
	//	*WatchResponse_AddedRepoEvent_
	//	*WatchResponse_PulledRepoEvent_
	//	*WatchResponse_PushedRepoEvent_
	//	*WatchResponse_UpdatedRefEvent_
	Payload              isWatchResponse_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *WatchResponse) Reset()         { *m = WatchResponse{} }
func (m *WatchResponse) String() string { return proto.CompactTextString(m) }
func (*WatchResponse) ProtoMessage()    {}
func (*WatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{76}
}

func (m *WatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchResponse.Unmarshal(m, b)
}
func (m *WatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchResponse.Marshal(b, m, deterministic)
}
func (m *WatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchResponse.Merge(m, src)
}
func (m *WatchResponse) XXX_Size() int {
	return xxx_messageInfo_WatchResponse.Size(m)
}
func (m *WatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchResponse proto.InternalMessageInfo

type isWatchResponse_Payload interface {
	isWatchResponse_Payload()
}

type WatchResponse_AddedRepoEvent_ struct {
	AddedRepoEvent *WatchResponse_AddedRepoEvent `protobuf:"bytes,1,opt,name=addedRepoEvent,proto3,oneof"`
}

type WatchResponse_PulledRepoEvent_ struct {
	PulledRepoEvent *WatchResponse_PulledRepoEvent `protobuf:"bytes,2,opt,name=pulledRepoEvent,proto3,oneof"`
}

type WatchResponse_PushedRepoEvent_ struct {
	PushedRepoEvent *WatchResponse_PushedRepoEvent `protobuf:"bytes,3,opt,name=pushedRepoEvent,proto3,oneof"`
}

type WatchResponse_UpdatedRefEvent_ struct {
	UpdatedRefEvent *WatchResponse_UpdatedRefEvent `protobuf:"bytes,4,opt,name=updatedRefEvent,proto3,oneof"`
}

func (*WatchResponse_AddedRepoEvent_) isWatchResponse_Payload() {}

func (*WatchResponse_PulledRepoEvent_) isWatchResponse_Payload() {}

func (*WatchResponse_PushedRepoEvent_) isWatchResponse_Payload() {}

func (*WatchResponse_UpdatedRefEvent_) isWatchResponse_Payload() {}

func (m *WatchResponse) GetPayload() isWatchResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *WatchResponse) GetAddedRepoEvent() *WatchResponse_AddedRepoEvent {
	if x, ok := m.GetPayload().(*WatchResponse_AddedRepoEvent_); ok {
		return x.AddedRepoEvent
	}
	return nil
}

func (m *WatchResponse) GetPulledRepoEvent() *WatchResponse_PulledRepoEvent {
	if x, ok := m.GetPayload().(*WatchResponse_PulledRepoEvent_); ok {
		return x.PulledRepoEvent
	}
	return nil
}

func (m *WatchResponse) GetPushedRepoEvent() *WatchResponse_PushedRepoEvent {
	if x, ok := m.GetPayload().(*WatchResponse_PushedRepoEvent_); ok {
		return x.PushedRepoEvent
	}
	return nil
}

func (m *WatchResponse) GetUpdatedRefEvent() *WatchResponse_UpdatedRefEvent {
	if x, ok := m.GetPayload().(*WatchResponse_UpdatedRefEvent_); ok {
		return x.UpdatedRefEvent
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*WatchResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*WatchResponse_AddedRepoEvent_)(nil),
		(*WatchResponse_PulledRepoEvent_)(nil),
		(*WatchResponse_PushedRepoEvent_)(nil),
		(*WatchResponse_UpdatedRefEvent_)(nil),
	}
}

type WatchResponse_AddedRepoEvent struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	RepoRoot             string   `protobuf:"bytes,2,opt,name=repoRoot,proto3" json:"repoRoot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchResponse_AddedRepoEvent) Reset()         { *m = WatchResponse_AddedRepoEvent{} }
func (m *WatchResponse_AddedRepoEvent) String() string { return proto.CompactTextString(m) }
func (*WatchResponse_AddedRepoEvent) ProtoMessage()    {}
func (*WatchResponse_AddedRepoEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{76, 0}
}

func (m *WatchResponse_AddedRepoEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchResponse_AddedRepoEvent.Unmarshal(m, b)
}
func (m *WatchResponse_AddedRepoEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchResponse_AddedRepoEvent.Marshal(b, m, deterministic)
}
func (m *WatchResponse_AddedRepoEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchResponse_AddedRepoEvent.Merge(m, src)
}
func (m *WatchResponse_AddedRepoEvent) XXX_Size() int {
	return xxx_messageInfo_WatchResponse_AddedRepoEvent.Size(m)
}
func (m *WatchResponse_AddedRepoEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchResponse_AddedRepoEvent.DiscardUnknown(m)
}

var xxx_messageInfo_WatchResponse_AddedRepoEvent proto.InternalMessageInfo

func (m *WatchResponse_AddedRepoEvent) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *WatchResponse_AddedRepoEvent) GetRepoRoot() string {
	if m != nil {
		return m.RepoRoot
	}
	return ""
}

type WatchResponse_PulledRepoEvent struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	RepoRoot             string   `protobuf:"bytes,2,opt,name=repoRoot,proto3" json:"repoRoot,omitempty"`
	UpdatedRefs          []string `protobuf:"bytes,3,rep,name=updatedRefs,proto3" json:"updatedRefs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchResponse_PulledRepoEvent) Reset()         { *m = WatchResponse_PulledRepoEvent{} }
func (m *WatchResponse_PulledRepoEvent) String() string { return proto.CompactTextString(m) }
func (*WatchResponse_PulledRepoEvent) ProtoMessage()    {}
func (*WatchResponse_PulledRepoEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{76, 1}
}

func (m *WatchResponse_PulledRepoEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchResponse_PulledRepoEvent.Unmarshal(m, b)
}
func (m *WatchResponse_PulledRepoEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchResponse_PulledRepoEvent.Marshal(b, m, deterministic)
}
func (m *WatchResponse_PulledRepoEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchResponse_PulledRepoEvent.Merge(m, src)
}
func (m *WatchResponse_PulledRepoEvent) XXX_Size() int {
	return xxx_messageInfo_WatchResponse_PulledRepoEvent.Size(m)
}
func (m *WatchResponse_PulledRepoEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchResponse_PulledRepoEvent.DiscardUnknown(m)
}

var xxx_messageInfo_WatchResponse_PulledRepoEvent proto.InternalMessageInfo

func (m *WatchResponse_PulledRepoEvent) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *WatchResponse_PulledRepoEvent) GetRepoRoot() string {
	if m != nil {
		return m.RepoRoot
	}
	return ""
}

func (m *WatchResponse_PulledRepoEvent) GetUpdatedRefs() []string {
	if m != nil {
		return m.UpdatedRefs
	}
	return nil
}

type WatchResponse_PushedRepoEvent struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	RepoRoot             string   `protobuf:"bytes,2,opt,name=repoRoot,proto3" json:"repoRoot,omitempty"`
	BranchName           string   `protobuf:"bytes,3,opt,name=branchName,proto3" json:"branchName,omitempty"`
	Commit               string   `protobuf:"bytes,4,opt,name=commit,proto3" json:"commit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchResponse_PushedRepoEvent) Reset()         { *m = WatchResponse_PushedRepoEvent{} }
func (m *WatchResponse_PushedRepoEvent) String() string { return proto.CompactTextString(m) }
func (*WatchResponse_PushedRepoEvent) ProtoMessage()    {}
func (*WatchResponse_PushedRepoEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{76, 2}
}

func (m *WatchResponse_PushedRepoEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchResponse_PushedRepoEvent.Unmarshal(m, b)
}
func (m *WatchResponse_PushedRepoEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchResponse_PushedRepoEvent.Marshal(b, m, deterministic)
}
func (m *WatchResponse_PushedRepoEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchResponse_PushedRepoEvent.Merge(m, src)
}
func (m *WatchResponse_PushedRepoEvent) XXX_Size() int {
	return xxx_messageInfo_WatchResponse_PushedRepoEvent.Size(m)
}
func (m *WatchResponse_PushedRepoEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchResponse_PushedRepoEvent.DiscardUnknown(m)
}

var xxx_messageInfo_WatchResponse_PushedRepoEvent proto.InternalMessageInfo

func (m *WatchResponse_PushedRepoEvent) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *WatchResponse_PushedRepoEvent) GetRepoRoot() string {
	if m != nil {
		return m.RepoRoot
	}
	return ""
}

func (m *WatchResponse_PushedRepoEvent) GetBranchName() string {
	if m != nil {
		return m.BranchName
	}
	return ""
}

func (m *WatchResponse_PushedRepoEvent) GetCommit() string {
	if m != nil {
		return m.Commit
	}
	return ""
}

type WatchResponse_UpdatedRefEvent struct {
	Commit               string   `protobuf:"bytes,1,opt,name=commit,proto3" json:"commit,omitempty"`
	RepoID               string   `protobuf:"bytes,2,opt,name=repoID,proto3" json:"repoID,omitempty"`
	TxHash               string   `protobuf:"bytes,3,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Time                 uint64   `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	BlockNumber          uint64   `protobuf:"varint,5,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchResponse_UpdatedRefEvent) Reset()         { *m = WatchResponse_UpdatedRefEvent{} }
func (m *WatchResponse_UpdatedRefEvent) String() string { return proto.CompactTextString(m) }
func (*WatchResponse_UpdatedRefEvent) ProtoMessage()    {}
func (*WatchResponse_UpdatedRefEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{76, 3}
}

func (m *WatchResponse_UpdatedRefEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchResponse_UpdatedRefEvent.Unmarshal(m, b)
}
func (m *WatchResponse_UpdatedRefEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchResponse_UpdatedRefEvent.Marshal(b, m, deterministic)
}
func (m *WatchResponse_UpdatedRefEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchResponse_UpdatedRefEvent.Merge(m, src)
}
func (m *WatchResponse_UpdatedRefEvent) XXX_Size() int {
	return xxx_messageInfo_WatchResponse_UpdatedRefEvent.Size(m)
}
func (m *WatchResponse_UpdatedRefEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchResponse_UpdatedRefEvent.DiscardUnknown(m)
}

var xxx_messageInfo_WatchResponse_UpdatedRefEvent proto.InternalMessageInfo

func (m *WatchResponse_UpdatedRefEvent) GetCommit() string {
	if m != nil {
		return m.Commit
	}
	return ""
}

func (m *WatchResponse_UpdatedRefEvent) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *WatchResponse_UpdatedRefEvent) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *WatchResponse_UpdatedRefEvent) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *WatchResponse_UpdatedRefEvent) GetBlockNumber() uint64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

type CreateCommitRequest struct {
	// Types that are valid to be assigned to Payload:
	//	*CreateCommitRequest_Header_
	//	*CreateCommitRequest_FileOperation_
	//	*CreateCommitRequest_Done_
	Payload              isCreateCommitRequest_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *CreateCommitRequest) Reset()         { *m = CreateCommitRequest{} }
func (m *CreateCommitRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCommitRequest) ProtoMessage()    {}
func (*CreateCommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{77}
}

func (m *CreateCommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCommitRequest.Unmarshal(m, b)
}
func (m *CreateCommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCommitRequest.Marshal(b, m, deterministic)
}
func (m *CreateCommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCommitRequest.Merge(m, src)
}
func (m *CreateCommitRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCommitRequest.Size(m)
}
func (m *CreateCommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCommitRequest proto.InternalMessageInfo

type isCreateCommitRequest_Payload interface {
	isCreateCommitRequest_Payload()
}

type CreateCommitRequest_Header_ struct {
	Header *CreateCommitRequest_Header `protobuf:"bytes,1,opt,name=header,proto3,oneof"`
}

type CreateCommitRequest_FileOperation_ struct {
	FileOperation *CreateCommitRequest_FileOperation `protobuf:"bytes,2,opt,name=fileOperation,proto3,oneof"`
}

type CreateCommitRequest_Done_ struct {
	Done *CreateCommitRequest_Done `protobuf:"bytes,3,opt,name=done,proto3,oneof"`
}

func (*CreateCommitRequest_Header_) isCreateCommitRequest_Payload() {}

func (*CreateCommitRequest_FileOperation_) isCreateCommitRequest_Payload() {}

func (*CreateCommitRequest_Done_) isCreateCommitRequest_Payload() {}

func (m *CreateCommitRequest) GetPayload() isCreateCommitRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *CreateCommitRequest) GetHeader() *CreateCommitRequest_Header {
	if x, ok := m.GetPayload().(*CreateCommitRequest_Header_); ok {
		return x.Header
	}
	return nil
}

func (m *CreateCommitRequest) GetFileOperation() *CreateCommitRequest_FileOperation {
	if x, ok := m.GetPayload().(*CreateCommitRequest_FileOperation_); ok {
		return x.FileOperation
	}
	return nil
}

func (m *CreateCommitRequest) GetDone() *CreateCommitRequest_Done {
	if x, ok := m.GetPayload().(*CreateCommitRequest_Done_); ok {
		return x.Done
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CreateCommitRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CreateCommitRequest_Header_)(nil),
		(*CreateCommitRequest_FileOperation_)(nil),
		(*CreateCommitRequest_Done_)(nil),
	}
}

type CreateCommitRequest_Header struct {
	RepoID               string   `protobuf:"bytes,1,opt,name=repoID,proto3" json:"repoID,omitempty"`
	ParentCommitHash     []byte   `protobuf:"bytes,2,opt,name=parentCommitHash,proto3" json:"parentCommitHash,omitempty"`
	RefName              string   `protobuf:"bytes,3,opt,name=refName,proto3" json:"refName,omitempty"`
	AuthorName           string   `protobuf:"bytes,4,opt,name=authorName,proto3" json:"authorName,omitempty"`
	AuthorEmail          string   `protobuf:"bytes,5,opt,name=authorEmail,proto3" json:"authorEmail,omitempty"`
	CommitMessage        string   `protobuf:"bytes,6,opt,name=commitMessage,proto3" json:"commitMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCommitRequest_Header) Reset()         { *m = CreateCommitRequest_Header{} }
func (m *CreateCommitRequest_Header) String() string { return proto.CompactTextString(m) }
func (*CreateCommitRequest_Header) ProtoMessage()    {}
func (*CreateCommitRequest_Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{77, 0}
}

func (m *CreateCommitRequest_Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCommitRequest_Header.Unmarshal(m, b)
}
func (m *CreateCommitRequest_Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCommitRequest_Header.Marshal(b, m, deterministic)
}
func (m *CreateCommitRequest_Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCommitRequest_Header.Merge(m, src)
}
func (m *CreateCommitRequest_Header) XXX_Size() int {
	return xxx_messageInfo_CreateCommitRequest_Header.Size(m)
}
func (m *CreateCommitRequest_Header) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCommitRequest_Header.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCommitRequest_Header proto.InternalMessageInfo

func (m *CreateCommitRequest_Header) GetRepoID() string {
	if m != nil {
		return m.RepoID
	}
	return ""
}

func (m *CreateCommitRequest_Header) GetParentCommitHash() []byte {
	if m != nil {
		return m.ParentCommitHash
	}
	return nil
}

func (m *CreateCommitRequest_Header) GetRefName() string {
	if m != nil {
		return m.RefName
	}
	return ""
}

func (m *CreateCommitRequest_Header) GetAuthorName() string {
	if m != nil {
		return m.AuthorName
	}
	return ""
}

func (m *CreateCommitRequest_Header) GetAuthorEmail() string {
	if m != nil {
		return m.AuthorEmail
	}
	return ""
}

func (m *CreateCommitRequest_Header) GetCommitMessage() string {
	if m != nil {
		return m.CommitMessage
	}
	return ""
}

type CreateCommitRequest_FileOperation struct {
	// Types that are valid to be assigned to Operation:
	//	*CreateCommitRequest_FileOperation_UpsertHeader_
	//	*CreateCommitRequest_FileOperation_UpsertData_
	//	*CreateCommitRequest_FileOperation_Delete_
	Operation            isCreateCommitRequest_FileOperation_Operation `protobuf_oneof:"operation"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *CreateCommitRequest_FileOperation) Reset()         { *m = CreateCommitRequest_FileOperation{} }
func (m *CreateCommitRequest_FileOperation) String() string { return proto.CompactTextString(m) }
func (*CreateCommitRequest_FileOperation) ProtoMessage()    {}
func (*CreateCommitRequest_FileOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{77, 1}
}

func (m *CreateCommitRequest_FileOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCommitRequest_FileOperation.Unmarshal(m, b)
}
func (m *CreateCommitRequest_FileOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCommitRequest_FileOperation.Marshal(b, m, deterministic)
}
func (m *CreateCommitRequest_FileOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCommitRequest_FileOperation.Merge(m, src)
}
func (m *CreateCommitRequest_FileOperation) XXX_Size() int {
	return xxx_messageInfo_CreateCommitRequest_FileOperation.Size(m)
}
func (m *CreateCommitRequest_FileOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCommitRequest_FileOperation.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCommitRequest_FileOperation proto.InternalMessageInfo

type isCreateCommitRequest_FileOperation_Operation interface {
	isCreateCommitRequest_FileOperation_Operation()
}

type CreateCommitRequest_FileOperation_UpsertHeader_ struct {
	UpsertHeader *CreateCommitRequest_FileOperation_UpsertHeader `protobuf:"bytes,1,opt,name=upsertHeader,proto3,oneof"`
}

type CreateCommitRequest_FileOperation_UpsertData_ struct {
	UpsertData *CreateCommitRequest_FileOperation_UpsertData `protobuf:"bytes,2,opt,name=upsertData,proto3,oneof"`
}

type CreateCommitRequest_FileOperation_Delete_ struct {
	Delete *CreateCommitRequest_FileOperation_Delete `protobuf:"bytes,3,opt,name=delete,proto3,oneof"`
}

func (*CreateCommitRequest_FileOperation_UpsertHeader_) isCreateCommitRequest_FileOperation_Operation() {
}

func (*CreateCommitRequest_FileOperation_UpsertData_) isCreateCommitRequest_FileOperation_Operation() {
}

func (*CreateCommitRequest_FileOperation_Delete_) isCreateCommitRequest_FileOperation_Operation() {}

func (m *CreateCommitRequest_FileOperation) GetOperation() isCreateCommitRequest_FileOperation_Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *CreateCommitRequest_FileOperation) GetUpsertHeader() *CreateCommitRequest_FileOperation_UpsertHeader {
	if x, ok := m.GetOperation().(*CreateCommitRequest_FileOperation_UpsertHeader_); ok {
		return x.UpsertHeader
	}
	return nil
}

func (m *CreateCommitRequest_FileOperation) GetUpsertData() *CreateCommitRequest_FileOperation_UpsertData {
	if x, ok := m.GetOperation().(*CreateCommitRequest_FileOperation_UpsertData_); ok {
		return x.UpsertData
	}
	return nil
}

func (m *CreateCommitRequest_FileOperation) GetDelete() *CreateCommitRequest_FileOperation_Delete {
	if x, ok := m.GetOperation().(*CreateCommitRequest_FileOperation_Delete_); ok {
		return x.Delete
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CreateCommitRequest_FileOperation) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CreateCommitRequest_FileOperation_UpsertHeader_)(nil),
		(*CreateCommitRequest_FileOperation_UpsertData_)(nil),
		(*CreateCommitRequest_FileOperation_Delete_)(nil),
	}
}

type CreateCommitRequest_FileOperation_UpsertHeader struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	UncompressedSize     uint64   `protobuf:"varint,2,opt,name=uncompressedSize,proto3" json:"uncompressedSize,omitempty"`
	Ctime                uint64   `protobuf:"varint,3,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Mtime                uint64   `protobuf:"varint,4,opt,name=mtime,proto3" json:"mtime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCommitRequest_FileOperation_UpsertHeader) Reset() {
	*m = CreateCommitRequest_FileOperation_UpsertHeader{}
}
func (m *CreateCommitRequest_FileOperation_UpsertHeader) String() string {
	return proto.CompactTextString(m)
}
func (*CreateCommitRequest_FileOperation_UpsertHeader) ProtoMessage() {}
func (*CreateCommitRequest_FileOperation_UpsertHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{77, 1, 0}
}

func (m *CreateCommitRequest_FileOperation_UpsertHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCommitRequest_FileOperation_UpsertHeader.Unmarshal(m, b)
}
func (m *CreateCommitRequest_FileOperation_UpsertHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCommitRequest_FileOperation_UpsertHeader.Marshal(b, m, deterministic)
}
func (m *CreateCommitRequest_FileOperation_UpsertHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCommitRequest_FileOperation_UpsertHeader.Merge(m, src)
}
func (m *CreateCommitRequest_FileOperation_UpsertHeader) XXX_Size() int {
	return xxx_messageInfo_CreateCommitRequest_FileOperation_UpsertHeader.Size(m)
}
func (m *CreateCommitRequest_FileOperation_UpsertHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCommitRequest_FileOperation_UpsertHeader.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCommitRequest_FileOperation_UpsertHeader proto.InternalMessageInfo

func (m *CreateCommitRequest_FileOperation_UpsertHeader) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *CreateCommitRequest_FileOperation_UpsertHeader) GetUncompressedSize() uint64 {
	if m != nil {
		return m.UncompressedSize
	}
	return 0
}

func (m *CreateCommitRequest_FileOperation_UpsertHeader) GetCtime() uint64 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *CreateCommitRequest_FileOperation_UpsertHeader) GetMtime() uint64 {
	if m != nil {
		return m.Mtime
	}
	return 0
}

type CreateCommitRequest_FileOperation_UpsertData struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	End                  bool     `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCommitRequest_FileOperation_UpsertData) Reset() {
	*m = CreateCommitRequest_FileOperation_UpsertData{}
}
func (m *CreateCommitRequest_FileOperation_UpsertData) String() string {
	return proto.CompactTextString(m)
}
func (*CreateCommitRequest_FileOperation_UpsertData) ProtoMessage() {}
func (*CreateCommitRequest_FileOperation_UpsertData) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{77, 1, 1}
}

func (m *CreateCommitRequest_FileOperation_UpsertData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCommitRequest_FileOperation_UpsertData.Unmarshal(m, b)
}
func (m *CreateCommitRequest_FileOperation_UpsertData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCommitRequest_FileOperation_UpsertData.Marshal(b, m, deterministic)
}
func (m *CreateCommitRequest_FileOperation_UpsertData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCommitRequest_FileOperation_UpsertData.Merge(m, src)
}
func (m *CreateCommitRequest_FileOperation_UpsertData) XXX_Size() int {
	return xxx_messageInfo_CreateCommitRequest_FileOperation_UpsertData.Size(m)
}
func (m *CreateCommitRequest_FileOperation_UpsertData) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCommitRequest_FileOperation_UpsertData.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCommitRequest_FileOperation_UpsertData proto.InternalMessageInfo

func (m *CreateCommitRequest_FileOperation_UpsertData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateCommitRequest_FileOperation_UpsertData) GetEnd() bool {
	if m != nil {
		return m.End
	}
	return false
}

type CreateCommitRequest_FileOperation_Delete struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCommitRequest_FileOperation_Delete) Reset() {
	*m = CreateCommitRequest_FileOperation_Delete{}
}
func (m *CreateCommitRequest_FileOperation_Delete) String() string { return proto.CompactTextString(m) }
func (*CreateCommitRequest_FileOperation_Delete) ProtoMessage()    {}
func (*CreateCommitRequest_FileOperation_Delete) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{77, 1, 2}
}

func (m *CreateCommitRequest_FileOperation_Delete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCommitRequest_FileOperation_Delete.Unmarshal(m, b)
}
func (m *CreateCommitRequest_FileOperation_Delete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCommitRequest_FileOperation_Delete.Marshal(b, m, deterministic)
}
func (m *CreateCommitRequest_FileOperation_Delete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCommitRequest_FileOperation_Delete.Merge(m, src)
}
func (m *CreateCommitRequest_FileOperation_Delete) XXX_Size() int {
	return xxx_messageInfo_CreateCommitRequest_FileOperation_Delete.Size(m)
}
func (m *CreateCommitRequest_FileOperation_Delete) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCommitRequest_FileOperation_Delete.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCommitRequest_FileOperation_Delete proto.InternalMessageInfo

func (m *CreateCommitRequest_FileOperation_Delete) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type CreateCommitRequest_Done struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCommitRequest_Done) Reset()         { *m = CreateCommitRequest_Done{} }
func (m *CreateCommitRequest_Done) String() string { return proto.CompactTextString(m) }
func (*CreateCommitRequest_Done) ProtoMessage()    {}
func (*CreateCommitRequest_Done) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{77, 2}
}

func (m *CreateCommitRequest_Done) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCommitRequest_Done.Unmarshal(m, b)
}
func (m *CreateCommitRequest_Done) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCommitRequest_Done.Marshal(b, m, deterministic)
}
func (m *CreateCommitRequest_Done) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCommitRequest_Done.Merge(m, src)
}
func (m *CreateCommitRequest_Done) XXX_Size() int {
	return xxx_messageInfo_CreateCommitRequest_Done.Size(m)
}
func (m *CreateCommitRequest_Done) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCommitRequest_Done.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCommitRequest_Done proto.InternalMessageInfo

type CreateCommitResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	CommitHash           []byte   `protobuf:"bytes,2,opt,name=commitHash,proto3" json:"commitHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCommitResponse) Reset()         { *m = CreateCommitResponse{} }
func (m *CreateCommitResponse) String() string { return proto.CompactTextString(m) }
func (*CreateCommitResponse) ProtoMessage()    {}
func (*CreateCommitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{78}
}

func (m *CreateCommitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCommitResponse.Unmarshal(m, b)
}
func (m *CreateCommitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCommitResponse.Marshal(b, m, deterministic)
}
func (m *CreateCommitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCommitResponse.Merge(m, src)
}
func (m *CreateCommitResponse) XXX_Size() int {
	return xxx_messageInfo_CreateCommitResponse.Size(m)
}
func (m *CreateCommitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCommitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCommitResponse proto.InternalMessageInfo

func (m *CreateCommitResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CreateCommitResponse) GetCommitHash() []byte {
	if m != nil {
		return m.CommitHash
	}
	return nil
}

type RunPipelineRequest struct {
	InputRepoID          string                      `protobuf:"bytes,1,opt,name=inputRepoID,proto3" json:"inputRepoID,omitempty"`
	InputObjectID        []byte                      `protobuf:"bytes,2,opt,name=inputObjectID,proto3" json:"inputObjectID,omitempty"`
	Stages               []*RunPipelineRequest_Stage `protobuf:"bytes,3,rep,name=stages,proto3" json:"stages,omitempty"`
	OutputFilename       string                      `protobuf:"bytes,4,opt,name=outputFilename,proto3" json:"outputFilename,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *RunPipelineRequest) Reset()         { *m = RunPipelineRequest{} }
func (m *RunPipelineRequest) String() string { return proto.CompactTextString(m) }
func (*RunPipelineRequest) ProtoMessage()    {}
func (*RunPipelineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{79}
}

func (m *RunPipelineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunPipelineRequest.Unmarshal(m, b)
}
func (m *RunPipelineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunPipelineRequest.Marshal(b, m, deterministic)
}
func (m *RunPipelineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunPipelineRequest.Merge(m, src)
}
func (m *RunPipelineRequest) XXX_Size() int {
	return xxx_messageInfo_RunPipelineRequest.Size(m)
}
func (m *RunPipelineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunPipelineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunPipelineRequest proto.InternalMessageInfo

func (m *RunPipelineRequest) GetInputRepoID() string {
	if m != nil {
		return m.InputRepoID
	}
	return ""
}

func (m *RunPipelineRequest) GetInputObjectID() []byte {
	if m != nil {
		return m.InputObjectID
	}
	return nil
}

func (m *RunPipelineRequest) GetStages() []*RunPipelineRequest_Stage {
	if m != nil {
		return m.Stages
	}
	return nil
}

func (m *RunPipelineRequest) GetOutputFilename() string {
	if m != nil {
		return m.OutputFilename
	}
	return ""
}

type RunPipelineRequest_Stage struct {
	Platform             string   `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	CodeRepoID           string   `protobuf:"bytes,2,opt,name=codeRepoID,proto3" json:"codeRepoID,omitempty"`
	CommitHash           []byte   `protobuf:"bytes,3,opt,name=commitHash,proto3" json:"commitHash,omitempty"`
	EntryFilename        string   `protobuf:"bytes,4,opt,name=entryFilename,proto3" json:"entryFilename,omitempty"`
	EntryArgs            []string `protobuf:"bytes,5,rep,name=entryArgs,proto3" json:"entryArgs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunPipelineRequest_Stage) Reset()         { *m = RunPipelineRequest_Stage{} }
func (m *RunPipelineRequest_Stage) String() string { return proto.CompactTextString(m) }
func (*RunPipelineRequest_Stage) ProtoMessage()    {}
func (*RunPipelineRequest_Stage) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{79, 0}
}

func (m *RunPipelineRequest_Stage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunPipelineRequest_Stage.Unmarshal(m, b)
}
func (m *RunPipelineRequest_Stage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunPipelineRequest_Stage.Marshal(b, m, deterministic)
}
func (m *RunPipelineRequest_Stage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunPipelineRequest_Stage.Merge(m, src)
}
func (m *RunPipelineRequest_Stage) XXX_Size() int {
	return xxx_messageInfo_RunPipelineRequest_Stage.Size(m)
}
func (m *RunPipelineRequest_Stage) XXX_DiscardUnknown() {
	xxx_messageInfo_RunPipelineRequest_Stage.DiscardUnknown(m)
}

var xxx_messageInfo_RunPipelineRequest_Stage proto.InternalMessageInfo

func (m *RunPipelineRequest_Stage) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *RunPipelineRequest_Stage) GetCodeRepoID() string {
	if m != nil {
		return m.CodeRepoID
	}
	return ""
}

func (m *RunPipelineRequest_Stage) GetCommitHash() []byte {
	if m != nil {
		return m.CommitHash
	}
	return nil
}

func (m *RunPipelineRequest_Stage) GetEntryFilename() string {
	if m != nil {
		return m.EntryFilename
	}
	return ""
}

func (m *RunPipelineRequest_Stage) GetEntryArgs() []string {
	if m != nil {
		return m.EntryArgs
	}
	return nil
}

type RunPipelineResponse struct {
	CommitHash           []byte   `protobuf:"bytes,1,opt,name=commitHash,proto3" json:"commitHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunPipelineResponse) Reset()         { *m = RunPipelineResponse{} }
func (m *RunPipelineResponse) String() string { return proto.CompactTextString(m) }
func (*RunPipelineResponse) ProtoMessage()    {}
func (*RunPipelineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e72c3a23b79e441c, []int{80}
}

func (m *RunPipelineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunPipelineResponse.Unmarshal(m, b)
}
func (m *RunPipelineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunPipelineResponse.Marshal(b, m, deterministic)
}
func (m *RunPipelineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunPipelineResponse.Merge(m, src)
}
func (m *RunPipelineResponse) XXX_Size() int {
	return xxx_messageInfo_RunPipelineResponse.Size(m)
}
func (m *RunPipelineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RunPipelineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RunPipelineResponse proto.InternalMessageInfo

func (m *RunPipelineResponse) GetCommitHash() []byte {
	if m != nil {
		return m.CommitHash
	}
	return nil
}

func init() {
	proto.RegisterType((*SetUsernameRequest)(nil), "noderpc.SetUsernameRequest")
	proto.RegisterType((*SetUsernameResponse)(nil), "noderpc.SetUsernameResponse")
	proto.RegisterType((*GetEthereumBIP39SeedRequest)(nil), "noderpc.GetEthereumBIP39SeedRequest")
	proto.RegisterType((*GetEthereumBIP39SeedResponse)(nil), "noderpc.GetEthereumBIP39SeedResponse")
	proto.RegisterType((*SetEthereumBIP39SeedRequest)(nil), "noderpc.SetEthereumBIP39SeedRequest")
	proto.RegisterType((*SetEthereumBIP39SeedResponse)(nil), "noderpc.SetEthereumBIP39SeedResponse")
	proto.RegisterType((*GetUsernameRequest)(nil), "noderpc.GetUsernameRequest")
	proto.RegisterType((*GetUsernameResponse)(nil), "noderpc.GetUsernameResponse")
	proto.RegisterType((*InitRepoRequest)(nil), "noderpc.InitRepoRequest")
	proto.RegisterType((*InitRepoResponse)(nil), "noderpc.InitRepoResponse")
	proto.RegisterType((*ImportRepoRequest)(nil), "noderpc.ImportRepoRequest")
	proto.RegisterType((*ImportRepoResponse)(nil), "noderpc.ImportRepoResponse")
	proto.RegisterType((*CheckpointRepoRequest)(nil), "noderpc.CheckpointRepoRequest")
	proto.RegisterType((*CheckpointRepoResponse)(nil), "noderpc.CheckpointRepoResponse")
	proto.RegisterType((*PullRepoRequest)(nil), "noderpc.PullRepoRequest")
	proto.RegisterType((*PullRepoResponsePacket)(nil), "noderpc.PullRepoResponsePacket")
	proto.RegisterType((*CloneRepoRequest)(nil), "noderpc.CloneRepoRequest")
	proto.RegisterType((*CloneRepoResponsePacket)(nil), "noderpc.CloneRepoResponsePacket")
	proto.RegisterType((*CloneRepoResponsePacket_Progress)(nil), "noderpc.CloneRepoResponsePacket.Progress")
	proto.RegisterType((*CloneRepoResponsePacket_Success)(nil), "noderpc.CloneRepoResponsePacket.Success")
	proto.RegisterType((*FetchFromCommitRequest)(nil), "noderpc.FetchFromCommitRequest")
	proto.RegisterType((*FetchFromCommitResponse)(nil), "noderpc.FetchFromCommitResponse")
	proto.RegisterType((*FetchFromCommitResponse_Header)(nil), "noderpc.FetchFromCommitResponse.Header")
	proto.RegisterType((*FetchFromCommitResponse_PackfileHeader)(nil), "noderpc.FetchFromCommitResponse.PackfileHeader")
	proto.RegisterType((*FetchFromCommitResponse_PackfileData)(nil), "noderpc.FetchFromCommitResponse.PackfileData")
	proto.RegisterType((*FetchFromCommitResponse_Chunk)(nil), "noderpc.FetchFromCommitResponse.Chunk")
	proto.RegisterType((*RegisterRepoIDRequest)(nil), "noderpc.RegisterRepoIDRequest")
	proto.RegisterType((*RegisterRepoIDResponse)(nil), "noderpc.RegisterRepoIDResponse")
	proto.RegisterType((*IsRepoIDRegisteredRequest)(nil), "noderpc.IsRepoIDRegisteredRequest")
	proto.RegisterType((*IsRepoIDRegisteredResponse)(nil), "noderpc.IsRepoIDRegisteredResponse")
	proto.RegisterType((*FetchChunksRequest)(nil), "noderpc.FetchChunksRequest")
	proto.RegisterType((*FetchChunksResponse)(nil), "noderpc.FetchChunksResponse")
	proto.RegisterType((*TrackLocalRepoRequest)(nil), "noderpc.TrackLocalRepoRequest")
	proto.RegisterType((*TrackLocalRepoResponse)(nil), "noderpc.TrackLocalRepoResponse")
	proto.RegisterType((*GetLocalReposRequest)(nil), "noderpc.GetLocalReposRequest")
	proto.RegisterType((*GetLocalReposResponsePacket)(nil), "noderpc.GetLocalReposResponsePacket")
	proto.RegisterType((*SetReplicationPolicyRequest)(nil), "noderpc.SetReplicationPolicyRequest")
	proto.RegisterType((*SetReplicationPolicyResponse)(nil), "noderpc.SetReplicationPolicyResponse")
	proto.RegisterType((*AnnounceRepoContentRequest)(nil), "noderpc.AnnounceRepoContentRequest")
	proto.RegisterType((*AnnounceRepoContentResponse)(nil), "noderpc.AnnounceRepoContentResponse")
	proto.RegisterType((*Ref)(nil), "noderpc.Ref")
	proto.RegisterType((*GetLocalRefsRequest)(nil), "noderpc.GetLocalRefsRequest")
	proto.RegisterType((*GetLocalRefsResponse)(nil), "noderpc.GetLocalRefsResponse")
	proto.RegisterType((*GetRemoteRefsRequest)(nil), "noderpc.GetRemoteRefsRequest")
	proto.RegisterType((*GetRemoteRefsResponse)(nil), "noderpc.GetRemoteRefsResponse")
	proto.RegisterType((*IsBehindRemoteRequest)(nil), "noderpc.IsBehindRemoteRequest")
	proto.RegisterType((*IsBehindRemoteResponse)(nil), "noderpc.IsBehindRemoteResponse")
	proto.RegisterType((*PushRepoRequest)(nil), "noderpc.PushRepoRequest")
	proto.RegisterType((*ProgressPacket)(nil), "noderpc.ProgressPacket")
	proto.RegisterType((*UpdateRefRequest)(nil), "noderpc.UpdateRefRequest")
	proto.RegisterType((*UpdateRefResponse)(nil), "noderpc.UpdateRefResponse")
	proto.RegisterType((*ReplicationRequest)(nil), "noderpc.ReplicationRequest")
	proto.RegisterType((*SetRepoPublicRequest)(nil), "noderpc.SetRepoPublicRequest")
	proto.RegisterType((*SetRepoPublicResponse)(nil), "noderpc.SetRepoPublicResponse")
	proto.RegisterType((*IsRepoPublicRequest)(nil), "noderpc.IsRepoPublicRequest")
	proto.RegisterType((*IsRepoPublicResponse)(nil), "noderpc.IsRepoPublicResponse")
	proto.RegisterType((*GetRepoUsersRequest)(nil), "noderpc.GetRepoUsersRequest")
	proto.RegisterType((*GetRepoUsersResponse)(nil), "noderpc.GetRepoUsersResponse")
	proto.RegisterType((*GetUserPermissionsRequest)(nil), "noderpc.GetUserPermissionsRequest")
	proto.RegisterType((*GetUserPermissionsResponse)(nil), "noderpc.GetUserPermissionsResponse")
	proto.RegisterType((*SetUserPermissionsRequest)(nil), "noderpc.SetUserPermissionsRequest")
	proto.RegisterType((*SetUserPermissionsResponse)(nil), "noderpc.SetUserPermissionsResponse")
	proto.RegisterType((*GetRepoHistoryRequest)(nil), "noderpc.GetRepoHistoryRequest")
	proto.RegisterType((*Commit)(nil), "noderpc.Commit")
	proto.RegisterType((*GetRepoHistoryResponse)(nil), "noderpc.GetRepoHistoryResponse")
	proto.RegisterType((*GetUpdatedRefEventsRequest)(nil), "noderpc.GetUpdatedRefEventsRequest")
	proto.RegisterType((*UpdatedRefEvent)(nil), "noderpc.UpdatedRefEvent")
	proto.RegisterType((*GetUpdatedRefEventsResponse)(nil), "noderpc.GetUpdatedRefEventsResponse")
	proto.RegisterType((*GetRepoFilesRequest)(nil), "noderpc.GetRepoFilesRequest")
	proto.RegisterType((*File)(nil), "noderpc.File")
	proto.RegisterType((*GetRepoFilesResponse)(nil), "noderpc.GetRepoFilesResponse")
	proto.RegisterType((*SignMessageRequest)(nil), "noderpc.SignMessageRequest")
	proto.RegisterType((*SignMessageResponse)(nil), "noderpc.SignMessageResponse")
	proto.RegisterType((*EthAddressRequest)(nil), "noderpc.EthAddressRequest")
	proto.RegisterType((*EthAddressResponse)(nil), "noderpc.EthAddressResponse")
	proto.RegisterType((*GetObjectRequest)(nil), "noderpc.GetObjectRequest")
	proto.RegisterType((*GetObjectResponse)(nil), "noderpc.GetObjectResponse")
	proto.RegisterType((*GetObjectResponse_Header)(nil), "noderpc.GetObjectResponse.Header")
	proto.RegisterType((*GetObjectResponse_Data)(nil), "noderpc.GetObjectResponse.Data")
	proto.RegisterType((*GetDiffRequest)(nil), "noderpc.GetDiffRequest")
	proto.RegisterType((*GetDiffResponse)(nil), "noderpc.GetDiffResponse")
	proto.RegisterType((*SetFileChunkingRequest)(nil), "noderpc.SetFileChunkingRequest")
	proto.RegisterType((*SetFileChunkingResponse)(nil), "noderpc.SetFileChunkingResponse")
	proto.RegisterType((*WatchRequest)(nil), "noderpc.WatchRequest")
	proto.RegisterType((*WatchRequest_UpdatedRefEventParams)(nil), "noderpc.WatchRequest.UpdatedRefEventParams")
	proto.RegisterType((*WatchResponse)(nil), "noderpc.WatchResponse")
	proto.RegisterType((*WatchResponse_AddedRepoEvent)(nil), "noderpc.WatchResponse.AddedRepoEvent")
	proto.RegisterType((*WatchResponse_PulledRepoEvent)(nil), "noderpc.WatchResponse.PulledRepoEvent")
	proto.RegisterType((*WatchResponse_PushedRepoEvent)(nil), "noderpc.WatchResponse.PushedRepoEvent")
	proto.RegisterType((*WatchResponse_UpdatedRefEvent)(nil), "noderpc.WatchResponse.UpdatedRefEvent")
	proto.RegisterType((*CreateCommitRequest)(nil), "noderpc.CreateCommitRequest")
	proto.RegisterType((*CreateCommitRequest_Header)(nil), "noderpc.CreateCommitRequest.Header")
	proto.RegisterType((*CreateCommitRequest_FileOperation)(nil), "noderpc.CreateCommitRequest.FileOperation")
	proto.RegisterType((*CreateCommitRequest_FileOperation_UpsertHeader)(nil), "noderpc.CreateCommitRequest.FileOperation.UpsertHeader")
	proto.RegisterType((*CreateCommitRequest_FileOperation_UpsertData)(nil), "noderpc.CreateCommitRequest.FileOperation.UpsertData")
	proto.RegisterType((*CreateCommitRequest_FileOperation_Delete)(nil), "noderpc.CreateCommitRequest.FileOperation.Delete")
	proto.RegisterType((*CreateCommitRequest_Done)(nil), "noderpc.CreateCommitRequest.Done")
	proto.RegisterType((*CreateCommitResponse)(nil), "noderpc.CreateCommitResponse")
	proto.RegisterType((*RunPipelineRequest)(nil), "noderpc.RunPipelineRequest")
	proto.RegisterType((*RunPipelineRequest_Stage)(nil), "noderpc.RunPipelineRequest.Stage")
	proto.RegisterType((*RunPipelineResponse)(nil), "noderpc.RunPipelineResponse")
}

func init() { proto.RegisterFile("noderpc.proto", fileDescriptor_e72c3a23b79e441c) }

var fileDescriptor_e72c3a23b79e441c = []byte{
	// 3272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5b, 0x4b, 0x73, 0x1b, 0xc7,
	0x11, 0xc6, 0x8b, 0x20, 0xd8, 0x04, 0x1f, 0x1a, 0x3e, 0x04, 0xad, 0x28, 0x8a, 0x19, 0xcb, 0x8a,
	0xec, 0xd8, 0xb4, 0x4d, 0xd9, 0xe5, 0x38, 0xae, 0x38, 0xe6, 0x43, 0x02, 0xe8, 0x87, 0x88, 0x0c,
	0x24, 0x5b, 0x4e, 0xe5, 0x51, 0xcb, 0xc5, 0x80, 0xd8, 0x10, 0xd8, 0x5d, 0xef, 0x2e, 0x52, 0x66,
	0xaa, 0x52, 0xe5, 0xf2, 0x25, 0xb7, 0xa4, 0x2a, 0x55, 0xf9, 0x0d, 0xbe, 0xe5, 0x77, 0xe4, 0x92,
	0x9c, 0x52, 0xf9, 0x01, 0xb9, 0xe5, 0x0f, 0xe4, 0x9c, 0x9a, 0xc7, 0xee, 0xce, 0xec, 0x03, 0x80,
	0xa4, 0xa4, 0x92, 0x1b, 0xba, 0x77, 0xe6, 0x9b, 0xde, 0x9e, 0xee, 0x9e, 0x9e, 0xee, 0x05, 0xac,
	0x38, 0x6e, 0x9f, 0xfa, 0x9e, 0xb5, 0xef, 0xf9, 0x6e, 0xe8, 0xa2, 0x45, 0x49, 0xe2, 0x37, 0x01,
	0xf5, 0x68, 0xf8, 0x24, 0xa0, 0xbe, 0x63, 0x8e, 0x29, 0xa1, 0x5f, 0x4e, 0x68, 0x10, 0x22, 0x03,
	0x1a, 0x13, 0xc9, 0x6a, 0x95, 0xf7, 0xca, 0xf7, 0x96, 0x48, 0x4c, 0xe3, 0xfb, 0xb0, 0xa1, 0xcd,
	0x08, 0x3c, 0xd7, 0x09, 0x28, 0xda, 0x81, 0xa5, 0xc0, 0xbe, 0x70, 0xcc, 0x70, 0xe2, 0xd3, 0x56,
	0x65, 0xaf, 0x7c, 0xaf, 0x49, 0x12, 0x06, 0xbe, 0x05, 0x37, 0xdb, 0x34, 0x7c, 0x10, 0x0e, 0xa9,
	0x4f, 0x27, 0xe3, 0xa3, 0xd3, 0xee, 0xfd, 0xf7, 0x7a, 0x94, 0xf6, 0xe5, 0x7a, 0xf8, 0x00, 0x76,
	0xf2, 0x1f, 0x4b, 0x70, 0x04, 0xb5, 0x80, 0xd2, 0xbe, 0x94, 0x85, 0xff, 0xc6, 0x6f, 0xc1, 0xcd,
	0x5e, 0x31, 0x64, 0xee, 0x94, 0x5d, 0xd8, 0xe9, 0x4d, 0x59, 0x06, 0x6f, 0x02, 0x6a, 0x67, 0x94,
	0x81, 0xcf, 0x60, 0xa3, 0x9d, 0xf3, 0xc2, 0x53, 0x74, 0x34, 0x43, 0x19, 0x17, 0xb0, 0x76, 0xea,
	0xd8, 0x21, 0xa1, 0x9e, 0x1b, 0x49, 0xbb, 0x0d, 0x75, 0x9f, 0x7a, 0xee, 0xe9, 0x89, 0x84, 0x92,
	0x14, 0x7b, 0x0b, 0xcf, 0x0c, 0x87, 0x1c, 0x63, 0x89, 0xf0, 0xdf, 0x8c, 0xc7, 0x17, 0xad, 0x0a,
	0x1e, 0x5f, 0x70, 0x13, 0x16, 0xe8, 0xd8, 0xb4, 0x47, 0xad, 0x1a, 0x67, 0x0a, 0x02, 0xdf, 0x85,
	0xf5, 0x64, 0xa1, 0x44, 0x95, 0x1c, 0xb1, 0x9c, 0x20, 0xe2, 0x36, 0x5c, 0x3b, 0x1d, 0x7b, 0xae,
	0xaf, 0x89, 0x64, 0x40, 0x83, 0x09, 0x41, 0x5c, 0x37, 0x8c, 0xde, 0x2f, 0xa2, 0x15, 0x71, 0x2b,
	0xaa, 0xb8, 0x4c, 0x81, 0x2a, 0x90, 0x54, 0xeb, 0x03, 0xd8, 0x3a, 0x1e, 0x52, 0xeb, 0xd2, 0x73,
	0x6d, 0x47, 0x5b, 0x22, 0x47, 0x16, 0xd4, 0x82, 0xc5, 0x31, 0x0d, 0x02, 0xf3, 0x82, 0x4a, 0xec,
	0x88, 0xc4, 0xf7, 0x60, 0x3b, 0x0d, 0x23, 0xdf, 0x69, 0x15, 0x2a, 0xee, 0x25, 0x47, 0x69, 0x90,
	0x8a, 0x7b, 0x89, 0x5f, 0x86, 0xb5, 0xee, 0x64, 0x34, 0x9a, 0xb1, 0x14, 0xfe, 0x04, 0xb6, 0x93,
	0x61, 0x02, 0xaa, 0x6b, 0x5a, 0x97, 0x34, 0x64, 0x42, 0x84, 0xee, 0x43, 0x1a, 0x5a, 0x62, 0x42,
	0x95, 0x44, 0x24, 0x7b, 0x32, 0x60, 0x3f, 0x68, 0x9f, 0x8b, 0x57, 0x25, 0x11, 0x89, 0x87, 0xb0,
	0x7e, 0x3c, 0x72, 0x1d, 0xfa, 0xdf, 0xdf, 0xd6, 0x3f, 0x54, 0xe0, 0xba, 0xb2, 0x94, 0x26, 0x79,
	0x1b, 0x1a, 0x9e, 0xef, 0x5e, 0xf8, 0x34, 0x08, 0xf8, 0x9a, 0xcb, 0x07, 0xaf, 0xec, 0x47, 0xae,
	0x5f, 0x30, 0x67, 0xbf, 0x2b, 0x27, 0x74, 0x4a, 0x24, 0x9e, 0x8c, 0x4e, 0x60, 0x31, 0x98, 0x58,
	0x16, 0xc3, 0xa9, 0x70, 0x9c, 0x7b, 0x33, 0x71, 0x7a, 0x62, 0x7c, 0xa7, 0x44, 0xa2, 0xa9, 0xc6,
	0x07, 0xd0, 0x88, 0xd0, 0x9f, 0x47, 0xa9, 0xc6, 0x2d, 0x58, 0x94, 0xa8, 0x79, 0x3b, 0x78, 0xb4,
	0x04, 0x8b, 0x9e, 0x79, 0x35, 0x72, 0xcd, 0x3e, 0xfe, 0xba, 0x0c, 0xdb, 0x1c, 0xed, 0xa1, 0xef,
	0x8e, 0x8f, 0xdd, 0xf1, 0x98, 0xd9, 0xfd, 0xb3, 0xef, 0xc2, 0x36, 0xd4, 0x2d, 0x3e, 0x99, 0xef,
	0x43, 0x93, 0x48, 0x0a, 0x61, 0x68, 0x5a, 0xcc, 0xf8, 0xdc, 0x49, 0xf8, 0xf8, 0xca, 0xa3, 0x7c,
	0x43, 0x6a, 0x44, 0xe3, 0xe1, 0x3f, 0x2d, 0xc0, 0xf5, 0x8c, 0x08, 0xd2, 0x44, 0x0f, 0xa1, 0x3e,
	0xa4, 0x66, 0x9f, 0xfa, 0x72, 0x57, 0xbe, 0x1b, 0x6b, 0xb3, 0x60, 0xc6, 0x7e, 0x87, 0x0f, 0xef,
	0x94, 0x88, 0x9c, 0x88, 0xbe, 0x80, 0x55, 0xcf, 0xb4, 0x2e, 0x07, 0xf6, 0x88, 0x8a, 0x67, 0x72,
	0x63, 0xde, 0x98, 0x09, 0xd5, 0xd5, 0xa6, 0x75, 0x4a, 0x24, 0x05, 0x84, 0x7a, 0xd0, 0x8c, 0x38,
	0x27, 0x66, 0x68, 0xf2, 0x77, 0x5f, 0x3e, 0x78, 0x7d, 0x6e, 0x60, 0x36, 0xa9, 0x53, 0x22, 0x1a,
	0x08, 0xfa, 0x00, 0x16, 0xac, 0xe1, 0xc4, 0xb9, 0xe4, 0xba, 0x5a, 0x3e, 0xb8, 0x3b, 0x13, 0xed,
	0x98, 0x8d, 0xee, 0x94, 0x88, 0x98, 0x66, 0x7c, 0x06, 0x75, 0x29, 0xde, 0xab, 0xb0, 0x3e, 0x71,
	0x2c, 0x77, 0xec, 0x31, 0x3b, 0xa2, 0xfd, 0x9e, 0xfd, 0x6b, 0x2a, 0x4d, 0x28, 0xc3, 0x47, 0x7b,
	0xb0, 0x1c, 0xba, 0xa1, 0x39, 0xe2, 0x60, 0x81, 0xb4, 0x27, 0x95, 0x65, 0xfc, 0x14, 0x56, 0x75,
	0x85, 0xa0, 0x5d, 0x80, 0x48, 0x72, 0x69, 0x24, 0x4d, 0xa2, 0x70, 0x72, 0xd7, 0xaf, 0xe4, 0xaf,
	0x6f, 0x3c, 0x86, 0xa6, 0xaa, 0x95, 0x99, 0xd8, 0x08, 0x6a, 0x7d, 0xa6, 0x72, 0x71, 0x4a, 0xf0,
	0xdf, 0x68, 0x1d, 0xaa, 0xd4, 0xe9, 0xf3, 0x5d, 0x68, 0x10, 0xf6, 0xd3, 0x38, 0x85, 0x05, 0x2e,
	0x3d, 0x8b, 0xca, 0xee, 0xf9, 0x2f, 0xa9, 0x15, 0xc6, 0x60, 0x31, 0x3d, 0x1f, 0x94, 0xea, 0x33,
	0x6f, 0xc0, 0x16, 0xa1, 0x17, 0x76, 0x10, 0x52, 0x9f, 0x70, 0x97, 0x98, 0xe1, 0x31, 0xb8, 0x05,
	0xdb, 0xe9, 0x09, 0x32, 0xc6, 0xdf, 0x87, 0x1b, 0xa7, 0x41, 0xc4, 0x13, 0x23, 0x92, 0xb3, 0xb8,
	0x08, 0xee, 0x43, 0x30, 0xf2, 0x26, 0x49, 0x97, 0xc1, 0xd0, 0xb4, 0x83, 0x84, 0x2f, 0xe3, 0xbb,
	0xc6, 0xc3, 0x4f, 0x01, 0x71, 0x6b, 0x12, 0x5b, 0xfb, 0xbc, 0x0e, 0x2f, 0x4c, 0xa5, 0xba, 0x57,
	0xe5, 0x0e, 0xcf, 0x29, 0xfc, 0x39, 0x6c, 0x68, 0xc8, 0xc9, 0xa9, 0xff, 0x62, 0xfa, 0xc7, 0x4f,
	0x60, 0xeb, 0xb1, 0x6f, 0x5a, 0x97, 0x9f, 0xb8, 0x96, 0x39, 0xca, 0x39, 0x70, 0xbb, 0x49, 0x90,
	0x8b, 0x69, 0x66, 0xd5, 0x03, 0xd7, 0xb7, 0x28, 0xa1, 0x6c, 0xe3, 0xf8, 0x0a, 0x0d, 0xa2, 0xb2,
	0xd8, 0xd6, 0xa4, 0x61, 0xe5, 0xd6, 0x6c, 0xc3, 0x66, 0x9b, 0x86, 0x31, 0x3f, 0xd2, 0x12, 0x3e,
	0xe5, 0x39, 0x99, 0xca, 0xd7, 0x4e, 0x92, 0x67, 0x50, 0x22, 0xfe, 0x31, 0xcf, 0xc5, 0x08, 0xf5,
	0x46, 0xb6, 0x65, 0x86, 0xb6, 0xeb, 0x74, 0xdd, 0x91, 0x6d, 0x5d, 0xcd, 0xda, 0x0f, 0x03, 0x1a,
	0x63, 0xf3, 0xab, 0xa3, 0xab, 0x90, 0x46, 0x8e, 0x1a, 0xd3, 0x32, 0x57, 0xcb, 0x81, 0x94, 0x6f,
	0xf5, 0x36, 0x18, 0x87, 0x8e, 0xe3, 0x4e, 0x1c, 0x8b, 0x1f, 0x45, 0xc7, 0xae, 0x13, 0x52, 0x67,
	0x56, 0xc8, 0x67, 0x79, 0x68, 0xee, 0x2c, 0x09, 0xfa, 0x23, 0xa8, 0x12, 0x3a, 0x60, 0xe7, 0x91,
	0x4f, 0x07, 0x8f, 0x92, 0xcc, 0x2e, 0x22, 0x99, 0x37, 0x8b, 0x03, 0xa1, 0x63, 0x06, 0x91, 0x0a,
	0x14, 0x0e, 0x3e, 0xe4, 0xb9, 0xa2, 0xd4, 0xe9, 0xe0, 0x79, 0x0c, 0x12, 0x7f, 0x5f, 0xdd, 0xae,
	0x41, 0x62, 0x79, 0x7b, 0x50, 0xf3, 0xe9, 0x80, 0x9d, 0xea, 0xd5, 0x7b, 0xcb, 0x07, 0xcd, 0x38,
	0x9a, 0x12, 0x3a, 0x20, 0xfc, 0x09, 0xfe, 0x39, 0x9f, 0x49, 0xe8, 0xd8, 0x0d, 0xe9, 0x3c, 0xab,
	0x1b, 0xd0, 0xf0, 0xcc, 0x0b, 0x1a, 0x87, 0xb3, 0x1a, 0x89, 0x69, 0x21, 0xd9, 0x85, 0xc8, 0x46,
	0x6a, 0x84, 0xff, 0xc6, 0x67, 0xb0, 0x95, 0xc2, 0x97, 0xa2, 0x6d, 0xc2, 0x02, 0x0f, 0xb0, 0x1c,
	0xbf, 0x46, 0x04, 0x11, 0x0b, 0x5c, 0x29, 0x14, 0xf8, 0x18, 0xb6, 0x4e, 0x83, 0x23, 0x3a, 0xb4,
	0x9d, 0x7e, 0x84, 0xfa, 0xec, 0xfa, 0x7a, 0x0a, 0xdb, 0x69, 0x10, 0x29, 0x56, 0x11, 0xca, 0x5d,
	0x58, 0xb5, 0xb5, 0x19, 0xd2, 0x9f, 0x52, 0x5c, 0x6c, 0xb1, 0x34, 0x32, 0x18, 0xce, 0x9b, 0x14,
	0xef, 0x02, 0x9c, 0xfb, 0xa6, 0x63, 0x0d, 0xb9, 0xe1, 0x48, 0xdb, 0x48, 0x38, 0x4c, 0x4b, 0xdc,
	0x61, 0x65, 0x30, 0x10, 0x04, 0x7e, 0x0c, 0xab, 0x51, 0x86, 0x94, 0x24, 0x9f, 0xd6, 0xc4, 0xf7,
	0xa9, 0x13, 0x4a, 0x7d, 0x46, 0x64, 0xa2, 0xe7, 0x8a, 0xaa, 0x67, 0x16, 0x76, 0x5c, 0x27, 0x82,
	0xe5, 0xbf, 0x71, 0x1f, 0xd6, 0x9f, 0x78, 0x7d, 0x93, 0xef, 0xd3, 0x2c, 0xa5, 0x2a, 0xd6, 0x5e,
	0x99, 0x66, 0xed, 0xd5, 0x8c, 0xb5, 0x6f, 0xc0, 0x35, 0x65, 0x15, 0xe9, 0x43, 0xaf, 0x01, 0x52,
	0xbc, 0x76, 0x96, 0x43, 0x7e, 0x04, 0x9b, 0xc2, 0xcd, 0xdd, 0xee, 0xe4, 0x7c, 0x64, 0x5b, 0x73,
	0xd8, 0xac, 0x1d, 0x88, 0xa1, 0x72, 0xd7, 0x62, 0x1a, 0x7f, 0x0c, 0x5b, 0x29, 0xac, 0x19, 0x86,
	0x30, 0x0d, 0xec, 0x75, 0xd8, 0x10, 0x67, 0xd3, 0x5c, 0x72, 0xb1, 0xf7, 0xd0, 0x87, 0xbf, 0xc0,
	0xd2, 0x5f, 0xf2, 0x20, 0xc2, 0xc0, 0xd8, 0xa5, 0x73, 0x9e, 0x20, 0x12, 0xb2, 0x94, 0x54, 0x18,
	0x05, 0xff, 0xad, 0xb9, 0x76, 0xb5, 0xc0, 0xb5, 0x6b, 0x8a, 0x6b, 0x1f, 0xc9, 0xd0, 0x11, 0x2f,
	0x39, 0xd5, 0xb3, 0x37, 0x61, 0x81, 0x5d, 0x75, 0x85, 0x6b, 0x2f, 0x11, 0x41, 0xe0, 0x33, 0xb8,
	0x21, 0xef, 0xc9, 0x5d, 0xea, 0x8f, 0xed, 0x20, 0xb0, 0x5d, 0x67, 0x9e, 0x18, 0x14, 0xdf, 0xa2,
	0x2b, 0xa9, 0x4a, 0xc3, 0x39, 0x18, 0x79, 0x80, 0x89, 0x66, 0xbd, 0xc9, 0x68, 0x24, 0x33, 0xea,
	0x06, 0x91, 0x94, 0xe0, 0x07, 0x43, 0x99, 0x1e, 0x73, 0x3e, 0xa3, 0x98, 0xd0, 0x66, 0x7f, 0x6c,
	0x3b, 0x91, 0xfb, 0x71, 0x02, 0xff, 0xb1, 0x0c, 0x37, 0x7a, 0xff, 0x49, 0xa9, 0x15, 0xb9, 0xaa,
	0x05, 0x72, 0xd5, 0xf2, 0xe5, 0x5a, 0x50, 0xe5, 0xda, 0x01, 0xa3, 0x57, 0xf8, 0xee, 0xf8, 0x2f,
	0x65, 0x19, 0x8a, 0x3d, 0xb7, 0x63, 0x07, 0xa1, 0xeb, 0x5f, 0x3d, 0x4f, 0xea, 0x73, 0x17, 0x56,
	0x07, 0x71, 0x16, 0x1e, 0xbb, 0x78, 0x93, 0xa4, 0xb8, 0xe8, 0x0e, 0xac, 0x0c, 0x94, 0x6c, 0x7d,
	0x20, 0x6f, 0xa3, 0x3a, 0x53, 0x33, 0xb9, 0x85, 0x94, 0xc9, 0xed, 0x02, 0xb8, 0xce, 0xe8, 0x8a,
	0xa1, 0xd1, 0xa0, 0x55, 0xe7, 0x2f, 0xaa, 0x70, 0xf0, 0xef, 0xca, 0x50, 0x17, 0x48, 0xa9, 0x98,
	0x53, 0x4e, 0xc7, 0x1c, 0xf6, 0x82, 0xe6, 0x24, 0x1c, 0xba, 0x7e, 0x54, 0x7a, 0x10, 0x94, 0x5a,
	0x37, 0xa8, 0x6a, 0x75, 0x03, 0x1e, 0x77, 0xed, 0x11, 0x0d, 0x5a, 0x35, 0x61, 0xad, 0x9c, 0x40,
	0x3b, 0xb0, 0x14, 0xda, 0x63, 0x1a, 0x84, 0xe6, 0xd8, 0x93, 0xf2, 0x26, 0x0c, 0xfc, 0x05, 0x6c,
	0xa7, 0xf5, 0x2b, 0xcd, 0xee, 0x15, 0x58, 0x14, 0xd2, 0x44, 0x27, 0xf1, 0x5a, 0x72, 0x2f, 0x16,
	0xba, 0x88, 0x9e, 0xb3, 0x85, 0xed, 0xe0, 0x81, 0x13, 0xa5, 0x6b, 0x82, 0xc0, 0x9e, 0xb0, 0x6a,
	0x1e, 0x37, 0xfb, 0x84, 0x0e, 0x1e, 0xfc, 0x8a, 0x3a, 0xe1, 0x4c, 0x8b, 0xdb, 0x05, 0x08, 0x42,
	0xd3, 0x0f, 0x8f, 0x46, 0xae, 0x75, 0x29, 0x5d, 0x5d, 0xe1, 0x30, 0xed, 0xb3, 0xe4, 0x9e, 0x3f,
	0x95, 0x0e, 0x1f, 0xd1, 0xf8, 0xf7, 0x65, 0x58, 0x4b, 0xad, 0xa7, 0xdc, 0x73, 0xe5, 0x3a, 0xf2,
	0x9e, 0x5b, 0x50, 0xd9, 0x61, 0xfc, 0xf0, 0x2b, 0xe5, 0x18, 0x90, 0x14, 0x0f, 0x3e, 0xf6, 0x38,
	0x0e, 0x26, 0xec, 0x37, 0x4b, 0x56, 0xcf, 0xd9, 0xc2, 0x8f, 0x26, 0xe3, 0x73, 0xea, 0x4b, 0xe5,
	0xaa, 0x2c, 0x7c, 0xc6, 0x53, 0xcf, 0xac, 0x0e, 0xa4, 0x8e, 0xdf, 0x84, 0x3a, 0xe5, 0x1c, 0xa9,
	0xe2, 0x56, 0xac, 0xe2, 0xd4, 0x14, 0x22, 0xc7, 0xe1, 0xdf, 0x96, 0xe3, 0x98, 0xf9, 0x90, 0x6d,
	0xef, 0x1c, 0x0e, 0x1c, 0x9f, 0xe3, 0x95, 0xec, 0x39, 0x6e, 0xa5, 0x5d, 0x42, 0xb5, 0xc0, 0x1d,
	0x58, 0xb2, 0x52, 0xae, 0x90, 0x30, 0xf0, 0x37, 0x15, 0xa8, 0x31, 0x11, 0xe2, 0x7a, 0x4e, 0x59,
	0xa9, 0xe7, 0x20, 0xa8, 0x0d, 0xa3, 0xc4, 0xb1, 0x49, 0xf8, 0x6f, 0xc6, 0x1b, 0xbb, 0x7d, 0x61,
	0xb5, 0x2b, 0x84, 0xff, 0xe6, 0xc5, 0x4b, 0xe6, 0x47, 0x52, 0xab, 0xec, 0x37, 0x4f, 0x96, 0xdd,
	0xbe, 0x3d, 0xb0, 0x69, 0x9f, 0xab, 0x74, 0x85, 0xc4, 0x34, 0xf3, 0xe4, 0x89, 0x13, 0x84, 0xe6,
	0x05, 0xed, 0xf7, 0x42, 0x33, 0x9c, 0x08, 0x1f, 0x5b, 0x22, 0x29, 0x2e, 0xbb, 0x52, 0x69, 0xa3,
	0x16, 0xf9, 0x28, 0x8d, 0xc7, 0xbc, 0x7d, 0x4c, 0xfd, 0x0b, 0x7a, 0xec, 0x3a, 0x83, 0x91, 0x6d,
	0x85, 0xad, 0x06, 0xb7, 0x5e, 0x9d, 0xc9, 0x94, 0x60, 0x07, 0xfc, 0x6e, 0x44, 0xfb, 0xad, 0x25,
	0x3e, 0x22, 0x61, 0xe0, 0xf7, 0xe3, 0xe3, 0x44, 0xee, 0x86, 0xdc, 0xd8, 0x97, 0x22, 0x57, 0x14,
	0xfb, 0xba, 0x92, 0x94, 0x04, 0xec, 0x11, 0x95, 0x9e, 0x89, 0xf7, 0x01, 0xf5, 0xec, 0x0b, 0xe7,
	0x53, 0xe1, 0xbe, 0xd1, 0x4e, 0x2a, 0xfe, 0x2d, 0xee, 0x5d, 0x71, 0x5d, 0xf0, 0x3e, 0x6c, 0x68,
	0xe3, 0xf3, 0x0a, 0xd2, 0xe5, 0x74, 0x0d, 0x76, 0x03, 0xae, 0x3d, 0x08, 0x87, 0x87, 0xfd, 0x3e,
	0x4b, 0xbc, 0xa2, 0x1b, 0xd1, 0x3e, 0x20, 0x95, 0x29, 0x81, 0x5a, 0xb0, 0x68, 0x0a, 0x56, 0x74,
	0x1b, 0x90, 0x24, 0xfe, 0x7b, 0x19, 0xd6, 0xdb, 0x34, 0x3c, 0xe3, 0x17, 0xc0, 0x17, 0x31, 0x39,
	0xf5, 0x56, 0x59, 0x4d, 0xdd, 0x2a, 0x0d, 0x68, 0x30, 0xbd, 0x70, 0x5b, 0x12, 0xd6, 0x16, 0xd3,
	0x29, 0x53, 0x5d, 0x98, 0x6e, 0xaa, 0xf5, 0x94, 0xa9, 0x72, 0x95, 0x9a, 0x5f, 0xf1, 0x80, 0xbd,
	0x28, 0x12, 0x4d, 0x49, 0xe2, 0x7f, 0x95, 0xe1, 0x9a, 0xf2, 0x62, 0x52, 0x11, 0xef, 0xa7, 0x6a,
	0x58, 0xdf, 0x89, 0xb7, 0x2f, 0x33, 0x36, 0x5b, 0xbd, 0x7a, 0x47, 0xb9, 0x1c, 0x2f, 0x1f, 0xdc,
	0x9e, 0x32, 0x55, 0x16, 0x93, 0xf8, 0x70, 0xe3, 0xed, 0x99, 0x45, 0xa0, 0x5a, 0x4e, 0x11, 0xe6,
	0x35, 0xa8, 0xf1, 0xe2, 0x4b, 0x74, 0x23, 0x2f, 0x67, 0x6f, 0xe4, 0x95, 0xdc, 0x8a, 0xc8, 0x37,
	0x65, 0x58, 0x6d, 0xd3, 0xf0, 0xc4, 0x1e, 0x0c, 0xfe, 0x77, 0x21, 0xe4, 0x5d, 0x58, 0x8b, 0x65,
	0x48, 0xaa, 0xf6, 0xb3, 0x5f, 0x84, 0x49, 0xbf, 0xdd, 0xa3, 0x21, 0x73, 0x26, 0xee, 0x89, 0xb6,
	0x73, 0xf1, 0x82, 0x56, 0x19, 0x5b, 0x5e, 0x35, 0x65, 0x79, 0x2d, 0x58, 0xa4, 0x8e, 0x79, 0x3e,
	0xa2, 0x7d, 0x99, 0xce, 0x44, 0x24, 0xbe, 0x01, 0xd7, 0x33, 0x32, 0xc8, 0xb4, 0xe5, 0x1f, 0x65,
	0x68, 0x7e, 0x6e, 0x86, 0xd6, 0x30, 0x92, 0x6a, 0x17, 0x80, 0x07, 0xf0, 0xc7, 0x57, 0x9e, 0x0c,
	0x0a, 0x35, 0xa2, 0x70, 0x90, 0x09, 0x5b, 0x13, 0x3d, 0xe2, 0x77, 0x4d, 0xdf, 0x1c, 0x47, 0x25,
	0xe9, 0xef, 0xc5, 0x56, 0xa4, 0xa2, 0xa6, 0x0f, 0x09, 0x31, 0x85, 0xe4, 0x23, 0x19, 0x67, 0xb0,
	0x95, 0x3b, 0x9e, 0xed, 0x11, 0x4b, 0x70, 0xc4, 0x91, 0x2a, 0x0c, 0x2d, 0x61, 0x88, 0x4b, 0x13,
	0xd3, 0x60, 0x94, 0x04, 0x47, 0x24, 0xfe, 0xb6, 0x0e, 0x2b, 0x52, 0x1c, 0xb9, 0x79, 0x67, 0xb0,
	0x6a, 0xf6, 0xfb, 0x6c, 0x01, 0xcf, 0xe5, 0x2b, 0x48, 0xff, 0x79, 0x39, 0x2d, 0xbe, 0x74, 0x80,
	0x43, 0x6d, 0x70, 0xa7, 0x44, 0x52, 0xd3, 0x11, 0x81, 0x35, 0x9e, 0x54, 0x2a, 0x88, 0x95, 0x54,
	0x8d, 0x55, 0x47, 0xec, 0xea, 0xa3, 0x3b, 0x25, 0x92, 0x06, 0x10, 0x98, 0xc1, 0x50, 0xc5, 0xac,
	0xce, 0xc0, 0xd4, 0x46, 0x0b, 0x4c, 0x8d, 0xc5, 0x30, 0x53, 0x4a, 0xcf, 0xd4, 0x82, 0x75, 0xcc,
	0xd4, 0x4e, 0x30, 0xcc, 0x14, 0x80, 0x71, 0x02, 0xab, 0xba, 0x7e, 0x9e, 0xc7, 0xb4, 0x8d, 0x0b,
	0xd1, 0x21, 0x7a, 0x41, 0x18, 0x96, 0xe9, 0x24, 0xf2, 0x89, 0x0a, 0xe2, 0x12, 0x51, 0x59, 0xc6,
	0x6f, 0x44, 0x0d, 0xe1, 0x45, 0x17, 0xd2, 0x6b, 0x0b, 0xd5, 0x4c, 0x6d, 0x21, 0x49, 0xe7, 0x6a,
	0x6a, 0x3a, 0x67, 0xfc, 0xdf, 0xa5, 0x7e, 0x6a, 0xb0, 0xfd, 0xf3, 0x22, 0x6c, 0x1c, 0xfb, 0xd4,
	0x0c, 0xa9, 0xde, 0xaf, 0xf9, 0x61, 0xea, 0x9c, 0x79, 0x29, 0xc9, 0xb0, 0xb3, 0xa3, 0xb3, 0x27,
	0x0d, 0x81, 0x15, 0x16, 0xa6, 0xce, 0x3c, 0xea, 0xf3, 0x12, 0x84, 0xf4, 0x8d, 0x57, 0xa7, 0xa2,
	0x3c, 0x54, 0x67, 0x74, 0x4a, 0x44, 0x87, 0x40, 0xef, 0x2a, 0x35, 0x16, 0xf5, 0xe0, 0xcb, 0x83,
	0x3a, 0x71, 0x1d, 0xca, 0xcf, 0x2f, 0xd7, 0xa1, 0xc6, 0x5f, 0xcb, 0xf1, 0x01, 0x56, 0xb4, 0xef,
	0xaf, 0xc2, 0xba, 0x67, 0xfa, 0xd4, 0x09, 0x8f, 0xf5, 0xca, 0x62, 0x93, 0x64, 0xf8, 0x6a, 0xad,
	0xa6, 0x9a, 0xa9, 0xd5, 0x88, 0x9b, 0xd0, 0xa3, 0x24, 0x51, 0x50, 0x38, 0x6c, 0x67, 0x04, 0xf5,
	0x80, 0x37, 0x14, 0x17, 0xf8, 0x00, 0x95, 0xc5, 0x12, 0x3f, 0x61, 0x09, 0x32, 0x93, 0x92, 0x09,
	0x83, 0xce, 0x34, 0xbe, 0xae, 0xc1, 0x8a, 0xa6, 0x2c, 0xf4, 0x33, 0x68, 0x4e, 0xbc, 0x80, 0xfa,
	0x61, 0x47, 0xdd, 0xb4, 0x77, 0xe7, 0x57, 0xf7, 0xfe, 0x13, 0x65, 0x7a, 0xa7, 0x44, 0x34, 0x38,
	0xf4, 0x39, 0x80, 0xa0, 0x4f, 0x92, 0xf4, 0xe1, 0x9d, 0x67, 0x06, 0x97, 0x49, 0x85, 0x02, 0x85,
	0x3e, 0x86, 0x7a, 0x9f, 0x8e, 0x68, 0x18, 0xed, 0xea, 0x5b, 0xcf, 0x00, 0x7a, 0xc2, 0x27, 0x32,
	0xa3, 0x13, 0x10, 0xc6, 0x37, 0x65, 0x68, 0xaa, 0xaf, 0xa1, 0x1d, 0x9e, 0xe5, 0xd4, 0xe1, 0x59,
	0xd4, 0x4f, 0xca, 0x49, 0x65, 0xd8, 0x25, 0xd2, 0xe2, 0x6e, 0x26, 0x6e, 0x75, 0x82, 0x60, 0xdc,
	0xb1, 0xe2, 0x7c, 0x82, 0x30, 0x0e, 0x00, 0x92, 0xb7, 0x9d, 0x2f, 0x67, 0x30, 0xee, 0x40, 0x5d,
	0xbc, 0xcc, 0x34, 0x89, 0x8f, 0x96, 0x61, 0xc9, 0x8d, 0x5e, 0xde, 0xa8, 0x43, 0x8d, 0xd9, 0xb8,
	0xea, 0xca, 0x5d, 0xd8, 0xd4, 0x95, 0x96, 0xe4, 0xce, 0x51, 0x17, 0x59, 0x54, 0x69, 0x22, 0x32,
	0xa7, 0x92, 0xae, 0xa5, 0x48, 0xf8, 0x9f, 0x15, 0x40, 0x64, 0xe2, 0x74, 0x6d, 0x8f, 0x8e, 0x6c,
	0x27, 0xbe, 0x06, 0xec, 0xc1, 0xb2, 0xed, 0x78, 0x93, 0x90, 0xa8, 0x9e, 0xa4, 0xb2, 0x98, 0x19,
	0x73, 0xf2, 0x2c, 0x4a, 0xa8, 0x05, 0xb6, 0xce, 0x44, 0xef, 0x41, 0x9d, 0xdf, 0x7a, 0x44, 0xd0,
	0x56, 0x5d, 0x3a, 0xbb, 0xe8, 0x7e, 0x8f, 0x8d, 0x24, 0x72, 0x02, 0xbb, 0x6c, 0xb9, 0x93, 0xd0,
	0x9b, 0xf0, 0x1c, 0x47, 0x49, 0xcb, 0x53, 0x5c, 0xe3, 0xdb, 0x32, 0x2c, 0xf0, 0x99, 0xbc, 0x34,
	0x32, 0x32, 0xc3, 0x81, 0xeb, 0x8f, 0x23, 0xcd, 0x46, 0xb4, 0xd0, 0x43, 0x9f, 0x12, 0x35, 0xf2,
	0x2a, 0x9c, 0x99, 0xa9, 0xe4, 0x1d, 0x58, 0xa1, 0x4e, 0xe8, 0x5f, 0xa5, 0x84, 0xd1, 0x99, 0x2c,
	0x99, 0xe1, 0x8c, 0x43, 0xff, 0x22, 0x68, 0x2d, 0xf0, 0x63, 0x2a, 0x61, 0xe0, 0x77, 0x60, 0x43,
	0x7b, 0x6b, 0xb9, 0x79, 0xd9, 0x52, 0x8c, 0xb6, 0xf4, 0xc1, 0xdf, 0x5a, 0xb0, 0xf8, 0x88, 0x49,
	0xda, 0x3d, 0x46, 0x1f, 0xc1, 0xb2, 0xf2, 0x55, 0x10, 0xba, 0x19, 0xab, 0x33, 0xfb, 0x75, 0x91,
	0xb1, 0x93, 0xff, 0x50, 0x26, 0x89, 0x25, 0x86, 0xd5, 0xce, 0xc5, 0x6a, 0x4f, 0xc3, 0x6a, 0xe7,
	0x62, 0x51, 0x5e, 0x5f, 0xce, 0x7c, 0xf2, 0x83, 0xee, 0xa8, 0x32, 0x14, 0x7d, 0x44, 0x64, 0xbc,
	0x3c, 0x63, 0x94, 0xba, 0x4c, 0x7b, 0xfa, 0x32, 0xed, 0xb9, 0x96, 0x69, 0x4f, 0x5f, 0xe6, 0x10,
	0x1a, 0xd1, 0x07, 0x3d, 0x28, 0x29, 0x8a, 0xa4, 0x3e, 0x26, 0x32, 0x6e, 0xe4, 0x3c, 0x89, 0x21,
	0xda, 0x00, 0xc9, 0x27, 0x3a, 0xc8, 0x48, 0x86, 0xa6, 0x3f, 0x00, 0x32, 0x6e, 0xe6, 0x3e, 0x8b,
	0x81, 0x7a, 0xb0, 0xaa, 0x7f, 0x8e, 0x83, 0x76, 0x93, 0x00, 0x9a, 0xf7, 0xb9, 0x8f, 0x71, 0xbb,
	0xf0, 0x79, 0x0c, 0x7a, 0x0a, 0x8d, 0xe8, 0x93, 0x1c, 0xe5, 0x05, 0x53, 0x1f, 0xf3, 0x28, 0x40,
	0xf9, 0xdf, 0xef, 0xe0, 0xd2, 0x9b, 0x65, 0xf4, 0x09, 0x2c, 0xc5, 0x1f, 0xaa, 0xa0, 0x1b, 0x79,
	0x1f, 0xaf, 0x08, 0xb0, 0xbd, 0x59, 0xdf, 0xb5, 0x70, 0xb4, 0xa7, 0xb0, 0x96, 0xfa, 0x6c, 0x01,
	0xdd, 0x2e, 0xfe, 0xa0, 0x21, 0x8d, 0x5c, 0xf0, 0xc5, 0x83, 0x94, 0x73, 0x59, 0x69, 0x34, 0x2b,
	0xd6, 0x9e, 0x6d, 0x6c, 0x2b, 0xd6, 0x9e, 0xd3, 0x9b, 0xe6, 0x68, 0x3d, 0x58, 0xd5, 0x3b, 0xf4,
	0xca, 0xae, 0xe4, 0xf6, 0xfa, 0x15, 0x65, 0x16, 0xb4, 0xf6, 0x4b, 0xe8, 0x17, 0x80, 0xb2, 0x7d,
	0x7a, 0x84, 0x13, 0xfb, 0x28, 0xea, 0xfc, 0x1b, 0x2f, 0x4d, 0x1d, 0xa3, 0xda, 0x92, 0xde, 0xbc,
	0x56, 0xa4, 0xce, 0x6d, 0x96, 0x2b, 0x52, 0x17, 0x74, 0xbd, 0x4b, 0xe8, 0x29, 0xac, 0x68, 0xfd,
	0x6d, 0x74, 0x4b, 0x75, 0xb3, 0x4c, 0x3f, 0xdc, 0xb8, 0x53, 0xf4, 0x38, 0x63, 0x0c, 0x34, 0x6a,
	0x5a, 0xe9, 0xbd, 0x69, 0x3d, 0xa8, 0x14, 0x75, 0xc3, 0xf5, 0xa0, 0x52, 0xdc, 0xe0, 0x2e, 0xa1,
	0x73, 0xd8, 0xc8, 0x69, 0x56, 0xa3, 0x44, 0xa7, 0xc5, 0x0d, 0x70, 0xe5, 0x65, 0xa6, 0xf5, 0xbb,
	0x4b, 0xe8, 0x53, 0x68, 0xaa, 0xdd, 0x66, 0xb4, 0x93, 0xa3, 0x84, 0xb8, 0x93, 0x6c, 0xdc, 0x2a,
	0x78, 0x1a, 0xc3, 0x75, 0xb9, 0xce, 0x93, 0x16, 0xb1, 0xae, 0xf3, 0x4c, 0x6b, 0xda, 0xd8, 0x2d,
	0x7a, 0xac, 0x9a, 0x86, 0xde, 0xde, 0x55, 0x4c, 0x23, 0xb7, 0x79, 0xac, 0x98, 0x46, 0x7e, 0x5f,
	0x58, 0xc4, 0xd1, 0xa8, 0xb3, 0xab, 0x85, 0x19, 0xad, 0xd9, 0x6b, 0x5c, 0x4f, 0x9e, 0x68, 0x1d,
	0x5a, 0x6e, 0x03, 0x8f, 0x00, 0xc9, 0x71, 0xca, 0x16, 0x2a, 0xde, 0x9b, 0xed, 0x81, 0x4e, 0xc7,
	0xeb, 0xc2, 0x8a, 0xd6, 0xbc, 0x54, 0x34, 0x97, 0xd7, 0x20, 0x55, 0x34, 0x97, 0xdb, 0xf3, 0x14,
	0x5b, 0xab, 0xb6, 0x24, 0x95, 0xad, 0xcd, 0x69, 0x6c, 0x2a, 0x5b, 0x9b, 0xd7, 0xc7, 0x14, 0x41,
	0x20, 0xdb, 0x8d, 0x53, 0x82, 0x40, 0x61, 0xef, 0x4f, 0x09, 0x02, 0xc5, 0xed, 0x3c, 0xb1, 0x40,
	0x6f, 0xda, 0x02, 0xbd, 0x39, 0x16, 0xe8, 0x4d, 0x5b, 0x40, 0xd8, 0x7a, 0xdc, 0xe4, 0xd4, 0x6d,
	0x3d, 0xdd, 0x6e, 0x35, 0x6e, 0x15, 0x3c, 0x55, 0x2d, 0x53, 0xef, 0x11, 0xa1, 0xdd, 0xf4, 0x14,
	0xbd, 0x39, 0x67, 0xdc, 0x2e, 0x7c, 0xae, 0xfa, 0x7c, 0x4e, 0x67, 0x04, 0xe9, 0x2a, 0xcc, 0xef,
	0x1d, 0xe9, 0x01, 0xac, 0xa8, 0xb9, 0xa2, 0xe9, 0xe1, 0xa1, 0x68, 0x85, 0xa5, 0xc5, 0x52, 0x5b,
	0x28, 0x59, 0x3d, 0x68, 0x25, 0x7d, 0x91, 0xae, 0x29, 0xf5, 0x77, 0x35, 0xf5, 0xcb, 0x54, 0xf1,
	0xd5, 0xd4, 0x2f, 0x5b, 0xb2, 0x17, 0xd9, 0x49, 0x52, 0x81, 0x57, 0xb2, 0x93, 0x4c, 0xad, 0x5e,
	0xc9, 0x4e, 0xb2, 0x25, 0x7b, 0x5c, 0x42, 0x0f, 0x61, 0x29, 0xae, 0x2c, 0x2b, 0xa7, 0x7f, 0xba,
	0x5a, 0x6f, 0x18, 0xc5, 0x85, 0x68, 0xee, 0x96, 0x1f, 0xc2, 0xa2, 0xac, 0xc5, 0xa2, 0xeb, 0xea,
	0x50, 0xa5, 0x42, 0x6c, 0xb4, 0xb2, 0x0f, 0x14, 0x84, 0xcf, 0x60, 0x2d, 0x55, 0x0f, 0x55, 0x32,
	0x87, 0xfc, 0x6a, 0xad, 0x92, 0x39, 0x14, 0x95, 0x52, 0x4b, 0xe8, 0x07, 0xb0, 0xc0, 0x8b, 0x67,
	0x68, 0x2b, 0xb7, 0x0a, 0x6a, 0x6c, 0xe7, 0xd7, 0xd8, 0xb8, 0x4c, 0x67, 0xd0, 0x54, 0xaf, 0x6b,
	0x8a, 0x05, 0xe4, 0x5c, 0x7d, 0x15, 0x0b, 0xc8, 0xbb, 0xe3, 0xe1, 0xd2, 0xbd, 0x32, 0xb3, 0x01,
	0xe5, 0x06, 0xa1, 0x86, 0xc1, 0xcc, 0x6d, 0x4a, 0xb1, 0x81, 0x9c, 0x4b, 0x07, 0x2e, 0x1d, 0xd5,
	0x7e, 0x52, 0xf1, 0xce, 0xcf, 0xeb, 0xfc, 0x8f, 0x0a, 0xf7, 0xff, 0x1d, 0x00, 0x00, 0xff, 0xff,
	0xbc, 0x4a, 0x3e, 0xca, 0xb9, 0x30, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodeRPCClient is the client API for NodeRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeRPCClient interface {
	SetUsername(ctx context.Context, in *SetUsernameRequest, opts ...grpc.CallOption) (*SetUsernameResponse, error)
	GetUsername(ctx context.Context, in *GetUsernameRequest, opts ...grpc.CallOption) (*GetUsernameResponse, error)
	SetEthereumBIP39Seed(ctx context.Context, in *SetEthereumBIP39SeedRequest, opts ...grpc.CallOption) (*SetEthereumBIP39SeedResponse, error)
	GetEthereumBIP39Seed(ctx context.Context, in *GetEthereumBIP39SeedRequest, opts ...grpc.CallOption) (*GetEthereumBIP39SeedResponse, error)
	InitRepo(ctx context.Context, in *InitRepoRequest, opts ...grpc.CallOption) (*InitRepoResponse, error)
	ImportRepo(ctx context.Context, in *ImportRepoRequest, opts ...grpc.CallOption) (*ImportRepoResponse, error)
	CheckpointRepo(ctx context.Context, in *CheckpointRepoRequest, opts ...grpc.CallOption) (*CheckpointRepoResponse, error)
	PullRepo(ctx context.Context, in *PullRepoRequest, opts ...grpc.CallOption) (NodeRPC_PullRepoClient, error)
	CloneRepo(ctx context.Context, in *CloneRepoRequest, opts ...grpc.CallOption) (NodeRPC_CloneRepoClient, error)
	FetchFromCommit(ctx context.Context, in *FetchFromCommitRequest, opts ...grpc.CallOption) (NodeRPC_FetchFromCommitClient, error)
	FetchChunks(ctx context.Context, in *FetchChunksRequest, opts ...grpc.CallOption) (NodeRPC_FetchChunksClient, error)
	RegisterRepoID(ctx context.Context, in *RegisterRepoIDRequest, opts ...grpc.CallOption) (*RegisterRepoIDResponse, error)
	IsRepoIDRegistered(ctx context.Context, in *IsRepoIDRegisteredRequest, opts ...grpc.CallOption) (*IsRepoIDRegisteredResponse, error)
	TrackLocalRepo(ctx context.Context, in *TrackLocalRepoRequest, opts ...grpc.CallOption) (*TrackLocalRepoResponse, error)
	GetLocalRepos(ctx context.Context, in *GetLocalReposRequest, opts ...grpc.CallOption) (NodeRPC_GetLocalReposClient, error)
	SetReplicationPolicy(ctx context.Context, in *SetReplicationPolicyRequest, opts ...grpc.CallOption) (*SetReplicationPolicyResponse, error)
	AnnounceRepoContent(ctx context.Context, in *AnnounceRepoContentRequest, opts ...grpc.CallOption) (*AnnounceRepoContentResponse, error)
	GetLocalRefs(ctx context.Context, in *GetLocalRefsRequest, opts ...grpc.CallOption) (*GetLocalRefsResponse, error)
	GetRemoteRefs(ctx context.Context, in *GetRemoteRefsRequest, opts ...grpc.CallOption) (*GetRemoteRefsResponse, error)
	IsBehindRemote(ctx context.Context, in *IsBehindRemoteRequest, opts ...grpc.CallOption) (*IsBehindRemoteResponse, error)
	PushRepo(ctx context.Context, in *PushRepoRequest, opts ...grpc.CallOption) (NodeRPC_PushRepoClient, error)
	RequestReplication(ctx context.Context, in *ReplicationRequest, opts ...grpc.CallOption) (NodeRPC_RequestReplicationClient, error)
	SetRepoPublic(ctx context.Context, in *SetRepoPublicRequest, opts ...grpc.CallOption) (*SetRepoPublicResponse, error)
	IsRepoPublic(ctx context.Context, in *IsRepoPublicRequest, opts ...grpc.CallOption) (*IsRepoPublicResponse, error)
	GetUserPermissions(ctx context.Context, in *GetUserPermissionsRequest, opts ...grpc.CallOption) (*GetUserPermissionsResponse, error)
	SetUserPermissions(ctx context.Context, in *SetUserPermissionsRequest, opts ...grpc.CallOption) (*SetUserPermissionsResponse, error)
	GetRepoUsers(ctx context.Context, in *GetRepoUsersRequest, opts ...grpc.CallOption) (*GetRepoUsersResponse, error)
	GetRepoHistory(ctx context.Context, in *GetRepoHistoryRequest, opts ...grpc.CallOption) (*GetRepoHistoryResponse, error)
	GetUpdatedRefEvents(ctx context.Context, in *GetUpdatedRefEventsRequest, opts ...grpc.CallOption) (*GetUpdatedRefEventsResponse, error)
	GetRepoFiles(ctx context.Context, in *GetRepoFilesRequest, opts ...grpc.CallOption) (*GetRepoFilesResponse, error)
	SignMessage(ctx context.Context, in *SignMessageRequest, opts ...grpc.CallOption) (*SignMessageResponse, error)
	EthAddress(ctx context.Context, in *EthAddressRequest, opts ...grpc.CallOption) (*EthAddressResponse, error)
	GetObject(ctx context.Context, in *GetObjectRequest, opts ...grpc.CallOption) (NodeRPC_GetObjectClient, error)
	GetDiff(ctx context.Context, in *GetDiffRequest, opts ...grpc.CallOption) (NodeRPC_GetDiffClient, error)
	SetFileChunking(ctx context.Context, in *SetFileChunkingRequest, opts ...grpc.CallOption) (*SetFileChunkingResponse, error)
	Watch(ctx context.Context, in *WatchRequest, opts ...grpc.CallOption) (NodeRPC_WatchClient, error)
	CreateCommit(ctx context.Context, opts ...grpc.CallOption) (NodeRPC_CreateCommitClient, error)
	RunPipeline(ctx context.Context, in *RunPipelineRequest, opts ...grpc.CallOption) (*RunPipelineResponse, error)
}

type nodeRPCClient struct {
	cc *grpc.ClientConn
}

func NewNodeRPCClient(cc *grpc.ClientConn) NodeRPCClient {
	return &nodeRPCClient{cc}
}

func (c *nodeRPCClient) SetUsername(ctx context.Context, in *SetUsernameRequest, opts ...grpc.CallOption) (*SetUsernameResponse, error) {
	out := new(SetUsernameResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/SetUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) GetUsername(ctx context.Context, in *GetUsernameRequest, opts ...grpc.CallOption) (*GetUsernameResponse, error) {
	out := new(GetUsernameResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/GetUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) SetEthereumBIP39Seed(ctx context.Context, in *SetEthereumBIP39SeedRequest, opts ...grpc.CallOption) (*SetEthereumBIP39SeedResponse, error) {
	out := new(SetEthereumBIP39SeedResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/SetEthereumBIP39Seed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) GetEthereumBIP39Seed(ctx context.Context, in *GetEthereumBIP39SeedRequest, opts ...grpc.CallOption) (*GetEthereumBIP39SeedResponse, error) {
	out := new(GetEthereumBIP39SeedResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/GetEthereumBIP39Seed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) InitRepo(ctx context.Context, in *InitRepoRequest, opts ...grpc.CallOption) (*InitRepoResponse, error) {
	out := new(InitRepoResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/InitRepo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) ImportRepo(ctx context.Context, in *ImportRepoRequest, opts ...grpc.CallOption) (*ImportRepoResponse, error) {
	out := new(ImportRepoResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/ImportRepo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) CheckpointRepo(ctx context.Context, in *CheckpointRepoRequest, opts ...grpc.CallOption) (*CheckpointRepoResponse, error) {
	out := new(CheckpointRepoResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/CheckpointRepo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) PullRepo(ctx context.Context, in *PullRepoRequest, opts ...grpc.CallOption) (NodeRPC_PullRepoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeRPC_serviceDesc.Streams[0], "/noderpc.NodeRPC/PullRepo", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeRPCPullRepoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeRPC_PullRepoClient interface {
	Recv() (*PullRepoResponsePacket, error)
	grpc.ClientStream
}

type nodeRPCPullRepoClient struct {
	grpc.ClientStream
}

func (x *nodeRPCPullRepoClient) Recv() (*PullRepoResponsePacket, error) {
	m := new(PullRepoResponsePacket)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeRPCClient) CloneRepo(ctx context.Context, in *CloneRepoRequest, opts ...grpc.CallOption) (NodeRPC_CloneRepoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeRPC_serviceDesc.Streams[1], "/noderpc.NodeRPC/CloneRepo", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeRPCCloneRepoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeRPC_CloneRepoClient interface {
	Recv() (*CloneRepoResponsePacket, error)
	grpc.ClientStream
}

type nodeRPCCloneRepoClient struct {
	grpc.ClientStream
}

func (x *nodeRPCCloneRepoClient) Recv() (*CloneRepoResponsePacket, error) {
	m := new(CloneRepoResponsePacket)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeRPCClient) FetchFromCommit(ctx context.Context, in *FetchFromCommitRequest, opts ...grpc.CallOption) (NodeRPC_FetchFromCommitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeRPC_serviceDesc.Streams[2], "/noderpc.NodeRPC/FetchFromCommit", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeRPCFetchFromCommitClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeRPC_FetchFromCommitClient interface {
	Recv() (*FetchFromCommitResponse, error)
	grpc.ClientStream
}

type nodeRPCFetchFromCommitClient struct {
	grpc.ClientStream
}

func (x *nodeRPCFetchFromCommitClient) Recv() (*FetchFromCommitResponse, error) {
	m := new(FetchFromCommitResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeRPCClient) FetchChunks(ctx context.Context, in *FetchChunksRequest, opts ...grpc.CallOption) (NodeRPC_FetchChunksClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeRPC_serviceDesc.Streams[3], "/noderpc.NodeRPC/FetchChunks", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeRPCFetchChunksClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeRPC_FetchChunksClient interface {
	Recv() (*FetchChunksResponse, error)
	grpc.ClientStream
}

type nodeRPCFetchChunksClient struct {
	grpc.ClientStream
}

func (x *nodeRPCFetchChunksClient) Recv() (*FetchChunksResponse, error) {
	m := new(FetchChunksResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeRPCClient) RegisterRepoID(ctx context.Context, in *RegisterRepoIDRequest, opts ...grpc.CallOption) (*RegisterRepoIDResponse, error) {
	out := new(RegisterRepoIDResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/RegisterRepoID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) IsRepoIDRegistered(ctx context.Context, in *IsRepoIDRegisteredRequest, opts ...grpc.CallOption) (*IsRepoIDRegisteredResponse, error) {
	out := new(IsRepoIDRegisteredResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/IsRepoIDRegistered", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) TrackLocalRepo(ctx context.Context, in *TrackLocalRepoRequest, opts ...grpc.CallOption) (*TrackLocalRepoResponse, error) {
	out := new(TrackLocalRepoResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/TrackLocalRepo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) GetLocalRepos(ctx context.Context, in *GetLocalReposRequest, opts ...grpc.CallOption) (NodeRPC_GetLocalReposClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeRPC_serviceDesc.Streams[4], "/noderpc.NodeRPC/GetLocalRepos", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeRPCGetLocalReposClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeRPC_GetLocalReposClient interface {
	Recv() (*GetLocalReposResponsePacket, error)
	grpc.ClientStream
}

type nodeRPCGetLocalReposClient struct {
	grpc.ClientStream
}

func (x *nodeRPCGetLocalReposClient) Recv() (*GetLocalReposResponsePacket, error) {
	m := new(GetLocalReposResponsePacket)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeRPCClient) SetReplicationPolicy(ctx context.Context, in *SetReplicationPolicyRequest, opts ...grpc.CallOption) (*SetReplicationPolicyResponse, error) {
	out := new(SetReplicationPolicyResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/SetReplicationPolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) AnnounceRepoContent(ctx context.Context, in *AnnounceRepoContentRequest, opts ...grpc.CallOption) (*AnnounceRepoContentResponse, error) {
	out := new(AnnounceRepoContentResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/AnnounceRepoContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) GetLocalRefs(ctx context.Context, in *GetLocalRefsRequest, opts ...grpc.CallOption) (*GetLocalRefsResponse, error) {
	out := new(GetLocalRefsResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/GetLocalRefs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) GetRemoteRefs(ctx context.Context, in *GetRemoteRefsRequest, opts ...grpc.CallOption) (*GetRemoteRefsResponse, error) {
	out := new(GetRemoteRefsResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/GetRemoteRefs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) IsBehindRemote(ctx context.Context, in *IsBehindRemoteRequest, opts ...grpc.CallOption) (*IsBehindRemoteResponse, error) {
	out := new(IsBehindRemoteResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/IsBehindRemote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) PushRepo(ctx context.Context, in *PushRepoRequest, opts ...grpc.CallOption) (NodeRPC_PushRepoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeRPC_serviceDesc.Streams[5], "/noderpc.NodeRPC/PushRepo", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeRPCPushRepoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeRPC_PushRepoClient interface {
	Recv() (*ProgressPacket, error)
	grpc.ClientStream
}

type nodeRPCPushRepoClient struct {
	grpc.ClientStream
}

func (x *nodeRPCPushRepoClient) Recv() (*ProgressPacket, error) {
	m := new(ProgressPacket)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeRPCClient) RequestReplication(ctx context.Context, in *ReplicationRequest, opts ...grpc.CallOption) (NodeRPC_RequestReplicationClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeRPC_serviceDesc.Streams[6], "/noderpc.NodeRPC/RequestReplication", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeRPCRequestReplicationClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeRPC_RequestReplicationClient interface {
	Recv() (*ProgressPacket, error)
	grpc.ClientStream
}

type nodeRPCRequestReplicationClient struct {
	grpc.ClientStream
}

func (x *nodeRPCRequestReplicationClient) Recv() (*ProgressPacket, error) {
	m := new(ProgressPacket)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeRPCClient) SetRepoPublic(ctx context.Context, in *SetRepoPublicRequest, opts ...grpc.CallOption) (*SetRepoPublicResponse, error) {
	out := new(SetRepoPublicResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/SetRepoPublic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) IsRepoPublic(ctx context.Context, in *IsRepoPublicRequest, opts ...grpc.CallOption) (*IsRepoPublicResponse, error) {
	out := new(IsRepoPublicResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/IsRepoPublic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) GetUserPermissions(ctx context.Context, in *GetUserPermissionsRequest, opts ...grpc.CallOption) (*GetUserPermissionsResponse, error) {
	out := new(GetUserPermissionsResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/GetUserPermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) SetUserPermissions(ctx context.Context, in *SetUserPermissionsRequest, opts ...grpc.CallOption) (*SetUserPermissionsResponse, error) {
	out := new(SetUserPermissionsResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/SetUserPermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) GetRepoUsers(ctx context.Context, in *GetRepoUsersRequest, opts ...grpc.CallOption) (*GetRepoUsersResponse, error) {
	out := new(GetRepoUsersResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/GetRepoUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) GetRepoHistory(ctx context.Context, in *GetRepoHistoryRequest, opts ...grpc.CallOption) (*GetRepoHistoryResponse, error) {
	out := new(GetRepoHistoryResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/GetRepoHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) GetUpdatedRefEvents(ctx context.Context, in *GetUpdatedRefEventsRequest, opts ...grpc.CallOption) (*GetUpdatedRefEventsResponse, error) {
	out := new(GetUpdatedRefEventsResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/GetUpdatedRefEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) GetRepoFiles(ctx context.Context, in *GetRepoFilesRequest, opts ...grpc.CallOption) (*GetRepoFilesResponse, error) {
	out := new(GetRepoFilesResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/GetRepoFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) SignMessage(ctx context.Context, in *SignMessageRequest, opts ...grpc.CallOption) (*SignMessageResponse, error) {
	out := new(SignMessageResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/SignMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) EthAddress(ctx context.Context, in *EthAddressRequest, opts ...grpc.CallOption) (*EthAddressResponse, error) {
	out := new(EthAddressResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/EthAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) GetObject(ctx context.Context, in *GetObjectRequest, opts ...grpc.CallOption) (NodeRPC_GetObjectClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeRPC_serviceDesc.Streams[7], "/noderpc.NodeRPC/GetObject", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeRPCGetObjectClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeRPC_GetObjectClient interface {
	Recv() (*GetObjectResponse, error)
	grpc.ClientStream
}

type nodeRPCGetObjectClient struct {
	grpc.ClientStream
}

func (x *nodeRPCGetObjectClient) Recv() (*GetObjectResponse, error) {
	m := new(GetObjectResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeRPCClient) GetDiff(ctx context.Context, in *GetDiffRequest, opts ...grpc.CallOption) (NodeRPC_GetDiffClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeRPC_serviceDesc.Streams[8], "/noderpc.NodeRPC/GetDiff", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeRPCGetDiffClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeRPC_GetDiffClient interface {
	Recv() (*GetDiffResponse, error)
	grpc.ClientStream
}

type nodeRPCGetDiffClient struct {
	grpc.ClientStream
}

func (x *nodeRPCGetDiffClient) Recv() (*GetDiffResponse, error) {
	m := new(GetDiffResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeRPCClient) SetFileChunking(ctx context.Context, in *SetFileChunkingRequest, opts ...grpc.CallOption) (*SetFileChunkingResponse, error) {
	out := new(SetFileChunkingResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/SetFileChunking", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeRPCClient) Watch(ctx context.Context, in *WatchRequest, opts ...grpc.CallOption) (NodeRPC_WatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeRPC_serviceDesc.Streams[9], "/noderpc.NodeRPC/Watch", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeRPCWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeRPC_WatchClient interface {
	Recv() (*WatchResponse, error)
	grpc.ClientStream
}

type nodeRPCWatchClient struct {
	grpc.ClientStream
}

func (x *nodeRPCWatchClient) Recv() (*WatchResponse, error) {
	m := new(WatchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeRPCClient) CreateCommit(ctx context.Context, opts ...grpc.CallOption) (NodeRPC_CreateCommitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeRPC_serviceDesc.Streams[10], "/noderpc.NodeRPC/CreateCommit", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeRPCCreateCommitClient{stream}
	return x, nil
}

type NodeRPC_CreateCommitClient interface {
	Send(*CreateCommitRequest) error
	CloseAndRecv() (*CreateCommitResponse, error)
	grpc.ClientStream
}

type nodeRPCCreateCommitClient struct {
	grpc.ClientStream
}

func (x *nodeRPCCreateCommitClient) Send(m *CreateCommitRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *nodeRPCCreateCommitClient) CloseAndRecv() (*CreateCommitResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(CreateCommitResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeRPCClient) RunPipeline(ctx context.Context, in *RunPipelineRequest, opts ...grpc.CallOption) (*RunPipelineResponse, error) {
	out := new(RunPipelineResponse)
	err := c.cc.Invoke(ctx, "/noderpc.NodeRPC/RunPipeline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeRPCServer is the server API for NodeRPC service.
type NodeRPCServer interface {
	SetUsername(context.Context, *SetUsernameRequest) (*SetUsernameResponse, error)
	GetUsername(context.Context, *GetUsernameRequest) (*GetUsernameResponse, error)
	SetEthereumBIP39Seed(context.Context, *SetEthereumBIP39SeedRequest) (*SetEthereumBIP39SeedResponse, error)
	GetEthereumBIP39Seed(context.Context, *GetEthereumBIP39SeedRequest) (*GetEthereumBIP39SeedResponse, error)
	InitRepo(context.Context, *InitRepoRequest) (*InitRepoResponse, error)
	ImportRepo(context.Context, *ImportRepoRequest) (*ImportRepoResponse, error)
	CheckpointRepo(context.Context, *CheckpointRepoRequest) (*CheckpointRepoResponse, error)
	PullRepo(*PullRepoRequest, NodeRPC_PullRepoServer) error
	CloneRepo(*CloneRepoRequest, NodeRPC_CloneRepoServer) error
	FetchFromCommit(*FetchFromCommitRequest, NodeRPC_FetchFromCommitServer) error
	FetchChunks(*FetchChunksRequest, NodeRPC_FetchChunksServer) error
	RegisterRepoID(context.Context, *RegisterRepoIDRequest) (*RegisterRepoIDResponse, error)
	IsRepoIDRegistered(context.Context, *IsRepoIDRegisteredRequest) (*IsRepoIDRegisteredResponse, error)
	TrackLocalRepo(context.Context, *TrackLocalRepoRequest) (*TrackLocalRepoResponse, error)
	GetLocalRepos(*GetLocalReposRequest, NodeRPC_GetLocalReposServer) error
	SetReplicationPolicy(context.Context, *SetReplicationPolicyRequest) (*SetReplicationPolicyResponse, error)
	AnnounceRepoContent(context.Context, *AnnounceRepoContentRequest) (*AnnounceRepoContentResponse, error)
	GetLocalRefs(context.Context, *GetLocalRefsRequest) (*GetLocalRefsResponse, error)
	GetRemoteRefs(context.Context, *GetRemoteRefsRequest) (*GetRemoteRefsResponse, error)
	IsBehindRemote(context.Context, *IsBehindRemoteRequest) (*IsBehindRemoteResponse, error)
	PushRepo(*PushRepoRequest, NodeRPC_PushRepoServer) error
	RequestReplication(*ReplicationRequest, NodeRPC_RequestReplicationServer) error
	SetRepoPublic(context.Context, *SetRepoPublicRequest) (*SetRepoPublicResponse, error)
	IsRepoPublic(context.Context, *IsRepoPublicRequest) (*IsRepoPublicResponse, error)
	GetUserPermissions(context.Context, *GetUserPermissionsRequest) (*GetUserPermissionsResponse, error)
	SetUserPermissions(context.Context, *SetUserPermissionsRequest) (*SetUserPermissionsResponse, error)
	GetRepoUsers(context.Context, *GetRepoUsersRequest) (*GetRepoUsersResponse, error)
	GetRepoHistory(context.Context, *GetRepoHistoryRequest) (*GetRepoHistoryResponse, error)
	GetUpdatedRefEvents(context.Context, *GetUpdatedRefEventsRequest) (*GetUpdatedRefEventsResponse, error)
	GetRepoFiles(context.Context, *GetRepoFilesRequest) (*GetRepoFilesResponse, error)
	SignMessage(context.Context, *SignMessageRequest) (*SignMessageResponse, error)
	EthAddress(context.Context, *EthAddressRequest) (*EthAddressResponse, error)
	GetObject(*GetObjectRequest, NodeRPC_GetObjectServer) error
	GetDiff(*GetDiffRequest, NodeRPC_GetDiffServer) error
	SetFileChunking(context.Context, *SetFileChunkingRequest) (*SetFileChunkingResponse, error)
	Watch(*WatchRequest, NodeRPC_WatchServer) error
	CreateCommit(NodeRPC_CreateCommitServer) error
	RunPipeline(context.Context, *RunPipelineRequest) (*RunPipelineResponse, error)
}

// UnimplementedNodeRPCServer can be embedded to have forward compatible implementations.
type UnimplementedNodeRPCServer struct {
}

func (*UnimplementedNodeRPCServer) SetUsername(ctx context.Context, req *SetUsernameRequest) (*SetUsernameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUsername not implemented")
}
func (*UnimplementedNodeRPCServer) GetUsername(ctx context.Context, req *GetUsernameRequest) (*GetUsernameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsername not implemented")
}
func (*UnimplementedNodeRPCServer) SetEthereumBIP39Seed(ctx context.Context, req *SetEthereumBIP39SeedRequest) (*SetEthereumBIP39SeedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetEthereumBIP39Seed not implemented")
}
func (*UnimplementedNodeRPCServer) GetEthereumBIP39Seed(ctx context.Context, req *GetEthereumBIP39SeedRequest) (*GetEthereumBIP39SeedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEthereumBIP39Seed not implemented")
}
func (*UnimplementedNodeRPCServer) InitRepo(ctx context.Context, req *InitRepoRequest) (*InitRepoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitRepo not implemented")
}
func (*UnimplementedNodeRPCServer) ImportRepo(ctx context.Context, req *ImportRepoRequest) (*ImportRepoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportRepo not implemented")
}
func (*UnimplementedNodeRPCServer) CheckpointRepo(ctx context.Context, req *CheckpointRepoRequest) (*CheckpointRepoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckpointRepo not implemented")
}
func (*UnimplementedNodeRPCServer) PullRepo(req *PullRepoRequest, srv NodeRPC_PullRepoServer) error {
	return status.Errorf(codes.Unimplemented, "method PullRepo not implemented")
}
func (*UnimplementedNodeRPCServer) CloneRepo(req *CloneRepoRequest, srv NodeRPC_CloneRepoServer) error {
	return status.Errorf(codes.Unimplemented, "method CloneRepo not implemented")
}
func (*UnimplementedNodeRPCServer) FetchFromCommit(req *FetchFromCommitRequest, srv NodeRPC_FetchFromCommitServer) error {
	return status.Errorf(codes.Unimplemented, "method FetchFromCommit not implemented")
}
func (*UnimplementedNodeRPCServer) FetchChunks(req *FetchChunksRequest, srv NodeRPC_FetchChunksServer) error {
	return status.Errorf(codes.Unimplemented, "method FetchChunks not implemented")
}
func (*UnimplementedNodeRPCServer) RegisterRepoID(ctx context.Context, req *RegisterRepoIDRequest) (*RegisterRepoIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterRepoID not implemented")
}
func (*UnimplementedNodeRPCServer) IsRepoIDRegistered(ctx context.Context, req *IsRepoIDRegisteredRequest) (*IsRepoIDRegisteredResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsRepoIDRegistered not implemented")
}
func (*UnimplementedNodeRPCServer) TrackLocalRepo(ctx context.Context, req *TrackLocalRepoRequest) (*TrackLocalRepoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TrackLocalRepo not implemented")
}
func (*UnimplementedNodeRPCServer) GetLocalRepos(req *GetLocalReposRequest, srv NodeRPC_GetLocalReposServer) error {
	return status.Errorf(codes.Unimplemented, "method GetLocalRepos not implemented")
}
func (*UnimplementedNodeRPCServer) SetReplicationPolicy(ctx context.Context, req *SetReplicationPolicyRequest) (*SetReplicationPolicyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetReplicationPolicy not implemented")
}
func (*UnimplementedNodeRPCServer) AnnounceRepoContent(ctx context.Context, req *AnnounceRepoContentRequest) (*AnnounceRepoContentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AnnounceRepoContent not implemented")
}
func (*UnimplementedNodeRPCServer) GetLocalRefs(ctx context.Context, req *GetLocalRefsRequest) (*GetLocalRefsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLocalRefs not implemented")
}
func (*UnimplementedNodeRPCServer) GetRemoteRefs(ctx context.Context, req *GetRemoteRefsRequest) (*GetRemoteRefsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRemoteRefs not implemented")
}
func (*UnimplementedNodeRPCServer) IsBehindRemote(ctx context.Context, req *IsBehindRemoteRequest) (*IsBehindRemoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsBehindRemote not implemented")
}
func (*UnimplementedNodeRPCServer) PushRepo(req *PushRepoRequest, srv NodeRPC_PushRepoServer) error {
	return status.Errorf(codes.Unimplemented, "method PushRepo not implemented")
}
func (*UnimplementedNodeRPCServer) RequestReplication(req *ReplicationRequest, srv NodeRPC_RequestReplicationServer) error {
	return status.Errorf(codes.Unimplemented, "method RequestReplication not implemented")
}
func (*UnimplementedNodeRPCServer) SetRepoPublic(ctx context.Context, req *SetRepoPublicRequest) (*SetRepoPublicResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRepoPublic not implemented")
}
func (*UnimplementedNodeRPCServer) IsRepoPublic(ctx context.Context, req *IsRepoPublicRequest) (*IsRepoPublicResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsRepoPublic not implemented")
}
func (*UnimplementedNodeRPCServer) GetUserPermissions(ctx context.Context, req *GetUserPermissionsRequest) (*GetUserPermissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserPermissions not implemented")
}
func (*UnimplementedNodeRPCServer) SetUserPermissions(ctx context.Context, req *SetUserPermissionsRequest) (*SetUserPermissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUserPermissions not implemented")
}
func (*UnimplementedNodeRPCServer) GetRepoUsers(ctx context.Context, req *GetRepoUsersRequest) (*GetRepoUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRepoUsers not implemented")
}
func (*UnimplementedNodeRPCServer) GetRepoHistory(ctx context.Context, req *GetRepoHistoryRequest) (*GetRepoHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRepoHistory not implemented")
}
func (*UnimplementedNodeRPCServer) GetUpdatedRefEvents(ctx context.Context, req *GetUpdatedRefEventsRequest) (*GetUpdatedRefEventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUpdatedRefEvents not implemented")
}
func (*UnimplementedNodeRPCServer) GetRepoFiles(ctx context.Context, req *GetRepoFilesRequest) (*GetRepoFilesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRepoFiles not implemented")
}
func (*UnimplementedNodeRPCServer) SignMessage(ctx context.Context, req *SignMessageRequest) (*SignMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignMessage not implemented")
}
func (*UnimplementedNodeRPCServer) EthAddress(ctx context.Context, req *EthAddressRequest) (*EthAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EthAddress not implemented")
}
func (*UnimplementedNodeRPCServer) GetObject(req *GetObjectRequest, srv NodeRPC_GetObjectServer) error {
	return status.Errorf(codes.Unimplemented, "method GetObject not implemented")
}
func (*UnimplementedNodeRPCServer) GetDiff(req *GetDiffRequest, srv NodeRPC_GetDiffServer) error {
	return status.Errorf(codes.Unimplemented, "method GetDiff not implemented")
}
func (*UnimplementedNodeRPCServer) SetFileChunking(ctx context.Context, req *SetFileChunkingRequest) (*SetFileChunkingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetFileChunking not implemented")
}
func (*UnimplementedNodeRPCServer) Watch(req *WatchRequest, srv NodeRPC_WatchServer) error {
	return status.Errorf(codes.Unimplemented, "method Watch not implemented")
}
func (*UnimplementedNodeRPCServer) CreateCommit(srv NodeRPC_CreateCommitServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateCommit not implemented")
}
func (*UnimplementedNodeRPCServer) RunPipeline(ctx context.Context, req *RunPipelineRequest) (*RunPipelineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunPipeline not implemented")
}

func RegisterNodeRPCServer(s *grpc.Server, srv NodeRPCServer) {
	s.RegisterService(&_NodeRPC_serviceDesc, srv)
}

func _NodeRPC_SetUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).SetUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/SetUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).SetUsername(ctx, req.(*SetUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_GetUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).GetUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/GetUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).GetUsername(ctx, req.(*GetUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_SetEthereumBIP39Seed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetEthereumBIP39SeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).SetEthereumBIP39Seed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/SetEthereumBIP39Seed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).SetEthereumBIP39Seed(ctx, req.(*SetEthereumBIP39SeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_GetEthereumBIP39Seed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEthereumBIP39SeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).GetEthereumBIP39Seed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/GetEthereumBIP39Seed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).GetEthereumBIP39Seed(ctx, req.(*GetEthereumBIP39SeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_InitRepo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitRepoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).InitRepo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/InitRepo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).InitRepo(ctx, req.(*InitRepoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_ImportRepo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportRepoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).ImportRepo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/ImportRepo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).ImportRepo(ctx, req.(*ImportRepoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_CheckpointRepo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckpointRepoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).CheckpointRepo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/CheckpointRepo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).CheckpointRepo(ctx, req.(*CheckpointRepoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_PullRepo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PullRepoRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeRPCServer).PullRepo(m, &nodeRPCPullRepoServer{stream})
}

type NodeRPC_PullRepoServer interface {
	Send(*PullRepoResponsePacket) error
	grpc.ServerStream
}

type nodeRPCPullRepoServer struct {
	grpc.ServerStream
}

func (x *nodeRPCPullRepoServer) Send(m *PullRepoResponsePacket) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeRPC_CloneRepo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CloneRepoRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeRPCServer).CloneRepo(m, &nodeRPCCloneRepoServer{stream})
}

type NodeRPC_CloneRepoServer interface {
	Send(*CloneRepoResponsePacket) error
	grpc.ServerStream
}

type nodeRPCCloneRepoServer struct {
	grpc.ServerStream
}

func (x *nodeRPCCloneRepoServer) Send(m *CloneRepoResponsePacket) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeRPC_FetchFromCommit_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FetchFromCommitRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeRPCServer).FetchFromCommit(m, &nodeRPCFetchFromCommitServer{stream})
}

type NodeRPC_FetchFromCommitServer interface {
	Send(*FetchFromCommitResponse) error
	grpc.ServerStream
}

type nodeRPCFetchFromCommitServer struct {
	grpc.ServerStream
}

func (x *nodeRPCFetchFromCommitServer) Send(m *FetchFromCommitResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeRPC_FetchChunks_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FetchChunksRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeRPCServer).FetchChunks(m, &nodeRPCFetchChunksServer{stream})
}

type NodeRPC_FetchChunksServer interface {
	Send(*FetchChunksResponse) error
	grpc.ServerStream
}

type nodeRPCFetchChunksServer struct {
	grpc.ServerStream
}

func (x *nodeRPCFetchChunksServer) Send(m *FetchChunksResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeRPC_RegisterRepoID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRepoIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).RegisterRepoID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/RegisterRepoID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).RegisterRepoID(ctx, req.(*RegisterRepoIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_IsRepoIDRegistered_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsRepoIDRegisteredRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).IsRepoIDRegistered(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/IsRepoIDRegistered",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).IsRepoIDRegistered(ctx, req.(*IsRepoIDRegisteredRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_TrackLocalRepo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TrackLocalRepoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).TrackLocalRepo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/TrackLocalRepo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).TrackLocalRepo(ctx, req.(*TrackLocalRepoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_GetLocalRepos_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetLocalReposRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeRPCServer).GetLocalRepos(m, &nodeRPCGetLocalReposServer{stream})
}

type NodeRPC_GetLocalReposServer interface {
	Send(*GetLocalReposResponsePacket) error
	grpc.ServerStream
}

type nodeRPCGetLocalReposServer struct {
	grpc.ServerStream
}

func (x *nodeRPCGetLocalReposServer) Send(m *GetLocalReposResponsePacket) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeRPC_SetReplicationPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetReplicationPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).SetReplicationPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/SetReplicationPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).SetReplicationPolicy(ctx, req.(*SetReplicationPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_AnnounceRepoContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AnnounceRepoContentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).AnnounceRepoContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/AnnounceRepoContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).AnnounceRepoContent(ctx, req.(*AnnounceRepoContentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_GetLocalRefs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLocalRefsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).GetLocalRefs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/GetLocalRefs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).GetLocalRefs(ctx, req.(*GetLocalRefsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_GetRemoteRefs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRemoteRefsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).GetRemoteRefs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/GetRemoteRefs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).GetRemoteRefs(ctx, req.(*GetRemoteRefsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_IsBehindRemote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsBehindRemoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).IsBehindRemote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/IsBehindRemote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).IsBehindRemote(ctx, req.(*IsBehindRemoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_PushRepo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PushRepoRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeRPCServer).PushRepo(m, &nodeRPCPushRepoServer{stream})
}

type NodeRPC_PushRepoServer interface {
	Send(*ProgressPacket) error
	grpc.ServerStream
}

type nodeRPCPushRepoServer struct {
	grpc.ServerStream
}

func (x *nodeRPCPushRepoServer) Send(m *ProgressPacket) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeRPC_RequestReplication_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReplicationRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeRPCServer).RequestReplication(m, &nodeRPCRequestReplicationServer{stream})
}

type NodeRPC_RequestReplicationServer interface {
	Send(*ProgressPacket) error
	grpc.ServerStream
}

type nodeRPCRequestReplicationServer struct {
	grpc.ServerStream
}

func (x *nodeRPCRequestReplicationServer) Send(m *ProgressPacket) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeRPC_SetRepoPublic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRepoPublicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).SetRepoPublic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/SetRepoPublic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).SetRepoPublic(ctx, req.(*SetRepoPublicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_IsRepoPublic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsRepoPublicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).IsRepoPublic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/IsRepoPublic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).IsRepoPublic(ctx, req.(*IsRepoPublicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_GetUserPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserPermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).GetUserPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/GetUserPermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).GetUserPermissions(ctx, req.(*GetUserPermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_SetUserPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUserPermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).SetUserPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/SetUserPermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).SetUserPermissions(ctx, req.(*SetUserPermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_GetRepoUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRepoUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).GetRepoUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/GetRepoUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).GetRepoUsers(ctx, req.(*GetRepoUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_GetRepoHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRepoHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).GetRepoHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/GetRepoHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).GetRepoHistory(ctx, req.(*GetRepoHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_GetUpdatedRefEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUpdatedRefEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).GetUpdatedRefEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/GetUpdatedRefEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).GetUpdatedRefEvents(ctx, req.(*GetUpdatedRefEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_GetRepoFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRepoFilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).GetRepoFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/GetRepoFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).GetRepoFiles(ctx, req.(*GetRepoFilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_SignMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).SignMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/SignMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).SignMessage(ctx, req.(*SignMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_EthAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EthAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).EthAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/EthAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).EthAddress(ctx, req.(*EthAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_GetObject_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetObjectRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeRPCServer).GetObject(m, &nodeRPCGetObjectServer{stream})
}

type NodeRPC_GetObjectServer interface {
	Send(*GetObjectResponse) error
	grpc.ServerStream
}

type nodeRPCGetObjectServer struct {
	grpc.ServerStream
}

func (x *nodeRPCGetObjectServer) Send(m *GetObjectResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeRPC_GetDiff_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetDiffRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeRPCServer).GetDiff(m, &nodeRPCGetDiffServer{stream})
}

type NodeRPC_GetDiffServer interface {
	Send(*GetDiffResponse) error
	grpc.ServerStream
}

type nodeRPCGetDiffServer struct {
	grpc.ServerStream
}

func (x *nodeRPCGetDiffServer) Send(m *GetDiffResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeRPC_SetFileChunking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetFileChunkingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).SetFileChunking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/SetFileChunking",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).SetFileChunking(ctx, req.(*SetFileChunkingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeRPC_Watch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeRPCServer).Watch(m, &nodeRPCWatchServer{stream})
}

type NodeRPC_WatchServer interface {
	Send(*WatchResponse) error
	grpc.ServerStream
}

type nodeRPCWatchServer struct {
	grpc.ServerStream
}

func (x *nodeRPCWatchServer) Send(m *WatchResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeRPC_CreateCommit_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(NodeRPCServer).CreateCommit(&nodeRPCCreateCommitServer{stream})
}

type NodeRPC_CreateCommitServer interface {
	SendAndClose(*CreateCommitResponse) error
	Recv() (*CreateCommitRequest, error)
	grpc.ServerStream
}

type nodeRPCCreateCommitServer struct {
	grpc.ServerStream
}

func (x *nodeRPCCreateCommitServer) SendAndClose(m *CreateCommitResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *nodeRPCCreateCommitServer) Recv() (*CreateCommitRequest, error) {
	m := new(CreateCommitRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _NodeRPC_RunPipeline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunPipelineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeRPCServer).RunPipeline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/noderpc.NodeRPC/RunPipeline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeRPCServer).RunPipeline(ctx, req.(*RunPipelineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "noderpc.NodeRPC",
	HandlerType: (*NodeRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetUsername",
			Handler:    _NodeRPC_SetUsername_Handler,
		},
		{
			MethodName: "GetUsername",
			Handler:    _NodeRPC_GetUsername_Handler,
		},
		{
			MethodName: "SetEthereumBIP39Seed",
			Handler:    _NodeRPC_SetEthereumBIP39Seed_Handler,
		},
		{
			MethodName: "GetEthereumBIP39Seed",
			Handler:    _NodeRPC_GetEthereumBIP39Seed_Handler,
		},
		{
			MethodName: "InitRepo",
			Handler:    _NodeRPC_InitRepo_Handler,
		},
		{
			MethodName: "ImportRepo",
			Handler:    _NodeRPC_ImportRepo_Handler,
		},
		{
			MethodName: "CheckpointRepo",
			Handler:    _NodeRPC_CheckpointRepo_Handler,
		},
		{
			MethodName: "RegisterRepoID",
			Handler:    _NodeRPC_RegisterRepoID_Handler,
		},
		{
			MethodName: "IsRepoIDRegistered",
			Handler:    _NodeRPC_IsRepoIDRegistered_Handler,
		},
		{
			MethodName: "TrackLocalRepo",
			Handler:    _NodeRPC_TrackLocalRepo_Handler,
		},
		{
			MethodName: "SetReplicationPolicy",
			Handler:    _NodeRPC_SetReplicationPolicy_Handler,
		},
		{
			MethodName: "AnnounceRepoContent",
			Handler:    _NodeRPC_AnnounceRepoContent_Handler,
		},
		{
			MethodName: "GetLocalRefs",
			Handler:    _NodeRPC_GetLocalRefs_Handler,
		},
		{
			MethodName: "GetRemoteRefs",
			Handler:    _NodeRPC_GetRemoteRefs_Handler,
		},
		{
			MethodName: "IsBehindRemote",
			Handler:    _NodeRPC_IsBehindRemote_Handler,
		},
		{
			MethodName: "SetRepoPublic",
			Handler:    _NodeRPC_SetRepoPublic_Handler,
		},
		{
			MethodName: "IsRepoPublic",
			Handler:    _NodeRPC_IsRepoPublic_Handler,
		},
		{
			MethodName: "GetUserPermissions",
			Handler:    _NodeRPC_GetUserPermissions_Handler,
		},
		{
			MethodName: "SetUserPermissions",
			Handler:    _NodeRPC_SetUserPermissions_Handler,
		},
		{
			MethodName: "GetRepoUsers",
			Handler:    _NodeRPC_GetRepoUsers_Handler,
		},
		{
			MethodName: "GetRepoHistory",
			Handler:    _NodeRPC_GetRepoHistory_Handler,
		},
		{
			MethodName: "GetUpdatedRefEvents",
			Handler:    _NodeRPC_GetUpdatedRefEvents_Handler,
		},
		{
			MethodName: "GetRepoFiles",
			Handler:    _NodeRPC_GetRepoFiles_Handler,
		},
		{
			MethodName: "SignMessage",
			Handler:    _NodeRPC_SignMessage_Handler,
		},
		{
			MethodName: "EthAddress",
			Handler:    _NodeRPC_EthAddress_Handler,
		},
		{
			MethodName: "SetFileChunking",
			Handler:    _NodeRPC_SetFileChunking_Handler,
		},
		{
			MethodName: "RunPipeline",
			Handler:    _NodeRPC_RunPipeline_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PullRepo",
			Handler:       _NodeRPC_PullRepo_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CloneRepo",
			Handler:       _NodeRPC_CloneRepo_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "FetchFromCommit",
			Handler:       _NodeRPC_FetchFromCommit_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "FetchChunks",
			Handler:       _NodeRPC_FetchChunks_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetLocalRepos",
			Handler:       _NodeRPC_GetLocalRepos_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "PushRepo",
			Handler:       _NodeRPC_PushRepo_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "RequestReplication",
			Handler:       _NodeRPC_RequestReplication_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetObject",
			Handler:       _NodeRPC_GetObject_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetDiff",
			Handler:       _NodeRPC_GetDiff_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Watch",
			Handler:       _NodeRPC_Watch_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CreateCommit",
			Handler:       _NodeRPC_CreateCommit_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "noderpc.proto",
}
