
syntax = "proto3";

package noderpc;

option go_package = "pb";

service NodeRPC {
  rpc SetUsername(SetUsernameRequest) returns (SetUsernameResponse) {}
  rpc GetUsername(GetUsernameRequest) returns (GetUsernameResponse) {}

  rpc InitRepo(InitRepoRequest) returns (InitRepoResponse) {}
  rpc CheckpointRepo(CheckpointRepoRequest) returns (CheckpointRepoResponse) {}
  rpc PullRepo(PullRepoRequest) returns (PullRepoResponse) {}
  rpc CloneRepo(CloneRepoRequest) returns (CloneRepoResponse) {}
  rpc GetObject(GetObjectRequest) returns (stream GetObjectResponsePacket) {}
  rpc RegisterRepoID(RegisterRepoIDRequest) returns (RegisterRepoIDResponse) {}
  rpc TrackLocalRepo(TrackLocalRepoRequest) returns (TrackLocalRepoResponse) {}
  rpc GetLocalRepos(GetLocalReposRequest) returns (stream GetLocalReposResponsePacket) {}
  rpc SetReplicationPolicy(SetReplicationPolicyRequest) returns (SetReplicationPolicyResponse) {}
  rpc AnnounceRepoContent(AnnounceRepoContentRequest) returns (AnnounceRepoContentResponse) {}
  rpc GetLocalRefs(GetLocalRefsRequest) returns (GetLocalRefsResponse) {}
  rpc GetRemoteRefs(GetRemoteRefsRequest) returns (GetRemoteRefsResponse) {}
  rpc IsBehindRemote(IsBehindRemoteRequest) returns (IsBehindRemoteResponse) {}
  rpc GetRepoUsers(GetRepoUsersRequest) returns (GetRepoUsersResponse) {}
  rpc UpdateRef(UpdateRefRequest) returns (UpdateRefResponse) {}
  rpc RequestReplication(ReplicationRequest) returns (ReplicationResponse) {}

  rpc GetRepoHistory(GetRepoHistoryRequest) returns (GetRepoHistoryResponse) {}
  rpc GetRepoFiles(GetRepoFilesRequest) returns (GetRepoFilesResponse) {}
  rpc RepoHasObject(RepoHasObjectRequest) returns (RepoHasObjectResponse) {}
  rpc SignMessage(SignMessageRequest) returns (SignMessageResponse) {}
  rpc EthAddress(EthAddressRequest) returns (EthAddressResponse) {}
  rpc SetUserPermissions(SetUserPermissionsRequest) returns (SetUserPermissionsResponse) {}
}

message SetUsernameRequest {
    string username = 1;
}

message SetUsernameResponse {
    bytes signature = 2;
}

message GetUsernameRequest {}

message GetUsernameResponse {
    string username = 1;
    bytes signature = 2;
}

message InitRepoRequest {
    string repoID = 1;
    string path = 2;
    string name = 3;
    string email = 4;
}

message InitRepoResponse {
    string path = 1;
}

message CheckpointRepoRequest {
    string path = 1;
    string message = 2;
}

message CheckpointRepoResponse {
    bool ok = 1;
}

message PullRepoRequest {
    string path = 1;
}

message PullRepoResponse {
    bool ok = 1;
}

message CloneRepoRequest {
    string repoID = 1;
    string path = 2;
    string name = 3;
    string email = 4;
}

message CloneRepoResponse {
    string path = 1;
}

message GetObjectRequest {
    string repoID = 1;
    bytes objectID = 2;
}

message GetObjectResponsePacket {
    bytes data = 1;
}

message RegisterRepoIDRequest {
    string repoID = 1;
}

message RegisterRepoIDResponse {}

message TrackLocalRepoRequest {
    string repoPath = 1;
}

message TrackLocalRepoResponse {}

message GetLocalReposRequest {}

message GetLocalReposResponsePacket {
    string repoID = 1;
    string path = 2;
}

message SetReplicationPolicyRequest {
    string repoID = 1;
    bool shouldReplicate = 2;
}

message SetReplicationPolicyResponse {}

message AnnounceRepoContentRequest {
    string repoID = 1;
}

message AnnounceRepoContentResponse {}

message Ref {
    string refName = 1;
    string commitHash = 2;
}

message GetLocalRefsRequest {
    string repoID = 1;
    string path = 2;
}

message GetLocalRefsResponse {
    string path = 1;
    repeated Ref refs = 2;
}

message GetRemoteRefsRequest {
    string repoID = 1;
    uint64 pageSize = 2;
    uint64 page = 3;
}

message GetRemoteRefsResponse {
    uint64 total = 1;
    repeated Ref refs = 2;
}

message IsBehindRemoteRequest {
    string repoID = 1;
    string path = 2;
}

message IsBehindRemoteResponse {
    string repoID = 1;
    bool isBehindRemote = 2;
}

message UpdateRefRequest {
    string repoID = 1;
    string refName = 2;
    string commitHash = 3;
}

message UpdateRefResponse {}

message GetRepoUsersRequest {
    string repoID = 1;
    uint64 type = 2;
    uint64 pageSize = 3;
    uint64 page = 4;
}

message GetRepoUsersResponse {
    uint64 total = 1;
    repeated string users = 2;
}

message ReplicationRequest {
    string repoID = 1;
}

message ReplicationResponse {}

message GetRepoHistoryRequest {
    string repoID = 1;
    string path = 2;
    uint64 page = 3;
}

message Commit {
    string commitHash = 1;
    string author = 2;
    string message = 3;
    uint64 timestamp = 4;
    repeated string files = 5;
    uint64 verified = 6;
}

message GetRepoHistoryResponse {
    repeated Commit commits = 1;
}

message GetRepoFilesRequest {
    string repoID = 1;
    string path = 2;
}

message File {
    string name = 1;
    bytes hash = 2;
    uint32 mode = 3;
    uint64 size = 4;
    uint32 modified = 5;
    string unstagedStatus = 6;
    string stagedStatus = 7;
}

message GetRepoFilesResponse {
    repeated File files = 1;
}

message RepoHasObjectRequest {
    string repoID = 1;
    string path = 2;
    bytes objectID = 3;
}

message RepoHasObjectResponse {
    bool hasObject = 1;
}

message SignMessageRequest {
    bytes message = 1;
}

message SignMessageResponse {
    bytes signature = 1;
}

message EthAddressRequest {}

message EthAddressResponse {
    string address = 1;
}

message SetUserPermissionsRequest {
    string repoID = 1;
    string username = 2;
    bool puller = 3;
    bool pusher = 4;
    bool admin = 5;
}

message SetUserPermissionsResponse {}
